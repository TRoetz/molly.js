(function(){var e=this,t=e._,n={},r=Array.prototype,i=Object.prototype,s=Function.prototype,o=r.push,u=r.slice,a=r.concat,f=i.toString,l=i.hasOwnProperty,c=r.forEach,h=r.map,p=r.reduce,d=r.reduceRight,v=r.filter,m=r.every,g=r.some,y=r.indexOf,b=r.lastIndexOf,w=Array.isArray,E=Object.keys,S=s.bind,x=function(e){return e instanceof x?e:this instanceof x?(this._wrapped=e,void 0):new x(e)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=x),exports._=x):e._=x,x.VERSION="1.4.3";var T=x.each=x.forEach=function(e,t,r){if(null!=e)if(c&&e.forEach===c)e.forEach(t,r);else if(e.length===+e.length){for(var i=0,s=e.length;s>i;i++)if(t.call(r,e[i],i,e)===n)return}else for(var o in e)if(x.has(e,o)&&t.call(r,e[o],o,e)===n)return};x.map=x.collect=function(e,t,n){var r=[];return null==e?r:h&&e.map===h?e.map(t,n):(T(e,function(e,i,s){r[r.length]=t.call(n,e,i,s)}),r)};var N="Reduce of empty array with no initial value";x.reduce=x.foldl=x.inject=function(e,t,n,r){var i=arguments.length>2;if(null==e&&(e=[]),p&&e.reduce===p)return r&&(t=x.bind(t,r)),i?e.reduce(t,n):e.reduce(t);if(T(e,function(e,s,o){i?n=t.call(r,n,e,s,o):(n=e,i=!0)}),!i)throw new TypeError(N);return n},x.reduceRight=x.foldr=function(e,t,n,r){var i=arguments.length>2;if(null==e&&(e=[]),d&&e.reduceRight===d)return r&&(t=x.bind(t,r)),i?e.reduceRight(t,n):e.reduceRight(t);var s=e.length;if(s!==+s){var o=x.keys(e);s=o.length}if(T(e,function(u,a,f){a=o?o[--s]:--s,i?n=t.call(r,n,e[a],a,f):(n=e[a],i=!0)}),!i)throw new TypeError(N);return n},x.find=x.detect=function(e,t,n){var r;return C(e,function(e,i,s){return t.call(n,e,i,s)?(r=e,!0):void 0}),r},x.filter=x.select=function(e,t,n){var r=[];return null==e?r:v&&e.filter===v?e.filter(t,n):(T(e,function(e,i,s){t.call(n,e,i,s)&&(r[r.length]=e)}),r)},x.reject=function(e,t,n){return x.filter(e,function(e,r,i){return!t.call(n,e,r,i)},n)},x.every=x.all=function(e,t,r){t||(t=x.identity);var i=!0;return null==e?i:m&&e.every===m?e.every(t,r):(T(e,function(e,s,o){return(i=i&&t.call(r,e,s,o))?void 0:n}),!!i)};var C=x.some=x.any=function(e,t,r){t||(t=x.identity);var i=!1;return null==e?i:g&&e.some===g?e.some(t,r):(T(e,function(e,s,o){return i||(i=t.call(r,e,s,o))?n:void 0}),!!i)};x.contains=x.include=function(e,t){return null==e?!1:y&&e.indexOf===y?-1!=e.indexOf(t):C(e,function(e){return e===t})},x.invoke=function(e,t){var n=u.call(arguments,2);return x.map(e,function(e){return(x.isFunction(t)?t:e[t]).apply(e,n)})},x.pluck=function(e,t){return x.map(e,function(e){return e[t]})},x.where=function(e,t){return x.isEmpty(t)?[]:x.filter(e,function(e){for(var n in t)if(t[n]!==e[n])return!1;return!0})},x.max=function(e,t,n){if(!t&&x.isArray(e)&&e[0]===+e[0]&&65535>e.length)return Math.max.apply(Math,e);if(!t&&x.isEmpty(e))return-1/0;var r={computed:-1/0,value:-1/0};return T(e,function(e,i,s){var o=t?t.call(n,e,i,s):e;o>=r.computed&&(r={value:e,computed:o})}),r.value},x.min=function(e,t,n){if(!t&&x.isArray(e)&&e[0]===+e[0]&&65535>e.length)return Math.min.apply(Math,e);if(!t&&x.isEmpty(e))return 1/0;var r={computed:1/0,value:1/0};return T(e,function(e,i,s){var o=t?t.call(n,e,i,s):e;r.computed>o&&(r={value:e,computed:o})}),r.value},x.shuffle=function(e){var t,n=0,r=[];return T(e,function(e){t=x.random(n++),r[n-1]=r[t],r[t]=e}),r};var k=function(e){return x.isFunction(e)?e:function(t){return t[e]}};x.sortBy=function(e,t,n){var r=k(t);return x.pluck(x.map(e,function(e,t,i){return{value:e,index:t,criteria:r.call(n,e,t,i)}}).sort(function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(r>n||void 0===r)return-1}return e.index<t.index?-1:1}),"value")};var L=function(e,t,n,r){var i={},s=k(t||x.identity);return T(e,function(t,o){var u=s.call(n,t,o,e);r(i,u,t)}),i};x.groupBy=function(e,t,n){return L(e,t,n,function(e,t,n){(x.has(e,t)?e[t]:e[t]=[]).push(n)})},x.countBy=function(e,t,n){return L(e,t,n,function(e,t){x.has(e,t)||(e[t]=0),e[t]++})},x.sortedIndex=function(e,t,n,r){n=null==n?x.identity:k(n);for(var i=n.call(r,t),s=0,o=e.length;o>s;){var u=s+o>>>1;i>n.call(r,e[u])?s=u+1:o=u}return s},x.toArray=function(e){return e?x.isArray(e)?u.call(e):e.length===+e.length?x.map(e,x.identity):x.values(e):[]},x.size=function(e){return null==e?0:e.length===+e.length?e.length:x.keys(e).length},x.first=x.head=x.take=function(e,t,n){return null==e?void 0:null==t||n?e[0]:u.call(e,0,t)},x.initial=function(e,t,n){return u.call(e,0,e.length-(null==t||n?1:t))},x.last=function(e,t,n){return null==e?void 0:null==t||n?e[e.length-1]:u.call(e,Math.max(e.length-t,0))},x.rest=x.tail=x.drop=function(e,t,n){return u.call(e,null==t||n?1:t)},x.compact=function(e){return x.filter(e,x.identity)};var A=function(e,t,n){return T(e,function(e){x.isArray(e)?t?o.apply(n,e):A(e,t,n):n.push(e)}),n};x.flatten=function(e,t){return A(e,t,[])},x.without=function(e){return x.difference(e,u.call(arguments,1))},x.uniq=x.unique=function(e,t,n,r){x.isFunction(t)&&(r=n,n=t,t=!1);var i=n?x.map(e,n,r):e,s=[],o=[];return T(i,function(n,r){(t?r&&o[o.length-1]===n:x.contains(o,n))||(o.push(n),s.push(e[r]))}),s},x.union=function(){return x.uniq(a.apply(r,arguments))},x.intersection=function(e){var t=u.call(arguments,1);return x.filter(x.uniq(e),function(e){return x.every(t,function(t){return x.indexOf(t,e)>=0})})},x.difference=function(e){var t=a.apply(r,u.call(arguments,1));return x.filter(e,function(e){return!x.contains(t,e)})},x.zip=function(){for(var e=u.call(arguments),t=x.max(x.pluck(e,"length")),n=Array(t),r=0;t>r;r++)n[r]=x.pluck(e,""+r);return n},x.object=function(e,t){if(null==e)return{};for(var n={},r=0,i=e.length;i>r;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n},x.indexOf=function(e,t,n){if(null==e)return-1;var r=0,i=e.length;if(n){if("number"!=typeof n)return r=x.sortedIndex(e,t),e[r]===t?r:-1;r=0>n?Math.max(0,i+n):n}if(y&&e.indexOf===y)return e.indexOf(t,n);for(;i>r;r++)if(e[r]===t)return r;return-1},x.lastIndexOf=function(e,t,n){if(null==e)return-1;var r=null!=n;if(b&&e.lastIndexOf===b)return r?e.lastIndexOf(t,n):e.lastIndexOf(t);for(var i=r?n:e.length;i--;)if(e[i]===t)return i;return-1},x.range=function(e,t,n){1>=arguments.length&&(t=e||0,e=0),n=arguments[2]||1;for(var r=Math.max(Math.ceil((t-e)/n),0),i=0,s=Array(r);r>i;)s[i++]=e,e+=n;return s};var O=function(){};x.bind=function(e,t){var n,r;if(e.bind===S&&S)return S.apply(e,u.call(arguments,1));if(!x.isFunction(e))throw new TypeError;return n=u.call(arguments,2),r=function(){if(this instanceof r){O.prototype=e.prototype;var i=new O;O.prototype=null;var s=e.apply(i,n.concat(u.call(arguments)));return Object(s)===s?s:i}return e.apply(t,n.concat(u.call(arguments)))}},x.bindAll=function(e){var t=u.call(arguments,1);return 0==t.length&&(t=x.functions(e)),T(t,function(t){e[t]=x.bind(e[t],e)}),e},x.memoize=function(e,t){var n={};return t||(t=x.identity),function(){var r=t.apply(this,arguments);return x.has(n,r)?n[r]:n[r]=e.apply(this,arguments)}},x.delay=function(e,t){var n=u.call(arguments,2);return setTimeout(function(){return e.apply(null,n)},t)},x.defer=function(e){return x.delay.apply(x,[e,1].concat(u.call(arguments,1)))},x.throttle=function(e,t){var n,r,i,s,o=0,u=function(){o=new Date,i=null,s=e.apply(n,r)};return function(){var a=new Date,f=t-(a-o);return n=this,r=arguments,0>=f?(clearTimeout(i),i=null,o=a,s=e.apply(n,r)):i||(i=setTimeout(u,f)),s}},x.debounce=function(e,t,n){var r,i;return function(){var s=this,o=arguments,u=function(){r=null,n||(i=e.apply(s,o))},a=n&&!r;return clearTimeout(r),r=setTimeout(u,t),a&&(i=e.apply(s,o)),i}},x.once=function(e){var t,n=!1;return function(){return n?t:(n=!0,t=e.apply(this,arguments),e=null,t)}},x.wrap=function(e,t){return function(){var n=[e];return o.apply(n,arguments),t.apply(this,n)}},x.compose=function(){var e=arguments;return function(){for(var t=arguments,n=e.length-1;n>=0;n--)t=[e[n].apply(this,t)];return t[0]}},x.after=function(e,t){return 0>=e?t():function(){return 1>--e?t.apply(this,arguments):void 0}},x.keys=E||function(e){if(e!==Object(e))throw new TypeError("Invalid object");var t=[];for(var n in e)x.has(e,n)&&(t[t.length]=n);return t},x.values=function(e){var t=[];for(var n in e)x.has(e,n)&&t.push(e[n]);return t},x.pairs=function(e){var t=[];for(var n in e)x.has(e,n)&&t.push([n,e[n]]);return t},x.invert=function(e){var t={};for(var n in e)x.has(e,n)&&(t[e[n]]=n);return t},x.functions=x.methods=function(e){var t=[];for(var n in e)x.isFunction(e[n])&&t.push(n);return t.sort()},x.extend=function(e){return T(u.call(arguments,1),function(t){if(t)for(var n in t)e[n]=t[n]}),e},x.pick=function(e){var t={},n=a.apply(r,u.call(arguments,1));return T(n,function(n){n in e&&(t[n]=e[n])}),t},x.omit=function(e){var t={},n=a.apply(r,u.call(arguments,1));for(var i in e)x.contains(n,i)||(t[i]=e[i]);return t},x.defaults=function(e){return T(u.call(arguments,1),function(t){if(t)for(var n in t)null==e[n]&&(e[n]=t[n])}),e},x.clone=function(e){return x.isObject(e)?x.isArray(e)?e.slice():x.extend({},e):e},x.tap=function(e,t){return t(e),e};var M=function(e,t,n,r){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return e===t;e instanceof x&&(e=e._wrapped),t instanceof x&&(t=t._wrapped);var i=f.call(e);if(i!=f.call(t))return!1;switch(i){case"[object String]":return e==t+"";case"[object Number]":return e!=+e?t!=+t:0==e?1/e==1/t:e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object RegExp]":return e.source==t.source&&e.global==t.global&&e.multiline==t.multiline&&e.ignoreCase==t.ignoreCase}if("object"!=typeof e||"object"!=typeof t)return!1;for(var s=n.length;s--;)if(n[s]==e)return r[s]==t;n.push(e),r.push(t);var o=0,u=!0;if("[object Array]"==i){if(o=e.length,u=o==t.length)for(;o--&&(u=M(e[o],t[o],n,r)););}else{var a=e.constructor,l=t.constructor;if(a!==l&&!(x.isFunction(a)&&a instanceof a&&x.isFunction(l)&&l instanceof l))return!1;for(var c in e)if(x.has(e,c)&&(o++,!(u=x.has(t,c)&&M(e[c],t[c],n,r))))break;if(u){for(c in t)if(x.has(t,c)&&!(o--))break;u=!o}}return n.pop(),r.pop(),u};x.isEqual=function(e,t){return M(e,t,[],[])},x.isEmpty=function(e){if(null==e)return!0;if(x.isArray(e)||x.isString(e))return 0===e.length;for(var t in e)if(x.has(e,t))return!1;return!0},x.isElement=function(e){return!!e&&1===e.nodeType},x.isArray=w||function(e){return"[object Array]"==f.call(e)},x.isObject=function(e){return e===Object(e)},T(["Arguments","Function","String","Number","Date","RegExp"],function(e){x["is"+e]=function(t){return f.call(t)=="[object "+e+"]"}}),x.isArguments(arguments)||(x.isArguments=function(e){return!!e&&!!x.has(e,"callee")}),x.isFunction=function(e){return"function"==typeof e},x.isFinite=function(e){return isFinite(e)&&!isNaN(parseFloat(e))},x.isNaN=function(e){return x.isNumber(e)&&e!=+e},x.isBoolean=function(e){return e===!0||e===!1||"[object Boolean]"==f.call(e)},x.isNull=function(e){return null===e},x.isUndefined=function(e){return void 0===e},x.has=function(e,t){return l.call(e,t)},x.noConflict=function(){return e._=t,this},x.identity=function(e){return e},x.times=function(e,t,n){for(var r=Array(e),i=0;e>i;i++)r[i]=t.call(n,i);return r},x.random=function(e,t){return null==t&&(t=e,e=0),e+(0|Math.random()*(t-e+1))};var _={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};_.unescape=x.invert(_.escape);var D={escape:RegExp("["+x.keys(_.escape).join("")+"]","g"),unescape:RegExp("("+x.keys(_.unescape).join("|")+")","g")};x.each(["escape","unescape"],function(e){x[e]=function(t){return null==t?"":(""+t).replace(D[e],function(t){return _[e][t]})}}),x.result=function(e,t){if(null==e)return null;var n=e[t];return x.isFunction(n)?n.call(e):n},x.mixin=function(e){T(x.functions(e),function(t){var n=x[t]=e[t];x.prototype[t]=function(){var e=[this._wrapped];return o.apply(e,arguments),F.call(this,n.apply(x,e))}})};var P=0;x.uniqueId=function(e){var t=""+ ++P;return e?e+t:t},x.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var H=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},j=/\\|'|\r|\n|\t|\u2028|\u2029/g;x.template=function(e,t,n){n=x.defaults({},n,x.templateSettings);var r=RegExp([(n.escape||H).source,(n.interpolate||H).source,(n.evaluate||H).source].join("|")+"|$","g"),i=0,s="__p+='";e.replace(r,function(t,n,r,o,u){return s+=e.slice(i,u).replace(j,function(e){return"\\"+B[e]}),n&&(s+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'"),r&&(s+="'+\n((__t=("+r+"))==null?'':__t)+\n'"),o&&(s+="';\n"+o+"\n__p+='"),i=u+t.length,t}),s+="';\n",n.variable||(s="with(obj||{}){\n"+s+"}\n"),s="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+s+"return __p;\n";try{var o=Function(n.variable||"obj","_",s)}catch(u){throw u.source=s,u}if(t)return o(t,x);var a=function(e){return o.call(this,e,x)};return a.source="function("+(n.variable||"obj")+"){\n"+s+"}",a},x.chain=function(e){return x(e).chain()};var F=function(e){return this._chain?x(e).chain():e};x.mixin(x),T(["pop","push","reverse","shift","sort","splice","unshift"],function(e){var t=r[e];x.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!=e&&"splice"!=e||0!==n.length||delete n[0],F.call(this,n)}}),T(["concat","join","slice"],function(e){var t=r[e];x.prototype[e]=function(){return F.call(this,t.apply(this._wrapped,arguments))}}),x.extend(x.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}}),"function"==typeof define&&define.amd&&define("underscore",[],function(){return x})}).call(this),define("getAtoms",["underscore"],function(e){return function(t){var n=t["_chem_comp_atom.type_symbol"],r=t["_chem_comp_atom.pdbx_model_Cartn_x_ideal"],i=t["_chem_comp_atom.pdbx_model_Cartn_y_ideal"],s=t["_chem_comp_atom.pdbx_model_Cartn_z_ideal"],o=t["_chem_comp_atom.pdbx_component_atom_id"],u=e.zip(r,i,s,n,o),a=15,f={};return e.each(u,function(e){var t=parseFloat((e[0]*a).toFixed(3)),n=parseFloat((e[1]*a).toFixed(3)),r=parseFloat((e[2]*a).toFixed(3)),i=e[3],s=e[4];f[s]={x:t,y:n,z:r,element:i}}),f}}),define("getBonds",["underscore"],function(e){return function(t){var n=t["_chem_comp_bond.atom_id_1"],r=t["_chem_comp_bond.atom_id_2"],i=t["_chem_comp_bond.value_order"],s=e.zip(n,r,i),o=e.map(s,function(e){return{atom1:e[0],atom2:e[1],bondType:e[2]}});return o}});var THREE=THREE||{REVISION:"55"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var e=String(e),t=this.lastIndexOf(e);return(-1<t&&t)===this.length-e.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[t[n]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[n]+"CancelAnimationFrame"]||window[t[n]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var n=Date.now(),r=Math.max(0,16-(n-e)),i=window.setTimeout(function(){t(n+r)},r);return e=n+r,i}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSV:function(e,t,n){var r,i,s;return 0===n?this.r=this.g=this.b=0:(r=Math.floor(6*e),i=6*e-r,e=n*(1-t),s=n*(1-t*i),t=n*(1-t*(1-i)),0===r?(this.r=n,this.g=t,this.b=e):1===r?(this.r=s,this.g=n,this.b=e):2===r?(this.r=e,this.g=n,this.b=t):3===r?(this.r=e,this.g=s,this.b=n):4===r?(this.r=t,this.g=e,this.b=n):5===r&&(this.r=n,this.g=e,this.b=s)),this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e))return e=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e))return e=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(e))return e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e))return e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this;if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},getHSV:function(e){var t=this.r,n=this.g,r=this.b,i=Math.max(Math.max(t,n),r),s=Math.min(Math.min(t,n),r);if(s===i)s=t=0;else{var o=i-s,s=o/i,t=(t===i?(n-r)/o:n===i?2+(r-t)/o:4+(t-n)/o)/6;0>t&&(t+=1),1<t&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=s,e.v=i,e},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var n=Math.cos(e.x/2),r=Math.cos(e.y/2),i=Math.cos(e.z/2),s=Math.sin(e.x/2),o=Math.sin(e.y/2),u=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i-s*o*u):"YXZ"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i+s*o*u):"ZXY"===t?(this.x=s*r*i-n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i-s*o*u):"ZYX"===t?(this.x=s*r*i-n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i+s*o*u):"YZX"===t?(this.x=s*r*i+n*o*u,this.y=n*o*i+s*r*u,this.z=n*r*u-s*o*i,this.w=n*r*i-s*o*u):"XZY"===t&&(this.x=s*r*i-n*o*u,this.y=n*o*i-s*r*u,this.z=n*r*u+s*o*i,this.w=n*r*i+s*o*u),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(n),this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],e=t[4],r=t[8],i=t[1],s=t[5],o=t[9],u=t[2],a=t[6],t=t[10],f=n+s+t;return 0<f?(n=.5/Math.sqrt(f+1),this.w=.25/n,this.x=(a-o)*n,this.y=(r-u)*n,this.z=(i-e)*n):n>s&&n>t?(n=2*Math.sqrt(1+n-s-t),this.w=(a-o)/n,this.x=.25*n,this.y=(e+i)/n,this.z=(r+u)/n):s>t?(n=2*Math.sqrt(1+s-n-t),this.w=(r-u)/n,this.x=(e+i)/n,this.y=.25*n,this.z=(o+a)/n):(n=2*Math.sqrt(1+t-n-s),this.w=(i-e)/n,this.x=(r+u)/n,this.y=(o+a)/n,this.z=.25*n),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.z=this.y=this.x=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e.x,r=e.y,i=e.z,s=e.w,o=t.x,u=t.y,a=t.z,f=t.w;return this.x=n*f+s*o+r*a-i*u,this.y=r*f+s*u+i*o-n*a,this.z=i*f+s*a+n*u-r*o,this.w=s*f-n*o-r*u-i*a,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var n=this.x,r=this.y,i=this.z,s=this.w,o=s*e.w+n*e.x+r*e.y+i*e.z;0>o?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,o=-o):this.copy(e);if(1<=o)return this.w=s,this.x=n,this.y=r,this.z=i,this;var u=Math.acos(o),a=Math.sqrt(1-o*o);return.001>Math.abs(a)?(this.w=.5*(s+this.w),this.x=.5*(n+this.x),this.y=.5*(r+this.y),this.z=.5*(i+this.z),this):(o=Math.sin((1-t)*u)/a,u=Math.sin(t*u)/a,this.w=s*o+this.w*u,this.x=n*o+this.x*u,this.y=r*o+this.y*u,this.z=i*o+this.z*u,this)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*r,this.y=e[1]*t+e[4]*n+e[7]*r,this.z=e[2]*t+e[5]*n+e[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12],this.y=e[1]*t+e[5]*n+e[9]*r+e[13],this.z=e[2]*t+e[6]*n+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements,i=1/(e[3]*t+e[7]*n+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*n+e[8]*r+e[12])*i,this.y=(e[1]*t+e[5]*n+e[9]*r+e[13])*i,this.z=(e[2]*t+e[6]*n+e[10]*r+e[14])*i,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,o=e.z,e=e.w,u=e*t+s*r-o*n,a=e*n+o*t-i*r,f=e*r+i*n-s*t,t=-i*t-s*n-o*r;return this.x=u*e+t*-i+a*-o-f*-s,this.y=a*e+t*-s+f*-i-u*-o,this.z=f*e+t*-o+u*-s-a*-i,this},applyEuler:function(e,t){var n=THREE.Vector3.__q1.setFromEuler(e,t);return this.applyQuaternion(n),this},applyAxisAngle:function(e,t){var n=THREE.Vector3.__q1.setFromAxisAngle(e,t);return this.applyQuaternion(n),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function n(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,i=r[0],s=r[4],o=r[8],u=r[1],a=r[5],f=r[9],l=r[2],c=r[6],r=r[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(n(o)),.99999>Math.abs(o)?(this.x=Math.atan2(-f,r),this.z=Math.atan2(-s,i)):(this.x=Math.atan2(c,a),this.z=0)):"YXZ"===t?(this.x=Math.asin(-n(f)),.99999>Math.abs(f)?(this.y=Math.atan2(o,r),this.z=Math.atan2(u,a)):(this.y=Math.atan2(-l,i),this.z=0)):"ZXY"===t?(this.x=Math.asin(n(c)),.99999>Math.abs(c)?(this.y=Math.atan2(-l,r),this.z=Math.atan2(-s,a)):(this.y=0,this.z=Math.atan2(u,i))):"ZYX"===t?(this.y=Math.asin(-n(l)),.99999>Math.abs(l)?(this.x=Math.atan2(c,r),this.z=Math.atan2(u,i)):(this.x=0,this.z=Math.atan2(-s,a))):"YZX"===t?(this.z=Math.asin(n(u)),.99999>Math.abs(u)?(this.x=Math.atan2(-f,a),this.y=Math.atan2(-l,i)):(this.x=0,this.y=Math.atan2(o,r))):"XZY"===t&&(this.z=Math.asin(-n(s)),.99999>Math.abs(s)?(this.x=Math.atan2(c,a),this.y=Math.atan2(o,i)):(this.x=Math.atan2(-f,r),this.y=0)),this},setEulerFromQuaternion:function(e,t){function n(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,i=e.y*e.y,s=e.z*e.z,o=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),o-r-i+s),this.y=Math.asin(n(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o+r-i-s)):"YXZ"===t?(this.x=Math.asin(n(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o-r-i+s),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o-r+i-s)):"ZXY"===t?(this.x=Math.asin(n(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),o-r-i+s),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o-r+i-s)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),o-r-i+s),this.y=Math.asin(n(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o+r-i-s)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),o-r+i-s),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),o+r-i-s),this.z=Math.asin(n(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),o-r+i-s),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o+r-i-s),this.z=Math.asin(n(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=n,this.z=e,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector3.__q1=new THREE.Quaternion,THREE.Vector4=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i,this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i,this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i,this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.z=this.y=this.x=0,this.w=1),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,e=e.elements,i=e[0];r=e[4];var s=e[8],o=e[1],u=e[5],a=e[9];n=e[2],t=e[6];var f=e[10];return.01>Math.abs(r-o)&&.01>Math.abs(s-n)&&.01>Math.abs(a-t)?.1>Math.abs(r+o)&&.1>Math.abs(s+n)&&.1>Math.abs(a+t)&&.1>Math.abs(i+u+f-3)?(this.set(1,0,0,0),this):(e=Math.PI,i=(i+1)/2,u=(u+1)/2,f=(f+1)/2,r=(r+o)/4,s=(s+n)/4,a=(a+t)/4,i>u&&i>f?.01>i?(t=0,r=n=.707106781):(t=Math.sqrt(i),n=r/t,r=s/t):u>f?.01>u?(t=.707106781,n=0,r=.707106781):(n=Math.sqrt(u),t=r/n,r=a/n):.01>f?(n=t=.707106781,r=0):(r=Math.sqrt(f),t=s/r,n=a/r),this.set(t,n,r,e),this):(e=Math.sqrt((t-a)*(t-a)+(s-n)*(s-n)+(o-r)*(o-r)),.001>Math.abs(e)&&(e=1),this.x=(t-a)/e,this.y=(s-n)/e,this.z=(o-r)/e,this.w=Math.acos((i+u+f-1)/2),this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(Infinity,Infinity),this.max=void 0!==t?t:new THREE.Vector2(-Infinity,-Infinity)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var n=1,r=e.length;n<r;n++)t=e[n],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var n=THREE.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return THREE.Box2.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box2.__v1=new THREE.Vector2,THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(Infinity,Infinity,Infinity),this.max=void 0!==t?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var n=1,r=e.length;n<r;n++)t=e[n],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var n=THREE.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return t||new THREE.Vector3,(new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return THREE.Box3.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return e=e||new THREE.Sphere,e.center=this.center(),e.radius=.5*this.size(THREE.Box3.__v0).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},transform:function(e){return e=[THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(e)],this.makeEmpty(),this.setFromPoints(e),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Box3.__v0=new THREE.Vector3,THREE.Box3.__v1=new THREE.Vector3,THREE.Box3.__v2=new THREE.Vector3,THREE.Box3.__v3=new THREE.Vector3,THREE.Box3.__v4=new THREE.Vector3,THREE.Box3.__v5=new THREE.Vector3,THREE.Box3.__v6=new THREE.Vector3,THREE.Box3.__v7=new THREE.Vector3,THREE.Matrix3=function(e,t,n,r,i,s,o,u,a){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,n||0,r||0,void 0!==i?i:1,s||0,o||0,u||0,void 0!==a?a:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,n,r,i,s,o,u,a){var f=this.elements;return f[0]=e,f[3]=t,f[6]=n,f[1]=r,f[4]=i,f[7]=s,f[2]=o,f[5]=u,f[8]=a,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,n=0,r=e.length;n<r;n+=3)t.x=e[n],t.y=e[n+1],t.z=e[n+2],t.applyMatrix3(this),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z;return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],u=e[6],a=e[7],e=e[8];return t*s*e-t*o*a-n*i*e+n*o*u+r*i*a-r*s*u},getInverse:function(e,t){var n=e.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9],r[1]=-n[10]*n[1]+n[2]*n[9],r[2]=n[6]*n[1]-n[2]*n[5],r[3]=-n[10]*n[4]+n[6]*n[8],r[4]=n[10]*n[0]-n[2]*n[8],r[5]=-n[6]*n[0]+n[2]*n[4],r[6]=n[9]*n[4]-n[5]*n[8],r[7]=-n[9]*n[0]+n[1]*n[8],r[8]=n[5]*n[0]-n[1]*n[4],n=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===n){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,n||0,r||0,i||0,void 0!==s?s:1,o||0,u||0,a||0,f||0,void 0!==l?l:1,c||0,h||0,p||0,d||0,void 0!==v?v:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=s,m[9]=o,m[13]=u,m[2]=a,m[6]=f,m[10]=l,m[14]=c,m[3]=h,m[7]=p,m[11]=d,m[15]=v,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},setRotationFromEuler:function(e,t){var n=this.elements,r=e.x,i=e.y,s=e.z,o=Math.cos(r),r=Math.sin(r),u=Math.cos(i),i=Math.sin(i),a=Math.cos(s),s=Math.sin(s);if(void 0===t||"XYZ"===t){var f=o*a,l=o*s,c=r*a,h=r*s;n[0]=u*a,n[4]=-u*s,n[8]=i,n[1]=l+c*i,n[5]=f-h*i,n[9]=-r*u,n[2]=h-f*i,n[6]=c+l*i,n[10]=o*u}else"YXZ"===t?(f=u*a,l=u*s,c=i*a,h=i*s,n[0]=f+h*r,n[4]=c*r-l,n[8]=o*i,n[1]=o*s,n[5]=o*a,n[9]=-r,n[2]=l*r-c,n[6]=h+f*r,n[10]=o*u):"ZXY"===t?(f=u*a,l=u*s,c=i*a,h=i*s,n[0]=f-h*r,n[4]=-o*s,n[8]=c+l*r,n[1]=l+c*r,n[5]=o*a,n[9]=h-f*r,n[2]=-o*i,n[6]=r,n[10]=o*u):"ZYX"===t?(f=o*a,l=o*s,c=r*a,h=r*s,n[0]=u*a,n[4]=c*i-l,n[8]=f*i+h,n[1]=u*s,n[5]=h*i+f,n[9]=l*i-c,n[2]=-i,n[6]=r*u,n[10]=o*u):"YZX"===t?(f=o*u,l=o*i,c=r*u,h=r*i,n[0]=u*a,n[4]=h-f*s,n[8]=c*s+l,n[1]=s,n[5]=o*a,n[9]=-r*a,n[2]=-i*a,n[6]=l*s+c,n[10]=f-h*s):"XZY"===t&&(f=o*u,l=o*i,c=r*u,h=r*i,n[0]=u*a,n[4]=-s,n[8]=i*a,n[1]=f*s+h,n[5]=o*a,n[9]=l*s-c,n[2]=c*s-l,n[6]=r*a,n[10]=h*s+f);return this},setRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w,o=n+n,u=r+r,a=i+i,e=n*o,f=n*u,n=n*a,l=r*u,r=r*a,i=i*a,o=s*o,u=s*u,s=s*a;return t[0]=1-(l+i),t[4]=f-s,t[8]=n+u,t[1]=f+s,t[5]=1-(e+i),t[9]=r-o,t[2]=n-u,t[6]=r+o,t[10]=1-(e+l),this},lookAt:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__v1,s=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;return o.subVectors(e,t).normalize(),0===o.length()&&(o.z=1),i.crossVectors(n,o).normalize(),0===i.length()&&(o.x+=1e-4,i.crossVectors(n,o).normalize()),s.crossVectors(o,i),r[0]=i.x,r[4]=s.x,r[8]=o.x,r[1]=i.y,r[5]=s.y,r[9]=o.y,r[2]=i.z,r[6]=s.z,r[10]=o.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],u=n[8],a=n[12],f=n[1],l=n[5],c=n[9],h=n[13],p=n[2],d=n[6],v=n[10],m=n[14],g=n[3],y=n[7],b=n[11],n=n[15],w=r[0],E=r[4],S=r[8],x=r[12],T=r[1],N=r[5],C=r[9],k=r[13],L=r[2],A=r[6],O=r[10],M=r[14],_=r[3],D=r[7],P=r[11],r=r[15];return i[0]=s*w+o*T+u*L+a*_,i[4]=s*E+o*N+u*A+a*D,i[8]=s*S+o*C+u*O+a*P,i[12]=s*x+o*k+u*M+a*r,i[1]=f*w+l*T+c*L+h*_,i[5]=f*E+l*N+c*A+h*D,i[9]=f*S+l*C+c*O+h*P,i[13]=f*x+l*k+c*M+h*r,i[2]=p*w+d*T+v*L+m*_,i[6]=p*E+d*N+v*A+m*D,i[10]=p*S+d*C+v*O+m*P,i[14]=p*x+d*k+v*M+m*r,i[3]=g*w+y*T+b*L+n*_,i[7]=g*E+y*N+b*A+n*D,i[11]=g*S+y*C+b*O+n*P,i[15]=g*x+y*k+b*M+n*r,this},multiplyToArray:function(e,t,n){var r=this.elements;return this.multiplyMatrices(e,t),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,n=0,r=e.length;n<r;n+=3)t.x=e[n],t.y=e[n+1],t.z=e[n+2],t.applyProjection(this),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return e.x=n*t[0]+r*t[4]+i*t[8],e.y=n*t[1]+r*t[5]+i*t[9],e.z=n*t[2]+r*t[6]+i*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,n=new THREE.Vector4;return n.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,n.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,n.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,n.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,n},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],u=e[9],a=e[13],f=e[2],l=e[6],c=e[10],h=e[14];return e[3]*(+i*u*l-r*a*l-i*o*c+n*a*c+r*o*h-n*u*h)+e[7]*(+t*u*h-t*a*c+i*s*c-r*s*h+r*a*f-i*u*f)+e[11]*(+t*a*l-t*o*h-i*s*l+n*s*h+i*o*f-n*a*f)+e[15]*(-r*o*f-t*u*l+t*o*c+r*s*l-n*s*c+n*u*f)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],s=r[4],o=r[8],u=r[12],a=r[1],f=r[5],l=r[9],c=r[13],h=r[2],p=r[6],d=r[10],v=r[14],m=r[3],g=r[7],y=r[11],b=r[15];n[0]=l*v*g-c*d*g+c*p*y-f*v*y-l*p*b+f*d*b,n[4]=u*d*g-o*v*g-u*p*y+s*v*y+o*p*b-s*d*b,n[8]=o*c*g-u*l*g+u*f*y-s*c*y-o*f*b+s*l*b,n[12]=u*l*p-o*c*p-u*f*d+s*c*d+o*f*v-s*l*v,n[1]=c*d*m-l*v*m-c*h*y+a*v*y+l*h*b-a*d*b,n[5]=o*v*m-u*d*m+u*h*y-i*v*y-o*h*b+i*d*b,n[9]=u*l*m-o*c*m-u*a*y+i*c*y+o*a*b-i*l*b,n[13]=o*c*h-u*l*h+u*a*d-i*c*d-o*a*v+i*l*v,n[2]=f*v*m-c*p*m+c*h*g-a*v*g-f*h*b+a*p*b,n[6]=u*p*m-s*v*m-u*h*g+i*v*g+s*h*b-i*p*b,n[10]=s*c*m-u*f*m+u*a*g-i*c*g-s*a*b+i*f*b,n[14]=u*f*h-s*c*h-u*a*p+i*c*p+s*a*v-i*f*v,n[3]=l*p*m-f*d*m-l*h*g+a*d*g+f*h*y-a*p*y,n[7]=s*d*m-o*p*m+o*h*g-i*d*g-s*h*y+i*p*y,n[11]=o*f*m-s*l*m-o*a*g+i*l*g+s*a*y-i*f*y,n[15]=s*l*h-o*f*h+o*a*p-i*l*p-s*a*d+i*f*d,n=r[0]*n[0]+r[1]*n[4]+r[2]*n[8]+r[3]*n[12];if(0==n){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/n),this},compose:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__m1,s=THREE.Matrix4.__m2;return i.identity(),i.setRotationFromQuaternion(t),s.makeScale(n.x,n.y,n.z),this.multiplyMatrices(i,s),r[12]=e.x,r[13]=e.y,r[14]=e.z,this},decompose:function(e,t,n){var r=this.elements,i=THREE.Matrix4.__v1,s=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;return i.set(r[0],r[1],r[2]),s.set(r[4],r[5],r[6]),o.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,n=n instanceof THREE.Vector3?n:new THREE.Vector3,n.x=i.length(),n.y=s.length(),n.z=o.length(),e.x=r[12],e.y=r[13],e.z=r[14],r=THREE.Matrix4.__m1,r.copy(this),r.elements[0]/=n.x,r.elements[1]/=n.x,r.elements[2]/=n.x,r.elements[4]/=n.y,r.elements[5]/=n.y,r.elements[6]/=n.y,r.elements[8]/=n.z,r.elements[9]/=n.z,r.elements[10]/=n.z,t.setFromRotationMatrix(r),[e,t,n]},extractPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(e){var t=this.elements,e=e.elements,n=THREE.Matrix4.__v1,r=1/n.set(e[0],e[1],e[2]).length(),i=1/n.set(e[4],e[5],e[6]).length(),n=1/n.set(e[8],e[9],e[10]).length();return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,this},translate:function(e){var t=this.elements,n=e.x,r=e.y,e=e.z;return t[12]=t[0]*n+t[4]*r+t[8]*e+t[12],t[13]=t[1]*n+t[5]*r+t[9]*e+t[13],t[14]=t[2]*n+t[6]*r+t[10]*e+t[14],t[15]=t[3]*n+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,n=t[4],r=t[5],i=t[6],s=t[7],o=t[8],u=t[9],a=t[10],f=t[11],l=Math.cos(e),e=Math.sin(e);return t[4]=l*n+e*o,t[5]=l*r+e*u,t[6]=l*i+e*a,t[7]=l*s+e*f,t[8]=l*o-e*n,t[9]=l*u-e*r,t[10]=l*a-e*i,t[11]=l*f-e*s,this},rotateY:function(e){var t=this.elements,n=t[0],r=t[1],i=t[2],s=t[3],o=t[8],u=t[9],a=t[10],f=t[11],l=Math.cos(e),e=Math.sin(e);return t[0]=l*n-e*o,t[1]=l*r-e*u,t[2]=l*i-e*a,t[3]=l*s-e*f,t[8]=l*o+e*n,t[9]=l*u+e*r,t[10]=l*a+e*i,t[11]=l*f+e*s,this},rotateZ:function(e){var t=this.elements,n=t[0],r=t[1],i=t[2],s=t[3],o=t[4],u=t[5],a=t[6],f=t[7],l=Math.cos(e),e=Math.sin(e);return t[0]=l*n+e*o,t[1]=l*r+e*u,t[2]=l*i+e*a,t[3]=l*s+e*f,t[4]=l*o-e*n,t[5]=l*u-e*r,t[6]=l*a-e*i,t[7]=l*f-e*s,this},rotateByAxis:function(e,t){var n=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,i=e.y,s=e.z,o=Math.sqrt(r*r+i*i+s*s),r=r/o,i=i/o,s=s/o,o=r*r,u=i*i,a=s*s,f=Math.cos(t),l=Math.sin(t),c=1-f,h=r*i*c,p=r*s*c,c=i*s*c,r=r*l,d=i*l,l=s*l,s=o+(1-o)*f,o=h+l,i=p-d,h=h-l,u=u+(1-u)*f,l=c+r,p=p+d,c=c-r,a=a+(1-a)*f,f=n[0],r=n[1],d=n[2],v=n[3],m=n[4],g=n[5],y=n[6],b=n[7],w=n[8],E=n[9],S=n[10],x=n[11];return n[0]=s*f+o*m+i*w,n[1]=s*r+o*g+i*E,n[2]=s*d+o*y+i*S,n[3]=s*v+o*b+i*x,n[4]=h*f+u*m+l*w,n[5]=h*r+u*g+l*E,n[6]=h*d+u*y+l*S,n[7]=h*v+u*b+l*x,n[8]=p*f+c*m+a*w,n[9]=p*r+c*g+a*E,n[10]=p*d+c*y+a*S,n[11]=p*v+c*b+a*x,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,u=e.z,a=i*s,f=i*o;return this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeFrustum:function(e,t,n,r,i,s){var o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-n),o[9]=(r+n)/(r-n),o[13]=0,o[2]=0,o[6]=0,o[10]=-(s+i)/(s-i),o[14]=-2*s*i/(s-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,n,r){var e=n*Math.tan(THREE.Math.degToRad(.5*e)),i=-e;return this.makeFrustum(i*t,e*t,i,e,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements,u=t-e,a=n-r,f=s-i;return o[0]=2/u,o[4]=0,o[8]=0,o[12]=-((t+e)/u),o[1]=0,o[5]=2/a,o[9]=0,o[13]=-((n+r)/a),o[2]=0,o[6]=0,o[10]=-2/f,o[14]=-((s+i)/f),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(e){return this.origin.copy(this.at(e,THREE.Ray.__v1)),this},closestPointToPoint:function(e,t){var n=t||new THREE.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){var t=THREE.Ray.__v1.subVectors(e,this.origin).dot(this.direction);return THREE.Ray.__v1.copy(this.direction).multiplyScalar(t).add(this.origin),THREE.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0!=t)return-(this.origin.dot(e.normal)+e.constant)/t;if(0==e.distanceToPoint(this.origin))return 0},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return void 0===n?void 0:this.at(n,t)},transform:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Ray.__v1=new THREE.Vector3,THREE.Ray.__v2=new THREE.Vector3,THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var n=0,r=0,i=t.length;r<i;r++)var s=e.distanceToSquared(t[r]),n=Math.max(n,s);return this.center=e,this.radius=Math.sqrt(n),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},transform:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,n,r,i,s){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==s?s:new THREE.Plane]},THREE.Frustum.prototype={set:function(e,t,n,r,i,s){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(s),this},copy:function(e){for(var t=this.planes,n=0;6>n;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=n[5],a=n[6],f=n[7],l=n[8],c=n[9],h=n[10],p=n[11],d=n[12],v=n[13],m=n[14],n=n[15];return t[0].setComponents(s-e,f-o,p-l,n-d).normalize(),t[1].setComponents(s+e,f+o,p+l,n+d).normalize(),t[2].setComponents(s+r,f+u,p+c,n+v).normalize(),t[3].setComponents(s-r,f-u,p-c,n-v).normalize(),t[4].setComponents(s-i,f-a,p-h,n-m).normalize(),t[5].setComponents(s+i,f+a,p+h,n+m).normalize(),this},intersectsObject:function(e){for(var t=e.matrixWorld,n=this.planes,r=t.getPosition(),e=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),t=0;6>t;t++)if(n[t].distanceToPoint(r)<e)return!1;return!0},intersectsSphere:function(e){for(var t=this.planes,n=e.center,e=-e.radius,r=0;6>r;r++)if(t[r].distanceToPoint(n)<e)return!1;return!0},containsPoint:function(e){for(var t=this.planes,n=0;6>n;n++)if(0>t[n].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,n){return t=THREE.Plane.__v1.subVectors(n,t).cross(THREE.Plane.__v2.subVectors(e,t)).normalize(),this.setFromNormalAndCoplanarPoint(t,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(e,t){var n=this.distanceToPoint(e),r=this.distanceToPoint(t);return 0>n&&0<r||0>r&&0<n},intersectLine:function(e,t,n){var n=n||new THREE.Vector3,t=THREE.Plane.__v1.subVectors(t,e),r=this.normal.dot(t);if(0!=r)return r=-(e.dot(this.normal)+this.constant)/r,0>r||1<r?void 0:n.copy(t).multiplyScalar(r).add(e);if(0==this.distanceToPoint(e))return n.copy(e)},coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(e,t){var t=t||(new THREE.Matrix3).getInverse(e).transpose(),n=THREE.Plane.__v1.copy(this.normal).applyMatrix3(t),r=this.coplanarPoint(THREE.Plane.__v2);return r.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(n,r),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__vZero=new THREE.Vector3(0,0,0),THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Math={clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0},degToRad:function(e){return e*THREE.Math.__d2r},radToDeg:function(e){return e*THREE.Math.__r2d}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Spline=function(e){function t(e,t,n,r,i,s,o){return e=.5*(n-e),r=.5*(r-t),(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t}this.points=e;var n=[],r={x:0,y:0,z:0},i,s,o,u,a,f,l,c,h;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,s=Math.floor(i),o=i-s,n[0]=0===s?s:s-1,n[1]=s,n[2]=s>this.points.length-2?this.points.length-1:s+1,n[3]=s>this.points.length-3?this.points.length-1:s+2,f=this.points[n[0]],l=this.points[n[1]],c=this.points[n[2]],h=this.points[n[3]],u=o*o,a=o*u,r.x=t(f.x,l.x,c.x,h.x,o,u,a),r.y=t(f.y,l.y,c.y,h.y,o,u,a),r.z=t(f.z,l.z,c.z,h.z,o,u,a),r},this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,n,r,i=t=t=0,s=new THREE.Vector3,o=new THREE.Vector3,u=[],a=0;u[0]=0,e||(e=100),n=this.points.length*e,s.copy(this.points[0]);for(e=1;e<n;e++)t=e/n,r=this.getPoint(t),o.copy(r),a+=o.distanceTo(s),s.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=i&&(u[t]=a,i=t);return u[u.length]=a,{chunks:u,total:a}},this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u=[],a=new THREE.Vector3,f=this.getLength();u.push(a.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){n=f.chunks[t]-f.chunks[t-1],o=Math.ceil(e*n/f.total),i=(t-1)/(this.points.length-1),s=t/(this.points.length-1);for(n=1;n<o-1;n++)r=i+n*(1/o)*(s-i),r=this.getPoint(r),u.push(a.copy(r).clone());u.push(a.copy(this.points[t]).clone())}this.points=u}},THREE.Triangle=function(e,t,n){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==n?n:new THREE.Vector3},THREE.Triangle.normal=function(e,t,n,r){return r=r||new THREE.Vector3,r.subVectors(n,t),THREE.Triangle.__v0.subVectors(e,t),r.cross(THREE.Triangle.__v0),e=r.lengthSq(),0<e?r.multiplyScalar(1/Math.sqrt(e)):r.set(0,0,0)},THREE.Triangle.barycoordFromPoint=function(e,t,n,r,i){THREE.Triangle.__v0.subVectors(r,t),THREE.Triangle.__v1.subVectors(n,t),THREE.Triangle.__v2.subVectors(e,t);var e=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),t=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),n=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),s=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),r=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),o=e*s-t*t,i=i||new THREE.Vector3;return 0==o?i.set(-2,-1,-1):(o=1/o,s=(s*n-t*r)*o,e=(e*r-t*n)*o,i.set(1-s-e,e,s))},THREE.Triangle.containsPoint=function(e,t,n,r){return e=THREE.Triangle.barycoordFromPoint(e,t,n,r,THREE.Triangle.__v3),0<=e.x&&0<=e.y&&1>=e.x+e.y},THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return THREE.Triangle.__v0.subVectors(this.c,this.b),THREE.Triangle.__v1.subVectors(this.a,this.b),.5*THREE.Triangle.__v0.cross(THREE.Triangle.__v1).length()},midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Triangle.__v0=new THREE.Vector3,THREE.Triangle.__v1=new THREE.Vector3,THREE.Triangle.__v2=new THREE.Vector3,THREE.Triangle.__v3=new THREE.Vector3,THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e},THREE.EventDispatcher=function(){var e={};this.addEventListener=function(t,n){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(n)&&e[t].push(n)},this.removeEventListener=function(t,n){var r=e[t].indexOf(n);-1!==r&&e[t].splice(r,1)},this.dispatchEvent=function(t){var n=e[t.type];if(void 0!==n){t.target=this;for(var r=0,i=n.length;r<i;r++)n[r].call(this,t)}}},function(e){e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n),0<this.ray.direction.length()&&this.ray.direction.normalize(),this.near=r||0,this.far=i||Infinity};var t=new e.Sphere,n=new e.Ray,r=new e.Plane,i=new e.Vector3,s=new e.Matrix4,o=function(e,t){return e.distance-t.distance},u=function(o,u,a){if(o instanceof e.Particle){u=u.ray.distanceToPoint(o.matrixWorld.getPosition());if(u>o.scale.x)return a;a.push({distance:u,point:o.position,face:null,object:o})}else if(o instanceof e.Mesh){t.set(o.matrixWorld.getPosition(),o.geometry.boundingSphere.radius*o.matrixWorld.getMaxScaleOnAxis());if(!u.ray.isIntersectionSphere(t))return a;var l=o.geometry,h=l.vertices,p=o.material instanceof e.MeshFaceMaterial,v=!0===p?o.material.materials:null,m=o.material.side,g,y,w,E=u.precision;o.matrixRotationWorld.extractRotation(o.matrixWorld),s.getInverse(o.matrixWorld),n.copy(u.ray).transform(s);for(var S=0,x=l.faces.length;S<x;S++){var T=l.faces[S],m=!0===p?v[T.materialIndex]:o.material;if(void 0!==m){r.setFromNormalAndCoplanarPoint(T.normal,h[T.a]);var N=n.distanceToPlane(r);if(!(Math.abs(N)<E)&&!(0>N)){m=m.side;if(!(m===e.DoubleSide||(g=n.direction.dot(r.normal),m===e.FrontSide?0>g:0<g)))continue;if(!(N<u.near||N>u.far)){i=n.at(N,i);if(T instanceof e.Face3){if(m=h[T.a],g=h[T.b],y=h[T.c],!e.Triangle.containsPoint(i,m,g,y))continue}else{if(!(T instanceof e.Face4))throw Error("face type not supported");if(m=h[T.a],g=h[T.b],y=h[T.c],w=h[T.d],!e.Triangle.containsPoint(i,m,g,w)&&!e.Triangle.containsPoint(i,g,y,w))continue}a.push({distance:N,point:u.ray.at(N),face:T,faceIndex:S,object:o})}}}}}},a=function(e,t,n){for(var e=e.getDescendants(),r=0,i=e.length;r<i;r++)u(e[r],t,n)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),0<this.ray.direction.length()&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var n=[];return!0===t&&a(e,this,n),u(e,this,n),n.sort(o),n},e.Raycaster.prototype.intersectObjects=function(e,t){for(var n=[],r=0,i=e.length;r<i;r++)u(e[r],this,n),!0===t&&a(e[r],this,n);return n.sort(o),n}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),e=(new THREE.Matrix4).extractRotation(this.matrix),this.rotation.setEulerFromRotationMatrix(e,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,n=this.children.length;t<n;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.name===e||!0===t&&(i=i.getChildByName(e,t),void 0!==i))return i}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,n=this.children.length;t<n;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++)e.add(this.children[t].clone());return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(s===u){var e=new THREE.RenderableObject;return o.push(e),u++,s++,e}return o[s++]}function t(){if(f===c){var e=new THREE.RenderableVertex;return l.push(e),c++,f++,e}return l[f++]}function n(e,t){return t.z-e.z}function r(e,t){var n=0,r=1,i=e.z+e.w,s=t.z+t.w,o=-e.z+e.w,u=-t.z+t.w;return 0<=i&&0<=s&&0<=o&&0<=u?!0:0>i&&0>s||0>o&&0>u?!1:(0>i?n=Math.max(n,i/(i-s)):0>s&&(r=Math.min(r,i/(i-s))),0>o?n=Math.max(n,o/(o-u)):0>u&&(r=Math.min(r,o/(o-u))),r<n?!1:(e.lerp(t,n),t.lerp(e,1-r),!0))}var i,s,o=[],u=0,a,f,l=[],c=0,h,p,d=[],v=0,m,g=[],y=0,b,w,E=[],S=0,x,T,N=[],C=0,k={objects:[],sprites:[],lights:[],elements:[]},L=new THREE.Vector3,A=new THREE.Vector4,O=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),M=new THREE.Box3,_=Array(3),D=Array(4),P=new THREE.Matrix4,H=new THREE.Matrix4,B,j=new THREE.Matrix4,F=new THREE.Matrix3,I=new THREE.Matrix3,q=new THREE.Vector3,R=new THREE.Frustum,U=new THREE.Vector4,z=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(H)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),H.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(H)},this.pickingRay=function(e,t){e.z=-1;var n=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(n,t),n.sub(e).normalize(),new THREE.Raycaster(e,n)},this.projectScene=function(o,u,c,V){var $=!1,Q,Y,Z,et,tt,nt,rt,it,st,ot,ut,at,ft;T=w=m=p=0,k.elements.length=0,o.updateMatrixWorld(),void 0===u.parent&&u.updateMatrixWorld(),P.copy(u.matrixWorldInverse.getInverse(u.matrixWorld)),H.multiplyMatrices(u.projectionMatrix,P),I.getInverse(P),I.transpose(),R.setFromMatrix(H),s=0,k.objects.length=0,k.sprites.length=0,k.lights.length=0;var lt=function(t){for(var n=0,r=t.children.length;n<r;n++){var s=t.children[n];if(!1!==s.visible){if(s instanceof THREE.Light)k.lights.push(s);else if(s instanceof THREE.Mesh||s instanceof THREE.Line){if(!1===s.frustumCulled||!0===R.intersectsObject(s))i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),L.applyProjection(H),i.z=L.z),k.objects.push(i)}else s instanceof THREE.Sprite||s instanceof THREE.Particle?(i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),L.applyProjection(H),i.z=L.z),k.sprites.push(i)):(i=e(),i.object=s,null!==s.renderDepth?i.z=s.renderDepth:(L.copy(s.matrixWorld.getPosition()),L.applyProjection(H),i.z=L.z),k.objects.push(i));lt(s)}}};lt(o),!0===c&&k.objects.sort(n),o=0;for(c=k.objects.length;o<c;o++)if(it=k.objects[o].object,B=it.matrixWorld,f=0,it instanceof THREE.Mesh){st=it.geometry,Z=st.vertices,ot=st.faces,st=st.faceVertexUvs,F.getInverse(B),F.transpose(),at=it.material instanceof THREE.MeshFaceMaterial,ft=!0===at?it.material:null,Q=0;for(Y=Z.length;Q<Y;Q++)a=t(),a.positionWorld.copy(Z[Q]).applyMatrix4(B),a.positionScreen.copy(a.positionWorld).applyMatrix4(H),a.positionScreen.x/=a.positionScreen.w,a.positionScreen.y/=a.positionScreen.w,a.positionScreen.z/=a.positionScreen.w,a.visible=!(-1>a.positionScreen.x||1<a.positionScreen.x||-1>a.positionScreen.y||1<a.positionScreen.y||-1>a.positionScreen.z||1<a.positionScreen.z);Z=0;for(Q=ot.length;Z<Q;Z++){Y=ot[Z];var ct=!0===at?ft.materials[Y.materialIndex]:it.material;if(void 0!==ct){nt=ct.side;if(Y instanceof THREE.Face3){if(et=l[Y.a],tt=l[Y.b],rt=l[Y.c],_[0]=et.positionScreen,_[1]=tt.positionScreen,_[2]=rt.positionScreen,!0!==et.visible&&!0!==tt.visible&&!0!==rt.visible&&!O.isIntersectionBox(M.setFromPoints(_)))continue;if($=0>(rt.positionScreen.x-et.positionScreen.x)*(tt.positionScreen.y-et.positionScreen.y)-(rt.positionScreen.y-et.positionScreen.y)*(tt.positionScreen.x-et.positionScreen.x),nt!==THREE.DoubleSide&&$!==(nt===THREE.FrontSide))continue;p===v?(ut=new THREE.RenderableFace3,d.push(ut),v++,p++,h=ut):h=d[p++],h.v1.copy(et),h.v2.copy(tt),h.v3.copy(rt)}else if(Y instanceof THREE.Face4){if(et=l[Y.a],tt=l[Y.b],rt=l[Y.c],ut=l[Y.d],D[0]=et.positionScreen,D[1]=tt.positionScreen,D[2]=rt.positionScreen,D[3]=ut.positionScreen,!0!==et.visible&&!0!==tt.visible&&!0!==rt.visible&&!0!==ut.visible&&!O.isIntersectionBox(M.setFromPoints(D)))continue;if($=0>(ut.positionScreen.x-et.positionScreen.x)*(tt.positionScreen.y-et.positionScreen.y)-(ut.positionScreen.y-et.positionScreen.y)*(tt.positionScreen.x-et.positionScreen.x)||0>(tt.positionScreen.x-rt.positionScreen.x)*(ut.positionScreen.y-rt.positionScreen.y)-(tt.positionScreen.y-rt.positionScreen.y)*(ut.positionScreen.x-rt.positionScreen.x),nt!==THREE.DoubleSide&&$!==(nt===THREE.FrontSide))continue;if(m===y){var ht=new THREE.RenderableFace4;g.push(ht),y++,m++,h=ht}else h=g[m++];h.v1.copy(et),h.v2.copy(tt),h.v3.copy(rt),h.v4.copy(ut)}h.normalModel.copy(Y.normal),!1===$&&(nt===THREE.BackSide||nt===THREE.DoubleSide)&&h.normalModel.negate(),h.normalModel.applyMatrix3(F).normalize(),h.normalModelView.copy(h.normalModel).applyMatrix3(I),h.centroidModel.copy(Y.centroid).applyMatrix4(B),rt=Y.vertexNormals,et=0;for(tt=rt.length;et<tt;et++)ut=h.vertexNormalsModel[et],ut.copy(rt[et]),!1===$&&(nt===THREE.BackSide||nt===THREE.DoubleSide)&&ut.negate(),ut.applyMatrix3(F).normalize(),h.vertexNormalsModelView[et].copy(ut).applyMatrix3(I);h.vertexNormalsLength=rt.length,et=0;for(tt=st.length;et<tt;et++)if(ut=st[et][Z],void 0!==ut){nt=0;for(rt=ut.length;nt<rt;nt++)h.uvs[et][nt]=ut[nt]}h.color=Y.color,h.material=ct,q.copy(h.centroidModel).applyProjection(H),h.z=q.z,k.elements.push(h)}}}else if(it instanceof THREE.Line){j.multiplyMatrices(H,B),Z=it.geometry.vertices,et=t(),et.positionScreen.copy(Z[0]).applyMatrix4(j),ot=it.type===THREE.LinePieces?2:1,Q=1;for(Y=Z.length;Q<Y;Q++)et=t(),et.positionScreen.copy(Z[Q]).applyMatrix4(j),0<(Q+1)%ot||(tt=l[f-2],U.copy(et.positionScreen),z.copy(tt.positionScreen),!0===r(U,z)&&(U.multiplyScalar(1/U.w),z.multiplyScalar(1/z.w),w===S?(st=new THREE.RenderableLine,E.push(st),S++,w++,b=st):b=E[w++],b.v1.positionScreen.copy(U),b.v2.positionScreen.copy(z),b.z=Math.max(U.z,z.z),b.material=it.material,k.elements.push(b)))}o=0;for(c=k.sprites.length;o<c;o++)it=k.sprites[o].object,B=it.matrixWorld,it instanceof THREE.Particle&&(A.set(B.elements[12],B.elements[13],B.elements[14],1),A.applyMatrix4(H),A.z/=A.w,0<A.z&&1>A.z&&(T===C?($=new THREE.RenderableParticle,N.push($),C++,T++,x=$):x=N[T++],x.object=it,x.x=A.x/A.w,x.y=A.y/A.w,x.z=A.z,x.rotation=it.rotation.z,x.scale.x=it.scale.x*Math.abs(x.x-(A.x+u.projectionMatrix.elements[0])/(A.w+u.projectionMatrix.elements[12])),x.scale.y=it.scale.y*Math.abs(x.y-(A.y+u.projectionMatrix.elements[5])/(A.w+u.projectionMatrix.elements[13])),x.material=it.material,k.elements.push(x)));return!0===V&&k.elements.sort(n),k}},THREE.Face3=function(e,t,n,r,i,s){this.a=e,this.b=t,this.c=n,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=i instanceof THREE.Color?i:new THREE.Color,this.vertexColors=i instanceof Array?i:[],this.vertexTangents=[],this.materialIndex=void 0!==s?s:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,n,r,i,s,o){this.a=e,this.b=t,this.c=n,this.d=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=s instanceof THREE.Color?s:new THREE.Color,this.vertexColors=s instanceof Array?s:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),n=0,r=this.vertices.length;n<r;n++)this.vertices[n].applyMatrix4(e);n=0;for(r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var s=0,o=i.vertexNormals.length;s<o;s++)i.vertexNormals[s].applyMatrix3(t).normalize();i.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,n;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],n.centroid.set(0,0,0),n instanceof THREE.Face3?(n.centroid.add(this.vertices[n.a]),n.centroid.add(this.vertices[n.b]),n.centroid.add(this.vertices[n.c]),n.centroid.divideScalar(3)):n instanceof THREE.Face4&&(n.centroid.add(this.vertices[n.a]),n.centroid.add(this.vertices[n.b]),n.centroid.add(this.vertices[n.c]),n.centroid.add(this.vertices[n.d]),n.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,n,r,i,s,o=new THREE.Vector3,u=new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],r=this.vertices[n.a],i=this.vertices[n.b],s=this.vertices[n.c],o.subVectors(s,i),u.subVectors(r,i),o.cross(u),o.normalize(),n.normal.copy(o)},computeVertexNormals:function(e){var t,n,r,i;if(void 0===this.__tmpVertices){i=this.__tmpVertices=Array(this.vertices.length),t=0;for(n=this.vertices.length;t<n;t++)i[t]=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:r instanceof THREE.Face4&&(r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{i=this.__tmpVertices,t=0;for(n=this.vertices.length;t<n;t++)i[t].set(0,0,0)}if(e){var s,o,u,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,h=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(e=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c],a.subVectors(o,s),f.subVectors(e,s),a.cross(f),i[r.a].add(a),i[r.b].add(a),i[r.c].add(a)):r instanceof THREE.Face4&&(e=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c],u=this.vertices[r.d],l.subVectors(u,s),f.subVectors(e,s),l.cross(f),i[r.a].add(l),i[r.b].add(l),i[r.d].add(l),c.subVectors(u,o),h.subVectors(s,o),c.cross(h),i[r.b].add(c),i[r.c].add(c),i[r.d].add(c))}else{t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal)):r instanceof THREE.Face4&&(i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal),i[r.d].add(r.normal))}t=0;for(n=this.vertices.length;t<n;t++)i[t].normalize();t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r instanceof THREE.Face3?(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c])):r instanceof THREE.Face4&&(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c]),r.vertexNormals[3].copy(i[r.d]))},computeMorphNormals:function(){var e,t,n,r,i;n=0;for(r=this.faces.length;n<r;n++){i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0;for(t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}var s=new THREE.Geometry;s.faces=this.faces,e=0;for(t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,u=this.morphNormals[e].vertexNormals,a,f;n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],a=new THREE.Vector3,f=i instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},o.push(a),u.push(f)}o=this.morphNormals[e],s.vertices=this.morphTargets[e].vertices,s.computeFaceNormals(),s.computeVertexNormals(),n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],a=o.faceNormals[n],f=o.vertexNormals[n],a.copy(i.normal),i instanceof THREE.Face3?(f.a.copy(i.vertexNormals[0]),f.b.copy(i.vertexNormals[1]),f.c.copy(i.vertexNormals[2])):(f.a.copy(i.vertexNormals[0]),f.b.copy(i.vertexNormals[1]),f.c.copy(i.vertexNormals[2]),f.d.copy(i.vertexNormals[3]))}n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){function e(e,t,n,r,i,s,T){u=e.vertices[t],a=e.vertices[n],f=e.vertices[r],l=o[i],c=o[s],h=o[T],p=a.x-u.x,d=f.x-u.x,v=a.y-u.y,m=f.y-u.y,g=a.z-u.z,y=f.z-u.z,b=c.x-l.x,w=h.x-l.x,E=c.y-l.y,S=h.y-l.y,x=1/(b*S-w*E),k.set((S*p-E*d)*x,(S*v-E*m)*x,(S*g-E*y)*x),L.set((b*d-w*p)*x,(b*m-w*v)*x,(b*y-w*g)*x),N[t].add(k),N[n].add(k),N[r].add(k),C[t].add(L),C[n].add(L),C[r].add(L)}var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N=[],C=[],k=new THREE.Vector3,L=new THREE.Vector3,A=new THREE.Vector3,O=new THREE.Vector3,M=new THREE.Vector3;t=0;for(n=this.vertices.length;t<n;t++)N[t]=new THREE.Vector3,C[t]=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)s=this.faces[t],o=this.faceVertexUvs[0][t],s instanceof THREE.Face3?e(this,s.a,s.b,s.c,0,1,2):s instanceof THREE.Face4&&(e(this,s.a,s.b,s.d,0,1,3),e(this,s.b,s.c,s.d,1,2,3));var _=["a","b","c","d"];t=0;for(n=this.faces.length;t<n;t++){s=this.faces[t];for(r=0;r<s.vertexNormals.length;r++)M.copy(s.vertexNormals[r]),i=s[_[r]],T=N[i],A.copy(T),A.sub(M.multiplyScalar(M.dot(T))).normalize(),O.crossVectors(s.vertexNormals[r],T),i=O.dot(C[i]),i=0>i?-1:1,s.vertexTangents[r]=new THREE.Vector4(A.x,A.y,A.z,i)}this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)0<n&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e={},t=[],n=[],r,i=Math.pow(10,4),s,o,u,a,f;this.__tmpVertices=void 0,s=0;for(o=this.vertices.length;s<o;s++)r=this.vertices[s],r=[Math.round(r.x*i),Math.round(r.y*i),Math.round(r.z*i)].join("_"),void 0===e[r]?(e[r]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[r]];i=[],s=0;for(o=this.faces.length;s<o;s++)if(e=this.faces[s],e instanceof THREE.Face3){e.a=n[e.a],e.b=n[e.b],e.c=n[e.c],u=[e.a,e.b,e.c],r=-1;for(a=0;3>a;a++)if(u[a]==u[(a+1)%3]){i.push(s);break}}else if(e instanceof THREE.Face4){e.a=n[e.a],e.b=n[e.b],e.c=n[e.c],e.d=n[e.d],u=[e.a,e.b,e.c,e.d],r=-1;for(a=0;4>a;a++)u[a]==u[(a+1)%4]&&(0<=r&&i.push(s),r=a);if(0<=r){u.splice(r,1);var l=new THREE.Face3(u[0],u[1],u[2],e.normal,e.color,e.materialIndex);u=0;for(a=this.faceVertexUvs.length;u<a;u++)(f=this.faceVertexUvs[u][s])&&f.splice(r,1);e.vertexNormals&&0<e.vertexNormals.length&&(l.vertexNormals=e.vertexNormals,l.vertexNormals.splice(r,1)),e.vertexColors&&0<e.vertexColors.length&&(l.vertexColors=e.vertexColors,l.vertexColors.splice(r,1)),this.faces[s]=l}}for(s=i.length-1;0<=s;s--){this.faces.splice(s,1),u=0;for(a=this.faceVertexUvs.length;u<a;u++)this.faceVertexUvs[u].splice(s,1)}return n=this.vertices.length-t.length,this.vertices=t,n},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,n=0,r=t.length;n<r;n++)e.vertices.push(t[n].clone());t=this.faces,n=0;for(r=t.length;n<r;n++)e.faces.push(t[n].clone());t=this.faceVertexUvs[0],n=0;for(r=t.length;n<r;n++){for(var i=t[n],s=[],o=0,u=i.length;o<u;o++)s.push(new THREE.Vector2(i[o].x,i[o].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,n;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(n=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==n&&(t=new THREE.Matrix3,t.getInverse(e).transpose(),t.multiplyVector3Array(n),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox,n,r,i;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var s=3,o=e.length;s<o;s+=3)n=e[s],r=e[s+1],i=e[s+2],n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),r<t.min.y?t.min.y=r:r>t.max.y&&(t.max.y=r),i<t.min.z?t.min.z=i:i>t.max.z&&(t.max.z=i)}if(void 0===e||0===e.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,n=0,r,i,s=0,o=e.length;s<o;s+=3)t=e[s],r=e[s+1],i=e[s+2],t=t*t+r*r+i*i,t>n&&(n=t);this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,n,r;e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e),numItems:e};else{e=0;for(t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0}var i=this.attributes.position.array,s=this.attributes.normal.array,o,u,a,f,l,c,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,y=this.offsets;n=0;for(r=y.length;n<r;++n){t=y[n].start,o=y[n].count;var b=y[n].index;e=t;for(t+=o;e<t;e+=3)o=b+g[e],u=b+g[e+1],a=b+g[e+2],f=i[3*o],l=i[3*o+1],c=i[3*o+2],h.set(f,l,c),f=i[3*u],l=i[3*u+1],c=i[3*u+2],p.set(f,l,c),f=i[3*a],l=i[3*a+1],c=i[3*a+2],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[3*o]+=v.x,s[3*o+1]+=v.y,s[3*o+2]+=v.z,s[3*u]+=v.x,s[3*u+1]+=v.y,s[3*u+2]+=v.z,s[3*a]+=v.x,s[3*a+1]+=v.y,s[3*a+2]+=v.z}}else{e=0;for(t=i.length;e<t;e+=9)f=i[e],l=i[e+1],c=i[e+2],h.set(f,l,c),f=i[e+3],l=i[e+4],c=i[e+5],p.set(f,l,c),f=i[e+6],l=i[e+7],c=i[e+8],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[e]=v.x,s[e+1]=v.y,s[e+2]=v.z,s[e+3]=v.x,s[e+4]=v.y,s[e+5]=v.z,s[e+6]=v.x,s[e+7]=v.y,s[e+8]=v.z}this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,n,r,i=0,s=e.length;i<s;i+=3)t=e[i],n=e[i+1],r=e[i+2],t=1/Math.sqrt(t*t+n*n+r*r),e[i]*=t,e[i+1]*=t,e[i+2]*=t},computeTangents:function(){function e(e){B.x=r[3*e],B.y=r[3*e+1],B.z=r[3*e+2],j.copy(B),I=a[e],P.copy(I),P.sub(B.multiplyScalar(B.dot(I))).normalize(),H.crossVectors(j,I),q=H.dot(f[e]),F=0>q?-1:1,u[4*e]=P.x,u[4*e+1]=P.y,u[4*e+2]=P.z,u[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,n=this.attributes.position.array,r=this.attributes.normal.array,i=this.attributes.uv.array,s=n.length/3;if(void 0===this.attributes.tangent){var o=4*s;this.attributes.tangent={itemSize:4,array:new Float32Array(o),numItems:o}}for(var u=this.attributes.tangent.array,a=[],f=[],o=0;o<s;o++)a[o]=new THREE.Vector3,f[o]=new THREE.Vector3;var l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,s=new THREE.Vector3,o=new THREE.Vector3,N,C,k,L,A,O,M,_=this.offsets;k=0;for(L=_.length;k<L;++k){C=_[k].start,A=_[k].count;var D=_[k].index;N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],l=n[3*A],c=n[3*A+1],h=n[3*A+2],p=n[3*O],d=n[3*O+1],v=n[3*O+2],m=n[3*M],g=n[3*M+1],y=n[3*M+2],b=i[2*A],w=i[2*A+1],E=i[2*O],S=i[2*O+1],x=i[2*M],T=i[2*M+1],p-=l,l=m-l,d-=c,c=g-c,v-=h,h=y-h,E-=b,b=x-b,S-=w,w=T-w,T=1/(E*w-b*S),s.set((w*p-S*l)*T,(w*d-S*c)*T,(w*v-S*h)*T),o.set((E*l-b*p)*T,(E*c-b*d)*T,(E*h-b*v)*T),a[A].add(s),a[O].add(s),a[M].add(s),f[A].add(o),f[O].add(o),f[M].add(o)}var P=new THREE.Vector3,H=new THREE.Vector3,B=new THREE.Vector3,j=new THREE.Vector3,F,I,q;k=0;for(L=_.length;k<L;++k){C=_[k].start,A=_[k].count,D=_[k].index,N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],e(A),e(O),e(M)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this),this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==s?s:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,s){this.fullWidth=e,this.fullHeight=t,this.x=n,this.y=r,this.width=i,this.height=s,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,n=-t,r=e*n,e=Math.abs(e*t-r),n=Math.abs(t-n);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==n?n:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,n,r,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==i?i:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),e.pop(),(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var n=[],r=0;r<e.length;++r)n[r]=THREE.Loader.prototype.createMaterial(e[r],t);return n},needsTangents:function(e){for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function n(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function i(e,i,s,u,a,f,l){var h=s.toLowerCase().endsWith(".dds"),p=t+"/"+s;if(h){var v=THREE.ImageUtils.loadCompressedTexture(p);e[i]=v}else v=document.createElement("canvas"),e[i]=new THREE.Texture(v);e[i].sourceFile=s,u&&(e[i].repeat.set(u[0],u[1]),1!==u[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!==u[1]&&(e[i].wrapT=THREE.RepeatWrapping)),a&&e[i].offset.set(a[0],a[1]),f&&(s={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==s[f[0]]&&(e[i].wrapS=s[f[0]]),void 0!==s[f[1]]&&(e[i].wrapT=s[f[1]])),l&&(e[i].anisotropy=l);if(!h){var m=e[i],e=new Image;e.onload=function(){if(!n(this.width)||!n(this.height)){var e=r(this.width),t=r(this.height);m.image.width=e,m.image.height=t,m.image.getContext("2d").drawImage(this,0,0,e,t)}else m.image=this;m.needsUpdate=!0},e.crossOrigin=o.crossOrigin,e.src=p}}function s(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,u="MeshLambertMaterial",a={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var f=e.shading.toLowerCase();"phong"===f?u="MeshPhongMaterial":"basic"===f&&(u="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(a.blending=THREE[e.blending]);if(void 0!==e.transparent||1>e.opacity)a.transparent=e.transparent;return void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.flipSided&&(a.side=THREE.BackSide),void 0!==e.doubleSided&&(a.side=THREE.DoubleSide),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?a.vertexColors=THREE.FaceColors:e.vertexColors&&(a.vertexColors=THREE.VertexColors)),e.colorDiffuse?a.color=s(e.colorDiffuse):e.DbgColor&&(a.color=e.DbgColor),e.colorSpecular&&(a.specular=s(e.colorSpecular)),e.colorAmbient&&(a.ambient=s(e.colorAmbient)),e.transparency&&(a.opacity=e.transparency),e.specularCoef&&(a.shininess=e.specularCoef),e.mapDiffuse&&t&&i(a,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&i(a,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&i(a,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&i(a,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&i(a,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(a.bumpScale=e.mapBumpScale),e.mapNormal?(u=THREE.ShaderLib.normalmap,f=THREE.UniformsUtils.clone(u.uniforms),f.tNormal.value=a.normalMap,e.mapNormalFactor&&f.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),a.map&&(f.tDiffuse.value=a.map,f.enableDiffuse.value=!0),a.specularMap&&(f.tSpecular.value=a.specularMap,f.enableSpecular.value=!0),a.lightMap&&(f.tAO.value=a.lightMap,f.enableAO.value=!0),f.uDiffuseColor.value.setHex(a.color),f.uSpecularColor.value.setHex(a.specular),f.uAmbientColor.value.setHex(a.ambient),f.uShininess.value=a.shininess,void 0!==a.opacity&&(f.uOpacity.value=a.opacity),u=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:f,lights:!0,fog:!0}),a.transparent&&(u.transparent=!0)):u=new THREE[u](a),void 0!==e.DbgName&&(u.name=e.DbgName),u}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var n=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){n.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){n.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),n.crossOrigin&&(t.crossOrigin=n.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,n){n=n&&"string"==typeof n?n:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,n)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,n,r,i){var s=new XMLHttpRequest,o=0;s.onreadystatechange=function(){if(s.readyState===s.DONE)if(200===s.status||0===s.status){if(s.responseText){var u=JSON.parse(s.responseText);e.createModel(u,n,r)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+s.status+"]");else s.readyState===s.LOADING?i&&(0===o&&(o=s.getResponseHeader("Content-Length")),i({total:o,loaded:s.responseText.length})):s.readyState===s.HEADERS_RECEIVED&&(o=s.getResponseHeader("Content-Length"))},s.open("GET",t,!0),s.withCredentials=this.withCredentials,s.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,n){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w=e.faces;d=e.vertices;var E=e.normals,S=e.colors,x=0;for(s=0;s<e.uvs.length;s++)e.uvs[s].length&&x++;for(s=0;s<x;s++)r.faceUvs[s]=[],r.faceVertexUvs[s]=[];a=0;for(f=d.length;a<f;)l=new THREE.Vector3,l.x=d[a++]*i,l.y=d[a++]*i,l.z=d[a++]*i,r.vertices.push(l);a=0;for(f=w.length;a<f;){d=w[a++],l=d&1,u=d&2,s=d&4,o=d&8,h=d&16,c=d&32,v=d&64,d&=128,l?(m=new THREE.Face4,m.a=w[a++],m.b=w[a++],m.c=w[a++],m.d=w[a++],l=4):(m=new THREE.Face3,m.a=w[a++],m.b=w[a++],m.c=w[a++],l=3),u&&(u=w[a++],m.materialIndex=u),u=r.faces.length;if(s)for(s=0;s<x;s++)g=e.uvs[s],p=w[a++],b=g[2*p],p=g[2*p+1],r.faceUvs[s][u]=new THREE.Vector2(b,p);if(o)for(s=0;s<x;s++){g=e.uvs[s],y=[];for(o=0;o<l;o++)p=w[a++],b=g[2*p],p=g[2*p+1],y[o]=new THREE.Vector2(b,p);r.faceVertexUvs[s][u]=y}h&&(h=3*w[a++],o=new THREE.Vector3,o.x=E[h++],o.y=E[h++],o.z=E[h],m.normal=o);if(c)for(s=0;s<l;s++)h=3*w[a++],o=new THREE.Vector3,o.x=E[h++],o.y=E[h++],o.z=E[h],m.vertexNormals.push(o);v&&(c=w[a++],c=new THREE.Color(S[c]),m.color=c);if(d)for(s=0;s<l;s++)c=w[a++],c=new THREE.Color(S[c]),m.vertexColors.push(c);r.faces.push(m)}if(e.skinWeights){a=0;for(f=e.skinWeights.length;a<f;a+=2)w=e.skinWeights[a],E=e.skinWeights[a+1],r.skinWeights.push(new THREE.Vector4(w,E,0,0))}if(e.skinIndices){a=0;for(f=e.skinIndices.length;a<f;a+=2)w=e.skinIndices[a],E=e.skinIndices[a+1],r.skinIndices.push(new THREE.Vector4(w,E,0,0))}r.bones=e.bones,r.animation=e.animation;if(void 0!==e.morphTargets){a=0;for(f=e.morphTargets.length;a<f;a++){r.morphTargets[a]={},r.morphTargets[a].name=e.morphTargets[a].name,r.morphTargets[a].vertices=[],S=r.morphTargets[a].vertices,x=e.morphTargets[a].vertices,w=0;for(E=x.length;w<E;w+=3)d=new THREE.Vector3,d.x=x[w]*i,d.y=x[w+1]*i,d.z=x[w+2]*i,S.push(d)}}if(void 0!==e.morphColors){a=0;for(f=e.morphColors.length;a<f;a++){r.morphColors[a]={},r.morphColors[a].name=e.morphColors[a].name,r.morphColors[a].colors=[],E=r.morphColors[a].colors,S=e.morphColors[a].colors,i=0;for(w=S.length;i<w;i+=3)x=new THREE.Color(16755200),x.setRGB(S[i],S[i+1],S[i+2]),E.push(x)}}r.computeCentroids(),r.computeFaceNormals(),e=this.initMaterials(e.materials,n),this.needsTangents(e)&&r.computeTangents(),t(r,e)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var e=this,t=0,n=0,r=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:n}),t===n&&e.dispatchEvent({type:"load"})};this.add=function(e){n++,e.addEventListener("load",r,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var n=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var i=JSON.parse(r.responseText);n.parse(i,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+r.status+"]")},r.open("GET",e,!0),r.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,n){function r(e,t){return"relativeToHTML"==t?e:c+"/"+e}function i(){s(T.scene,C.objects)}function s(e,t){var n,i,o,a,f,c,v;for(v in t)if(void 0===T.objects[v]){var m=t[v],w=null;if(m.type&&m.type in l.hierarchyHandlerMap){if(void 0===m.loading){i={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},o={};for(var E in m)E in i||(o[E]=m[E]);p=T.materials[m.material],m.loading=!0,i=l.hierarchyHandlerMap[m.type].loaderObject,i.options?i.load(r(m.url,C.urlBaseType),u(v,e,p,m)):i.load(r(m.url,C.urlBaseType),u(v,e,p,m),o)}}else if(void 0!==m.geometry){if(h=T.geometries[m.geometry]){w=!1,p=T.materials[m.material],w=p instanceof THREE.ShaderMaterial,o=m.position,a=m.rotation,f=m.scale,n=m.matrix,c=m.quaternion,m.material||(p=new THREE.MeshFaceMaterial(T.face_materials[m.geometry])),p instanceof THREE.MeshFaceMaterial&&0===p.materials.length&&(p=new THREE.MeshFaceMaterial(T.face_materials[m.geometry]));if(p instanceof THREE.MeshFaceMaterial)for(i=0;i<p.materials.length;i++)w=w||p.materials[i]instanceof THREE.ShaderMaterial;w&&h.computeTangents(),m.skin?w=new THREE.SkinnedMesh(h,p):m.morph?(w=new THREE.MorphAnimMesh(h,p),void 0!==m.duration&&(w.duration=m.duration),void 0!==m.time&&(w.time=m.time),void 0!==m.mirroredLoop&&(w.mirroredLoop=m.mirroredLoop),p.morphNormals&&h.computeMorphNormals()):w=new THREE.Mesh(h,p),w.name=v,n?(w.matrixAutoUpdate=!1,w.matrix.set(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15])):(w.position.set(o[0],o[1],o[2]),c?(w.quaternion.set(c[0],c[1],c[2],c[3]),w.useQuaternion=!0):w.rotation.set(a[0],a[1],a[2]),w.scale.set(f[0],f[1],f[2])),w.visible=m.visible,w.castShadow=m.castShadow,w.receiveShadow=m.receiveShadow,e.add(w),T.objects[v]=w}}else"DirectionalLight"===m.type||"PointLight"===m.type||"AmbientLight"===m.type?(y=void 0!==m.color?m.color:16777215,b=void 0!==m.intensity?m.intensity:1,"DirectionalLight"===m.type?(o=m.direction,g=new THREE.DirectionalLight(y,b),g.position.set(o[0],o[1],o[2]),m.target&&(N.push({object:g,targetName:m.target}),g.target=null)):"PointLight"===m.type?(o=m.position,i=m.distance,g=new THREE.PointLight(y,b,i),g.position.set(o[0],o[1],o[2])):"AmbientLight"===m.type&&(g=new THREE.AmbientLight(y)),e.add(g),g.name=v,T.lights[v]=g,T.objects[v]=g):"PerspectiveCamera"===m.type||"OrthographicCamera"===m.type?("PerspectiveCamera"===m.type?d=new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far):"OrthographicCamera"===m.type&&(d=new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),o=m.position,d.position.set(o[0],o[1],o[2]),e.add(d),d.name=v,T.cameras[v]=d,T.objects[v]=d):(o=m.position,a=m.rotation,f=m.scale,c=m.quaternion,w=new THREE.Object3D,w.name=v,w.position.set(o[0],o[1],o[2]),c?(w.quaternion.set(c[0],c[1],c[2],c[3]),w.useQuaternion=!0):w.rotation.set(a[0],a[1],a[2]),w.scale.set(f[0],f[1],f[2]),w.visible=void 0!==m.visible?m.visible:!1,e.add(w),T.objects[v]=w,T.empties[v]=w);if(w){if(void 0!==m.properties)for(var S in m.properties)w.properties[S]=m.properties[S];if(void 0!==m.groups)for(i=0;i<m.groups.length;i++)o=m.groups[i],void 0===T.groups[o]&&(T.groups[o]=[]),T.groups[o].push(v);void 0!==m.children&&s(w,m.children)}}}function o(e){return function(t,n){T.geometries[e]=t,T.face_materials[e]=n,i(),w-=1,l.onLoadComplete(),f()}}function u(e,t,n,r){return function(s){var s=s.content?s.content:s.dae?s.scene:s,o=r.position,u=r.rotation,a=r.quaternion,c=r.scale;s.position.set(o[0],o[1],o[2]),a?(s.quaternion.set(a[0],a[1],a[2],a[3]),s.useQuaternion=!0):s.rotation.set(u[0],u[1],u[2]),s.scale.set(c[0],c[1],c[2]),n&&s.traverse(function(e){e.material=n});var h=void 0!==r.visible?r.visible:!0;s.traverse(function(e){e.visible=h}),t.add(s),s.name=e,T.objects[e]=s,i(),w-=1,l.onLoadComplete(),f()}}function a(e){return function(t,n){T.geometries[e]=t,T.face_materials[e]=n}}function f(){l.callbackProgress({totalModels:S,totalTextures:x,loadedModels:S-w,loadedTextures:x-E},T),l.onLoadProgress();if(0===w&&0===E){for(var e=0;e<N.length;e++){var n=N[e],r=T.objects[n.targetName];r?n.object.target=r:(n.object.target=new THREE.Object3D,T.scene.add(n.object.target)),n.object.target.properties.targetInverse=n.object}t(T)}}var l=this,c=THREE.Loader.prototype.extractUrlBase(n),h,p,d,v,m,g,y,b,w,E,S,x,T,N=[],C=e,k;for(k in this.geometryHandlerMap)e=this.geometryHandlerMap[k].loaderClass,this.geometryHandlerMap[k].loaderObject=new e;for(k in this.hierarchyHandlerMap)e=this.hierarchyHandlerMap[k].loaderClass,this.hierarchyHandlerMap[k].loaderObject=new e;E=w=0,T={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},C.transform&&(k=C.transform.position,e=C.transform.rotation,n=C.transform.scale,k&&T.scene.position.set(k[0],k[1],k[2]),e&&T.scene.rotation.set(e[0],e[1],e[2]),n&&T.scene.scale.set(n[0],n[1],n[2]),k||e||n)&&(T.scene.updateMatrix(),T.scene.updateMatrixWorld()),k=function(e){return function(){E-=e,f(),l.onLoadComplete()}};for(var L in C.fogs)e=C.fogs[L],"linear"===e.type?v=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(v=new THREE.FogExp2(0,e.density)),e=e.color,v.color.setRGB(e[0],e[1],e[2]),T.fogs[L]=v;for(var A in C.geometries)v=C.geometries[A],v.type in this.geometryHandlerMap&&(w+=1,l.onLoadStart());for(var O in C.objects)v=C.objects[O],v.type&&v.type in this.hierarchyHandlerMap&&(w+=1,l.onLoadStart());S=w;for(A in C.geometries)if(v=C.geometries[A],"cube"===v.type)h=new THREE.CubeGeometry(v.width,v.height,v.depth,v.widthSegments,v.heightSegments,v.depthSegments),T.geometries[A]=h;else if("plane"===v.type)h=new THREE.PlaneGeometry(v.width,v.height,v.widthSegments,v.heightSegments),T.geometries[A]=h;else if("sphere"===v.type)h=new THREE.SphereGeometry(v.radius,v.widthSegments,v.heightSegments),T.geometries[A]=h;else if("cylinder"===v.type)h=new THREE.CylinderGeometry(v.topRad,v.botRad,v.height,v.radSegs,v.heightSegs),T.geometries[A]=h;else if("torus"===v.type)h=new THREE.TorusGeometry(v.radius,v.tube,v.segmentsR,v.segmentsT),T.geometries[A]=h;else if("icosahedron"===v.type)h=new THREE.IcosahedronGeometry(v.radius,v.subdivisions),T.geometries[A]=h;else if(v.type in this.geometryHandlerMap){O={};for(m in v)"type"!==m&&"url"!==m&&(O[m]=v[m]);this.geometryHandlerMap[v.type].loaderObject.load(r(v.url,C.urlBaseType),o(A),O)}else"embedded"===v.type&&(O=C.embeds[v.id],O.metadata=C.metadata,O&&this.geometryHandlerMap.ascii.loaderObject.createModel(O,a(A),""));for(var M in C.textures)if(A=C.textures[M],A.url instanceof Array){E+=A.url.length;for(m=0;m<A.url.length;m++)l.onLoadStart()}else E+=1,l.onLoadStart();x=E;for(M in C.textures){A=C.textures[M],void 0!==A.mapping&&void 0!==THREE[A.mapping]&&(A.mapping=new THREE[A.mapping]);if(A.url instanceof Array){O=A.url.length,v=[];for(m=0;m<O;m++)v[m]=r(A.url[m],C.urlBaseType);m=(m=v[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(v,A.mapping,k(O)):THREE.ImageUtils.loadTextureCube(v,A.mapping,k(O))}else m=A.url.toLowerCase().endsWith(".dds"),O=r(A.url,C.urlBaseType),v=k(1),m=m?THREE.ImageUtils.loadCompressedTexture(O,A.mapping,v):THREE.ImageUtils.loadTexture(O,A.mapping,v),void 0!==THREE[A.minFilter]&&(m.minFilter=THREE[A.minFilter]),void 0!==THREE[A.magFilter]&&(m.magFilter=THREE[A.magFilter]),A.anisotropy&&(m.anisotropy=A.anisotropy),A.repeat&&(m.repeat.set(A.repeat[0],A.repeat[1]),1!==A.repeat[0]&&(m.wrapS=THREE.RepeatWrapping),1!==A.repeat[1]&&(m.wrapT=THREE.RepeatWrapping)),A.offset&&m.offset.set(A.offset[0],A.offset[1]),A.wrap&&(O={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==O[A.wrap[0]]&&(m.wrapS=O[A.wrap[0]]),void 0!==O[A.wrap[1]]&&(m.wrapT=O[A.wrap[1]]));T.textures[M]=m}var _,D;for(_ in C.materials){M=C.materials[_];for(D in M.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?M.parameters[D]=T.textures[M.parameters[D]]:"shading"===D?M.parameters[D]="flat"===M.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?M.parameters[D]="double"==M.parameters[D]?THREE.DoubleSide:"back"==M.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?M.parameters[D]=M.parameters[D]in THREE?THREE[M.parameters[D]]:THREE.NormalBlending:"combine"===D?M.parameters[D]=M.parameters[D]in THREE?THREE[M.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==M.parameters[D]?M.parameters[D]=THREE.FaceColors:M.parameters[D]&&(M.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(k=M.parameters[D],M.parameters[D]=new THREE.Vector3(k[0],k[1],k[2]));void 0!==M.parameters.opacity&&1>M.parameters.opacity&&(M.parameters.transparent=!0),M.parameters.normalMap?(k=THREE.ShaderLib.normalmap,A=THREE.UniformsUtils.clone(k.uniforms),m=M.parameters.color,O=M.parameters.specular,v=M.parameters.ambient,L=M.parameters.shininess,A.tNormal.value=T.textures[M.parameters.normalMap],M.parameters.normalScale&&A.uNormalScale.value.set(M.parameters.normalScale[0],M.parameters.normalScale[1]),M.parameters.map&&(A.tDiffuse.value=M.parameters.map,A.enableDiffuse.value=!0),M.parameters.envMap&&(A.tCube.value=M.parameters.envMap,A.enableReflection.value=!0,A.uReflectivity.value=M.parameters.reflectivity),M.parameters.lightMap&&(A.tAO.value=M.parameters.lightMap,A.enableAO.value=!0),M.parameters.specularMap&&(A.tSpecular.value=T.textures[M.parameters.specularMap],A.enableSpecular.value=!0),M.parameters.displacementMap&&(A.tDisplacement.value=T.textures[M.parameters.displacementMap],A.enableDisplacement.value=!0,A.uDisplacementBias.value=M.parameters.displacementBias,A.uDisplacementScale.value=M.parameters.displacementScale),A.uDiffuseColor.value.setHex(m),A.uSpecularColor.value.setHex(O),A.uAmbientColor.value.setHex(v),A.uShininess.value=L,M.parameters.opacity&&(A.uOpacity.value=M.parameters.opacity),p=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:A,lights:!0,fog:!0})):p=new THREE[M.type](M.parameters),T.materials[_]=p}for(_ in C.materials)if(M=C.materials[_],M.parameters.materials){D=[];for(m=0;m<M.parameters.materials.length;m++)D.push(T.materials[M.parameters.materials[m]]);T.materials[_].materials=D}i(),T.cameras&&C.defaults.camera&&(T.currentCamera=T.cameras[C.defaults.camera]),T.fogs&&C.defaults.fog&&(T.scene.fog=T.fogs[C.defaults.fog]),l.callbackSync(T),f()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,n=new Image;n.addEventListener("load",function(){var e=new THREE.Texture(n);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),n.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(n.crossOrigin=t.crossOrigin),n.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.overdraw=!1,this.needsUpdate=this.visible=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0===n)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color&&n instanceof THREE.Color?r.copy(n):r instanceof THREE.Color?r.set(n):r instanceof THREE.Vector3&&n instanceof THREE.Vector3?r.copy(n):this[t]=n}}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,n,r,i,s,o,u,a){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==n?n:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i?i:THREE.LinearFilter,this.minFilter=void 0!==s?s:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==a?a:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==u?u:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l),this.image={width:t,height:n},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l),this.image={data:e,width:t,height:n}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,n){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==n?n:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix());if(t||this.matrixWorldNeedsUpdate)e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0;var n,r=this.children.length;for(n=0;n<r;n++)this.children[n].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==n?n:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,i,s;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)n=this.geometry.bones[e],r=n.pos,i=n.rotq,s=n.scl,t=this.addBone(),t.name=n.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(i[0],i[1],i[2],i[3]),t.useQuaternion=!0,void 0!==s?t.scale.set(s[0],s[1],s[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)n=this.geometry.bones[e],t=this.bones[e],-1===n.parent?this.add(t):this.bones[n.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<e?64:64<e?32:16<e?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var e=0,t=this.children.length;e<t;e++){var n=this.children[e];n instanceof THREE.Bone?n.update(this.identityMatrix,!1):n.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[],e=0;for(t=this.bones.length;e<t;e++)n=new THREE.Matrix4,n.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(n)}e=0;for(t=this.bones.length;e<t;e++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();Infinity!==n?t.multiplyScalar(n):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,n=e.animations,r=/([a-z]+)(\d+)/,i=0,s=e.morphTargets.length;i<s;i++){var o=e.morphTargets[i].name.match(r);if(o&&1<o.length){o=o[1],n[o]||(n[o]={start:Infinity,end:-Infinity});var u=n[o];i<u.start&&(u.start=i),i>u.end&&(u.end=i),t||(t=o)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,n){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:n}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var n=this.geometry.animations[e];n?(this.setFrameRange(n.start,n.end),this.duration=1e3*((n.end-n.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),n=0;n<this.LODs.length&&!(t<this.LODs[n].visibleAtDistance);n++);this.LODs.splice(n,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(1<this.LODs.length){e.matrixWorldInverse.getInverse(e.matrixWorld),e=e.matrixWorldInverse,e=-(e.elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length;t++){if(!(e>=this.LODs[t].visibleAtDistance))break;this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0}for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||(t=this.__objects.indexOf(e),-1!==t&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1)));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,n){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){y!==e&&(y=v.globalAlpha=e)}function n(e){b!==e&&(e===THREE.NormalBlending?v.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?v.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(v.globalCompositeOperation="darker"),b=e)}function r(e){w!==e&&(w=v.strokeStyle=e)}function i(e){E!==e&&(E=v.fillStyle=e)}console.log("THREE.CanvasRenderer",THREE.REVISION);var e=e||{},s=this,o,u,a,f=new THREE.Projector,l=void 0!==e.canvas?e.canvas:document.createElement("canvas"),c,h,p,d,v=l.getContext("2d"),m=new THREE.Color(0),g=0,y=1,b=0,w=null,E=null,S=null,x=null,T=null,N,C,k,L,A=new THREE.RenderableVertex,O=new THREE.RenderableVertex,M,_,D,P,H,B,j,F,I,q,R,U,z=new THREE.Color,W=new THREE.Color,X=new THREE.Color,V=new THREE.Color,$=new THREE.Color,J=new THREE.Color,K=new THREE.Color,Q=new THREE.Color,G={},Y={},Z,et,tt,nt,rt,it,st,ot,ut,at,ft=new THREE.Box2,lt=new THREE.Box2,ct=new THREE.Box2,ht=!1,pt=new THREE.Color,dt=new THREE.Color,vt=new THREE.Color,mt=new THREE.Vector3,gt,yt,bt,wt,Et,St,xt=16;gt=document.createElement("canvas"),gt.width=gt.height=2,yt=gt.getContext("2d"),yt.fillStyle="rgba(0,0,0,1)",yt.fillRect(0,0,2,2),bt=yt.getImageData(0,0,2,2),wt=bt.data,Et=document.createElement("canvas"),Et.width=Et.height=xt,St=Et.getContext("2d"),St.translate(-xt/2,-xt/2),St.scale(xt,xt),xt--,this.domElement=l,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){c=e*this.devicePixelRatio,h=t*this.devicePixelRatio,p=Math.floor(c/2),d=Math.floor(h/2),l.width=c,l.height=h,l.style.width=e+"px",l.style.height=t+"px",ft.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d)),lt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d)),y=1,b=0,T=x=S=E=w=null},this.setClearColor=function(e,t){m.copy(e),g=void 0!==t?t:1,lt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d))},this.setClearColorHex=function(e,t){m.setHex(e),g=void 0!==t?t:1,lt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){v.setTransform(1,0,0,-1,p,d),!1===lt.empty()&&(lt.intersect(ft),lt.expandByScalar(2),1>g&&v.clearRect(lt.min.x|0,lt.min.y|0,lt.max.x-lt.min.x|0,lt.max.y-lt.min.y|0),0<g&&(n(THREE.NormalBlending),t(1),i("rgba("+Math.floor(255*m.r)+","+Math.floor(255*m.g)+","+Math.floor(255*m.b)+","+g+")"),v.fillRect(lt.min.x|0,lt.min.y|0,lt.max.x-lt.min.x|0,lt.max.y-lt.min.y|0)),lt.makeEmpty())},this.render=function(e,l){function c(e,t,n){for(var r=0,i=a.length;r<i;r++){var s=a[r];Q.copy(s.color);if(s instanceof THREE.DirectionalLight){var o=s.matrixWorld.getPosition().normalize(),u=t.dot(o);0>=u||(u*=s.intensity,n.add(Q.multiplyScalar(u)))}else s instanceof THREE.PointLight&&(o=s.matrixWorld.getPosition(),u=t.dot(mt.subVectors(o,e).normalize()),0>=u||(u*=0==s.distance?1:1-Math.min(e.distanceTo(o)/s.distance,1),0!=u&&(u*=s.intensity,n.add(Q.multiplyScalar(u)))))}}function h(e,r,i,o,u,a,f,h){s.info.render.vertices+=3,s.info.render.faces++,t(h.opacity),n(h.blending),M=e.positionScreen.x,_=e.positionScreen.y,D=r.positionScreen.x,P=r.positionScreen.y,H=i.positionScreen.x,B=i.positionScreen.y,m(M,_,D,P,H,B),(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&null===h.map&&null===h.map?(J.copy(h.color),K.copy(h.emissive),h.vertexColors===THREE.FaceColors&&J.multiply(f.color),!0===ht?!1===h.wireframe&&h.shading==THREE.SmoothShading&&3==f.vertexNormalsLength?(W.copy(pt),X.copy(pt),V.copy(pt),c(f.v1.positionWorld,f.vertexNormalsModel[0],W),c(f.v2.positionWorld,f.vertexNormalsModel[1],X),c(f.v3.positionWorld,f.vertexNormalsModel[2],V),W.multiply(J).add(K),X.multiply(J).add(K),V.multiply(J).add(K),$.addColors(X,V).multiplyScalar(.5),tt=xt(W,X,V,$),E(M,_,D,P,H,B,0,0,1,0,0,1,tt)):(z.copy(pt),c(f.centroidModel,f.normalModel,z),z.multiply(J).add(K),!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z)):!0===h.wireframe?y(h.color,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(h.color)):h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial?null!==h.map?h.map.mapping instanceof THREE.UVMapping&&(nt=f.uvs[0],w(M,_,D,P,H,B,nt[o].x,nt[o].y,nt[u].x,nt[u].y,nt[a].x,nt[a].y,h.map)):null!==h.envMap?h.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(mt.copy(f.vertexNormalsModelView[o]),rt=.5*mt.x+.5,it=.5*mt.y+.5,mt.copy(f.vertexNormalsModelView[u]),st=.5*mt.x+.5,ot=.5*mt.y+.5,mt.copy(f.vertexNormalsModelView[a]),ut=.5*mt.x+.5,at=.5*mt.y+.5,w(M,_,D,P,H,B,rt,it,st,ot,ut,at,h.envMap)):(z.copy(h.color),h.vertexColors===THREE.FaceColors&&z.multiply(f.color),!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z)):h instanceof THREE.MeshDepthMaterial?(Z=l.near,et=l.far,u=1-Tt(e.positionScreen.z*e.positionScreen.w,Z,et),W.setRGB(u,u,u),u=1-Tt(r.positionScreen.z*r.positionScreen.w,Z,et),X.setRGB(u,u,u),u=1-Tt(i.positionScreen.z*i.positionScreen.w,Z,et),V.setRGB(u,u,u),$.addColors(X,V).multiplyScalar(.5),tt=xt(W,X,V,$),E(M,_,D,P,H,B,0,0,1,0,0,1,tt)):h instanceof THREE.MeshNormalMaterial&&(h.shading==THREE.FlatShading?(r=f.normalModelView,z.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),!0===h.wireframe?y(z,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):b(z)):h.shading==THREE.SmoothShading&&(r=f.vertexNormalsModelView[o],W.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=f.vertexNormalsModelView[u],X.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=f.vertexNormalsModelView[a],V.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),$.addColors(X,V).multiplyScalar(.5),tt=xt(W,X,V,$),E(M,_,D,P,H,B,0,0,1,0,0,1,tt)))}function m(e,t,n,r,i,s){v.beginPath(),v.moveTo(e,t),v.lineTo(n,r),v.lineTo(i,s),v.closePath()}function g(e,t,n,r,i,s,o,u){v.beginPath(),v.moveTo(e,t),v.lineTo(n,r),v.lineTo(i,s),v.lineTo(o,u),v.closePath()}function y(e,t,n,i){S!==t&&(S=v.lineWidth=t),x!==n&&(x=v.lineCap=n),T!==i&&(T=v.lineJoin=i),r(e.getStyle()),v.stroke(),ct.expandByScalar(2*t)}function b(e){i(e.getStyle()),v.fill()}function w(e,t,n,r,s,o,u,a,f,l,c,h,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(!0===p.needsUpdate){var d=p.wrapS==THREE.RepeatWrapping,m=p.wrapT==THREE.RepeatWrapping;G[p.id]=v.createPattern(p.image,!0===d&&!0===m?"repeat":!0===d&&!1===m?"repeat-x":!1===d&&!0===m?"repeat-y":"no-repeat"),p.needsUpdate=!1}void 0===G[p.id]?i("rgba(0,0,0,1)"):i(G[p.id]);var d=p.offset.x/p.repeat.x,m=p.offset.y/p.repeat.y,g=p.image.width*p.repeat.x,y=p.image.height*p.repeat.y,u=(u+d)*g,a=(1-a+m)*y,n=n-e,r=r-t,s=s-e,o=o-t,f=(f+d)*g-u,l=(1-l+m)*y-a,c=(c+d)*g-u,h=(1-h+m)*y-a,d=f*h-c*l;0===d?(void 0===Y[p.id]&&(t=document.createElement("canvas"),t.width=p.image.width,t.height=p.image.height,t=t.getContext("2d"),t.drawImage(p.image,0,0),Y[p.id]=t.getImageData(0,0,p.image.width,p.image.height).data),t=Y[p.id],u=4*(Math.floor(u)+Math.floor(a)*p.image.width),z.setRGB(t[u]/255,t[u+1]/255,t[u+2]/255),b(z)):(d=1/d,p=(h*n-l*s)*d,l=(h*r-l*o)*d,n=(f*s-c*n)*d,r=(f*o-c*r)*d,e=e-p*u-n*a,u=t-l*u-r*a,v.save(),v.transform(p,l,n,r,e,u),v.fill(),v.restore())}}function E(e,t,n,r,i,s,o,u,a,f,l,c,h){var p,d;p=h.width-1,d=h.height-1,o*=p,u*=d,n-=e,r-=t,i-=e,s-=t,a=a*p-o,f=f*d-u,l=l*p-o,c=c*d-u,d=1/(a*c-l*f),p=(c*n-f*i)*d,f=(c*r-f*s)*d,n=(a*i-l*n)*d,r=(a*s-l*r)*d,e=e-p*o-n*u,t=t-f*o-r*u,v.save(),v.transform(p,f,n,r,e,t),v.clip(),v.drawImage(h,0,0),v.restore()}function xt(e,t,n,r){return wt[0]=255*e.r|0,wt[1]=255*e.g|0,wt[2]=255*e.b|0,wt[4]=255*t.r|0,wt[5]=255*t.g|0,wt[6]=255*t.b|0,wt[8]=255*n.r|0,wt[9]=255*n.g|0,wt[10]=255*n.b|0,wt[12]=255*r.r|0,wt[13]=255*r.g|0,wt[14]=255*r.b|0,yt.putImageData(bt,0,0),St.drawImage(gt,0,0),Et}function Tt(e,t,n){return e=(e-t)/(n-t),e*e*(3-2*e)}function Nt(e,t){var n=t.x-e.x,r=t.y-e.y,i=n*n+r*r;0!==i&&(i=1/Math.sqrt(i),n*=i,r*=i,t.x+=n,t.y+=r,e.x-=n,e.y-=r)}if(0==l instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),v.setTransform(1,0,0,-1,p,d),s.info.render.vertices=0,s.info.render.faces=0,o=f.projectScene(e,l,this.sortObjects,this.sortElements),u=o.elements,a=o.lights,ht=0<a.length;if(!0===ht){pt.setRGB(0,0,0),dt.setRGB(0,0,0),vt.setRGB(0,0,0);for(var Ct=0,kt=a.length;Ct<kt;Ct++){var Lt=a[Ct],At=Lt.color;Lt instanceof THREE.AmbientLight?pt.add(At):Lt instanceof THREE.DirectionalLight?dt.add(At):Lt instanceof THREE.PointLight&&vt.add(At)}}Ct=0;for(kt=u.length;Ct<kt;Ct++){var Ot=u[Ct],Lt=Ot.material;if(void 0!==Lt&&!1!==Lt.visible){ct.makeEmpty();if(Ot instanceof THREE.RenderableParticle){N=Ot,N.x*=p,N.y*=d;var At=N,Mt=Ot;t(Lt.opacity),n(Lt.blending);var _t=void 0,Dt=void 0,Pt=void 0,Ht=void 0,Bt=Ot=void 0,jt=void 0;Lt instanceof THREE.ParticleBasicMaterial?null===Lt.map?(Pt=Mt.object.scale.x,Ht=Mt.object.scale.y,Pt*=Mt.scale.x*p,Ht*=Mt.scale.y*d,ct.min.set(At.x-Pt,At.y-Ht),ct.max.set(At.x+Pt,At.y+Ht),!1!==ft.isIntersectionBox(ct)&&(i(Lt.color.getStyle()),v.save(),v.translate(At.x,At.y),v.rotate(-Mt.rotation),v.scale(Pt,Ht),v.fillRect(-1,-1,2,2),v.restore())):(Ot=Lt.map.image,Bt=Ot.width>>1,jt=Ot.height>>1,Pt=Mt.scale.x*p,Ht=Mt.scale.y*d,_t=Pt*Bt,Dt=Ht*jt,ct.min.set(At.x-_t,At.y-Dt),ct.max.set(At.x+_t,At.y+Dt),!1!==ft.isIntersectionBox(ct)&&(v.save(),v.translate(At.x,At.y),v.rotate(-Mt.rotation),v.scale(Pt,-Ht),v.translate(-Bt,-jt),v.drawImage(Ot,0,0),v.restore())):Lt instanceof THREE.ParticleCanvasMaterial&&(_t=Mt.scale.x*p,Dt=Mt.scale.y*d,ct.min.set(At.x-_t,At.y-Dt),ct.max.set(At.x+_t,At.y+Dt),!1!==ft.isIntersectionBox(ct)&&(r(Lt.color.getStyle()),i(Lt.color.getStyle()),v.save(),v.translate(At.x,At.y),v.rotate(-Mt.rotation),v.scale(_t,Dt),Lt.program(v),v.restore()))}else if(Ot instanceof THREE.RenderableLine)N=Ot.v1,C=Ot.v2,N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,ct.setFromPoints([N.positionScreen,C.positionScreen]),!0===ft.isIntersectionBox(ct)&&(At=N,Mt=C,t(Lt.opacity),n(Lt.blending),v.beginPath(),v.moveTo(At.positionScreen.x,At.positionScreen.y),v.lineTo(Mt.positionScreen.x,Mt.positionScreen.y),Lt instanceof THREE.LineBasicMaterial&&(At=Lt.linewidth,S!==At&&(S=v.lineWidth=At),At=Lt.linecap,x!==At&&(x=v.lineCap=At),At=Lt.linejoin,T!==At&&(T=v.lineJoin=At),r(Lt.color.getStyle()),v.stroke(),ct.expandByScalar(2*Lt.linewidth)));else if(Ot instanceof THREE.RenderableFace3){N=Ot.v1,C=Ot.v2,k=Ot.v3;if(-1>N.positionScreen.z||1<N.positionScreen.z)continue;if(-1>C.positionScreen.z||1<C.positionScreen.z)continue;if(-1>k.positionScreen.z||1<k.positionScreen.z)continue;N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,k.positionScreen.x*=p,k.positionScreen.y*=d,!0===Lt.overdraw&&(Nt(N.positionScreen,C.positionScreen),Nt(C.positionScreen,k.positionScreen),Nt(k.positionScreen,N.positionScreen)),ct.setFromPoints([N.positionScreen,C.positionScreen,k.positionScreen]),h(N,C,k,0,1,2,Ot,Lt,e)}else if(Ot instanceof THREE.RenderableFace4){N=Ot.v1,C=Ot.v2,k=Ot.v3,L=Ot.v4;if(-1>N.positionScreen.z||1<N.positionScreen.z)continue;if(-1>C.positionScreen.z||1<C.positionScreen.z)continue;if(-1>k.positionScreen.z||1<k.positionScreen.z)continue;if(-1>L.positionScreen.z||1<L.positionScreen.z)continue;N.positionScreen.x*=p,N.positionScreen.y*=d,C.positionScreen.x*=p,C.positionScreen.y*=d,k.positionScreen.x*=p,k.positionScreen.y*=d,L.positionScreen.x*=p,L.positionScreen.y*=d,A.positionScreen.copy(C.positionScreen),O.positionScreen.copy(L.positionScreen),!0===Lt.overdraw&&(Nt(N.positionScreen,C.positionScreen),Nt(C.positionScreen,L.positionScreen),Nt(L.positionScreen,N.positionScreen),Nt(k.positionScreen,A.positionScreen),Nt(k.positionScreen,O.positionScreen)),ct.setFromPoints([N.positionScreen,C.positionScreen,k.positionScreen,L.positionScreen]),At=N,Mt=C,_t=k,Dt=L,Pt=A,Ht=O,Bt=e,s.info.render.vertices+=4,s.info.render.faces++,t(Lt.opacity),n(Lt.blending),void 0!==Lt.map&&null!==Lt.map||void 0!==Lt.envMap&&null!==Lt.envMap?(h(At,Mt,Dt,0,1,3,Ot,Lt,Bt),h(Pt,_t,Ht,1,2,3,Ot,Lt,Bt)):(M=At.positionScreen.x,_=At.positionScreen.y,D=Mt.positionScreen.x,P=Mt.positionScreen.y,H=_t.positionScreen.x,B=_t.positionScreen.y,j=Dt.positionScreen.x,F=Dt.positionScreen.y,I=Pt.positionScreen.x,q=Pt.positionScreen.y,R=Ht.positionScreen.x,U=Ht.positionScreen.y,Lt instanceof THREE.MeshLambertMaterial||Lt instanceof THREE.MeshPhongMaterial?(J.copy(Lt.color),K.copy(Lt.emissive),Lt.vertexColors===THREE.FaceColors&&J.multiply(Ot.color),!0===ht?!1===Lt.wireframe&&Lt.shading==THREE.SmoothShading&&4==Ot.vertexNormalsLength?(W.copy(pt),X.copy(pt),V.copy(pt),$.copy(pt),c(Ot.v1.positionWorld,Ot.vertexNormalsModel[0],W),c(Ot.v2.positionWorld,Ot.vertexNormalsModel[1],X),c(Ot.v4.positionWorld,Ot.vertexNormalsModel[3],V),c(Ot.v3.positionWorld,Ot.vertexNormalsModel[2],$),W.multiply(J).add(K),X.multiply(J).add(K),V.multiply(J).add(K),$.multiply(J).add(K),tt=xt(W,X,V,$),m(M,_,D,P,j,F),E(M,_,D,P,j,F,0,0,1,0,0,1,tt),m(I,q,H,B,R,U),E(I,q,H,B,R,U,1,0,1,1,0,1,tt)):(z.copy(pt),c(Ot.centroidModel,Ot.normalModel,z),z.multiply(J).add(K),g(M,_,D,P,H,B,j,F),!0===Lt.wireframe?y(z,Lt.wireframeLinewidth,Lt.wireframeLinecap,Lt.wireframeLinejoin):b(z)):(z.addColors(J,K),g(M,_,D,P,H,B,j,F),!0===Lt.wireframe?y(z,Lt.wireframeLinewidth,Lt.wireframeLinecap,Lt.wireframeLinejoin):b(z))):Lt instanceof THREE.MeshBasicMaterial?(z.copy(Lt.color),Lt.vertexColors===THREE.FaceColors&&z.multiply(Ot.color),g(M,_,D,P,H,B,j,F),!0===Lt.wireframe?y(z,Lt.wireframeLinewidth,Lt.wireframeLinecap,Lt.wireframeLinejoin):b(z)):Lt instanceof THREE.MeshNormalMaterial?(At=void 0,Lt.shading==THREE.FlatShading?(At=Ot.normalModelView,z.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),g(M,_,D,P,H,B,j,F),!0===Lt.wireframe?y(z,Lt.wireframeLinewidth,Lt.wireframeLinecap,Lt.wireframeLinejoin):b(z)):Lt.shading==THREE.SmoothShading&&(At=Ot.vertexNormalsModelView[0],W.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),At=Ot.vertexNormalsModelView[1],X.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),At=Ot.vertexNormalsModelView[3],V.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),At=Ot.vertexNormalsModelView[2],$.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),tt=xt(W,X,V,$),m(M,_,D,P,j,F),E(M,_,D,P,j,F,0,0,1,0,0,1,tt),m(I,q,H,B,R,U),E(I,q,H,B,R,U,1,0,1,1,0,1,tt))):Lt instanceof THREE.MeshDepthMaterial&&(Z=l.near,et=l.far,W.r=W.g=W.b=1-Tt(At.positionScreen.z*At.positionScreen.w,Z,et),X.r=X.g=X.b=1-Tt(Mt.positionScreen.z*Mt.positionScreen.w,Z,et),V.r=V.g=V.b=1-Tt(Dt.positionScreen.z*Dt.positionScreen.w,Z,et),$.r=$.g=$.b=1-Tt(_t.positionScreen.z*_t.positionScreen.w,Z,et),tt=xt(W,X,V,$),m(M,_,D,P,j,F),E(M,_,D,P,j,F,0,0,1,0,0,1,tt),m(I,q,H,B,R,U),E(I,q,H,B,R,U,1,0,1,1,0,1,tt)))}lt.union(ct)}}v.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,n,r,i={};for(t=0;t<e.length;t++)for(n in r=this.clone(e[t]),r)i[n]=r[n];return i},clone:function(e){var t,n,r,i={};for(t in e)for(n in i[t]={},e[t])r=e[t][n],i[t][n]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return i}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Tt.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function n(e,t){var n=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var i in r.attributes){var s=r.attributes[i];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var o=1;"v2"===s.type?o=2:"v3"===s.type?o=3:"v4"===s.type?o=4:"c"===s.type&&(o=3),s.size=o,s.array=new Float32Array(n*o),s.buffer=Tt.createBuffer(),s.buffer.belongsToAttribute=i,s.needsUpdate=!0}e.__webglCustomAttributesList.push(s)}}}function r(e,t){var n=t.geometry,r=e.faces3,u=e.faces4,a=3*r.length+4*u.length,f=1*r.length+2*u.length,u=3*r.length+4*u.length,r=i(t,e),l=o(r),c=s(r),h=r.vertexColors?r.vertexColors:!1;e.__vertexArray=new Float32Array(3*a),c&&(e.__normalArray=new Float32Array(3*a)),n.hasTangents&&(e.__tangentArray=new Float32Array(4*a)),h&&(e.__colorArray=new Float32Array(3*a));if(l){if(0<n.faceUvs.length||0<n.faceVertexUvs.length)e.__uvArray=new Float32Array(2*a);if(1<n.faceUvs.length||1<n.faceVertexUvs.length)e.__uv2Array=new Float32Array(2*a)}t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*a),e.__skinWeightArray=new Float32Array(4*a)),e.__faceArray=new Uint16Array(3*f),e.__lineArray=new Uint16Array(2*u);if(e.numMorphTargets){e.__morphTargetsArrays=[],n=0;for(l=e.numMorphTargets;n<l;n++)e.__morphTargetsArrays.push(new Float32Array(3*a))}if(e.numMorphNormals){e.__morphNormalsArrays=[],n=0;for(l=e.numMorphNormals;n<l;n++)e.__morphNormalsArrays.push(new Float32Array(3*a))}e.__webglFaceCount=3*f,e.__webglLineCount=2*u;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var p in r.attributes){var f=r.attributes[p],n={},d;for(d in f)n[d]=f[d];if(!n.__webglInitialized||n.createUniqueBuffers)n.__webglInitialized=!0,u=1,"v2"===n.type?u=2:"v3"===n.type?u=3:"v4"===n.type?u=4:"c"===n.type&&(u=3),n.size=u,n.array=new Float32Array(a*u),n.buffer=Tt.createBuffer(),n.buffer.belongsToAttribute=p,f.needsUpdate=!0,n.__original=f;e.__webglCustomAttributesList.push(n)}}e.__inittedArrays=!0}function i(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function s(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function u(e){var t,n,r;for(t in e.attributes)r="index"===t?Tt.ELEMENT_ARRAY_BUFFER:Tt.ARRAY_BUFFER,n=e.attributes[t],n.buffer=Tt.createBuffer(),Tt.bindBuffer(r,n.buffer),Tt.bufferData(r,n.array,Tt.STATIC_DRAW)}function a(e,t,n){var r=e.attributes,i=r.index,s=r.position,o=r.normal,u=r.uv,a=r.color,r=r.tangent;e.elementsNeedUpdate&&void 0!==i&&(Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,i.buffer),Tt.bufferData(Tt.ELEMENT_ARRAY_BUFFER,i.array,t)),e.verticesNeedUpdate&&void 0!==s&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,s.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,s.array,t)),e.normalsNeedUpdate&&void 0!==o&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,o.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,o.array,t)),e.uvsNeedUpdate&&void 0!==u&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,u.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,u.array,t)),e.colorsNeedUpdate&&void 0!==a&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,a.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,a.array,t)),e.tangentsNeedUpdate&&void 0!==r&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,r.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,r.array,t));if(n)for(var f in e.attributes)delete e.attributes[f].array}function f(e){mt[e]||(Tt.enableVertexAttribArray(e),mt[e]=!0)}function l(){for(var e in mt)mt[e]&&(Tt.disableVertexAttribArray(e),mt[e]=!1)}function c(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function h(e,t){return t[0]-e[0]}function p(e,t,n){if(e.length)for(var r=0,i=e.length;r<i;r++)K=X=null,$=J=Z=Y=st=it=et=-1,St=!0,e[r].render(t,n,dt,vt),K=X=null,$=J=Z=Y=st=it=et=-1,St=!0}function d(e,t,n,r,i,s,o,u){var a,f,l,c;t?(f=e.length-1,c=t=-1):(f=0,t=e.length,c=1);for(var h=f;h!==t;h+=c)if(a=e[h],a.render){f=a.object,l=a.buffer;if(u)a=u;else{a=a[n];if(!a)continue;o&&U.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst),U.setDepthTest(a.depthTest),U.setDepthWrite(a.depthWrite),C(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}U.setMaterialFaces(a),l instanceof THREE.BufferGeometry?U.renderBufferDirect(r,i,s,a,l,f):U.renderBuffer(r,i,s,a,l,f)}}function v(e,t,n,r,i,s,o){for(var u,a,f=0,l=e.length;f<l;f++)if(u=e[f],a=u.object,a.visible){if(o)u=o;else{u=u[t];if(!u)continue;s&&U.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),U.setDepthTest(u.depthTest),U.setDepthWrite(u.depthWrite),C(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}U.renderImmediateObject(n,r,i,u,a)}}function m(e,t,n){e.push({buffer:t,object:n,opaque:null,transparent:null})}function g(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function y(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function b(e,t){for(var n=e.length-1;0<=n;n--)e[n].object===t&&e.splice(n,1)}function w(e,t){for(var n=e.length-1;0<=n;n--)e[n]===t&&e.splice(n,1)}function E(e,t,n,r,i){G=0,r.needsUpdate&&(r.program&&Vt(r),U.initMaterial(r,t,n,i),r.needsUpdate=!1),r.morphTargets&&!i.__webglMorphTargetInfluences&&(i.__webglMorphTargetInfluences=new Float32Array(U.maxMorphTargets));var s=!1,o=r.program,u=o.uniforms,a=r.uniforms;o!==X&&(Tt.useProgram(o),X=o,s=!0),r.id!==$&&($=r.id,s=!0);if(s||e!==K)Tt.uniformMatrix4fv(u.projectionMatrix,!1,e.projectionMatrix.elements),e!==K&&(K=e);if(r.skinning)if(Ht&&i.useVertexTexture){if(null!==u.boneTexture){var f=S();Tt.uniform1i(u.boneTexture,f),U.setTexture(i.boneTexture,f)}}else null!==u.boneGlobalMatrices&&Tt.uniformMatrix4fv(u.boneGlobalMatrices,!1,i.boneMatrices);if(s){n&&r.fog&&(a.fogColor.value=n.color,n instanceof THREE.Fog?(a.fogNear.value=n.near,a.fogFar.value=n.far):n instanceof THREE.FogExp2&&(a.fogDensity.value=n.density));if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(St){for(var l,c=f=0,h=0,p,d,v,m=xt,g=m.directional.colors,y=m.directional.positions,b=m.point.colors,w=m.point.positions,E=m.point.distances,x=m.spot.colors,C=m.spot.positions,k=m.spot.distances,L=m.spot.directions,O=m.spot.anglesCos,M=m.spot.exponents,P=m.hemi.skyColors,H=m.hemi.groundColors,B=m.hemi.positions,j=0,F=0,I=0,q=0,R=0,z=0,W=0,V=0,J=l=0,n=v=J=0,s=t.length;n<s;n++)l=t[n],l.onlyShadow||(p=l.color,d=l.intensity,v=l.distance,l instanceof THREE.AmbientLight?l.visible&&(U.gammaInput?(f+=p.r*p.r,c+=p.g*p.g,h+=p.b*p.b):(f+=p.r,c+=p.g,h+=p.b)):l instanceof THREE.DirectionalLight?(R+=1,l.visible&&(Et.copy(l.matrixWorld.getPosition()),Et.sub(l.target.matrixWorld.getPosition()),Et.normalize(),0===Et.x&&0===Et.y&&0===Et.z||(l=3*j,y[l]=Et.x,y[l+1]=Et.y,y[l+2]=Et.z,U.gammaInput?T(g,l,p,d*d):N(g,l,p,d),j+=1))):l instanceof THREE.PointLight?(z+=1,l.visible&&(J=3*F,U.gammaInput?T(b,J,p,d*d):N(b,J,p,d),d=l.matrixWorld.getPosition(),w[J]=d.x,w[J+1]=d.y,w[J+2]=d.z,E[F]=v,F+=1)):l instanceof THREE.SpotLight?(W+=1,l.visible&&(J=3*I,U.gammaInput?T(x,J,p,d*d):N(x,J,p,d),d=l.matrixWorld.getPosition(),C[J]=d.x,C[J+1]=d.y,C[J+2]=d.z,k[I]=v,Et.copy(d),Et.sub(l.target.matrixWorld.getPosition()),Et.normalize(),L[J]=Et.x,L[J+1]=Et.y,L[J+2]=Et.z,O[I]=Math.cos(l.angle),M[I]=l.exponent,I+=1)):l instanceof THREE.HemisphereLight&&(V+=1,l.visible&&(Et.copy(l.matrixWorld.getPosition()),Et.normalize(),0===Et.x&&0===Et.y&&0===Et.z||(v=3*q,B[v]=Et.x,B[v+1]=Et.y,B[v+2]=Et.z,p=l.color,l=l.groundColor,U.gammaInput?(d*=d,T(P,v,p,d),T(H,v,l,d)):(N(P,v,p,d),N(H,v,l,d)),q+=1))));n=3*j;for(s=Math.max(g.length,3*R);n<s;n++)g[n]=0;n=3*F;for(s=Math.max(b.length,3*z);n<s;n++)b[n]=0;n=3*I;for(s=Math.max(x.length,3*W);n<s;n++)x[n]=0;n=3*q;for(s=Math.max(P.length,3*V);n<s;n++)P[n]=0;n=3*q;for(s=Math.max(H.length,3*V);n<s;n++)H[n]=0;m.directional.length=j,m.point.length=F,m.spot.length=I,m.hemi.length=q,m.ambient[0]=f,m.ambient[1]=c,m.ambient[2]=h,St=!1}n=xt,a.ambientLightColor.value=n.ambient,a.directionalLightColor.value=n.directional.colors,a.directionalLightDirection.value=n.directional.positions,a.pointLightColor.value=n.point.colors,a.pointLightPosition.value=n.point.positions,a.pointLightDistance.value=n.point.distances,a.spotLightColor.value=n.spot.colors,a.spotLightPosition.value=n.spot.positions,a.spotLightDistance.value=n.spot.distances,a.spotLightDirection.value=n.spot.directions,a.spotLightAngleCos.value=n.spot.anglesCos,a.spotLightExponent.value=n.spot.exponents,a.hemisphereLightSkyColor.value=n.hemi.skyColors,a.hemisphereLightGroundColor.value=n.hemi.groundColors,a.hemisphereLightDirection.value=n.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){a.opacity.value=r.opacity,U.gammaInput?a.diffuse.value.copyGammaToLinear(r.color):a.diffuse.value=r.color,a.map.value=r.map,a.lightMap.value=r.lightMap,a.specularMap.value=r.specularMap,r.bumpMap&&(a.bumpMap.value=r.bumpMap,a.bumpScale.value=r.bumpScale),r.normalMap&&(a.normalMap.value=r.normalMap,a.normalScale.value.copy(r.normalScale));var Q;r.map?Q=r.map:r.specularMap?Q=r.specularMap:r.normalMap?Q=r.normalMap:r.bumpMap&&(Q=r.bumpMap),void 0!==Q&&(n=Q.offset,Q=Q.repeat,a.offsetRepeat.value.set(n.x,n.y,Q.x,Q.y)),a.envMap.value=r.envMap,a.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,a.reflectivity.value=r.reflectivity,a.refractionRatio.value=r.refractionRatio,a.combine.value=r.combine,a.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}r instanceof THREE.LineBasicMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity,a.dashSize.value=r.dashSize,a.totalSize.value=r.dashSize+r.gapSize,a.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(a.psColor.value=r.color,a.opacity.value=r.opacity,a.size.value=r.size,a.scale.value=D.height/2,a.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(a.shininess.value=r.shininess,U.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive),a.specular.value.copyGammaToLinear(r.specular)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive,a.specular.value=r.specular),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(U.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(a.opacity.value=r.opacity);if(i.receiveShadow&&!r._shadowPass&&a.shadowMatrix){n=Q=0;for(s=t.length;n<s;n++)if(f=t[n],f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade))a.shadowMap.value[Q]=f.shadowMap,a.shadowMapSize.value[Q]=f.shadowMapSize,a.shadowMatrix.value[Q]=f.shadowMatrix,a.shadowDarkness.value[Q]=f.shadowDarkness,a.shadowBias.value[Q]=f.shadowBias,Q++}t=r.uniformsList,a=0;for(Q=t.length;a<Q;a++)if(s=o.uniforms[t[a][1]])if(n=t[a][0],c=n.type,f=n.value,"i"===c)Tt.uniform1i(s,f);else if("f"===c)Tt.uniform1f(s,f);else if("v2"===c)Tt.uniform2f(s,f.x,f.y);else if("v3"===c)Tt.uniform3f(s,f.x,f.y,f.z);else if("v4"===c)Tt.uniform4f(s,f.x,f.y,f.z,f.w);else if("c"===c)Tt.uniform3f(s,f.r,f.g,f.b);else if("iv1"===c)Tt.uniform1iv(s,f);else if("iv"===c)Tt.uniform3iv(s,f);else if("fv1"===c)Tt.uniform1fv(s,f);else if("fv"===c)Tt.uniform3fv(s,f);else if("v2v"===c){void 0===n._array&&(n._array=new Float32Array(2*f.length)),c=0;for(h=f.length;c<h;c++)m=2*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y;Tt.uniform2fv(s,n._array)}else if("v3v"===c){void 0===n._array&&(n._array=new Float32Array(3*f.length)),c=0;for(h=f.length;c<h;c++)m=3*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z;Tt.uniform3fv(s,n._array)}else if("v4v"===c){void 0===n._array&&(n._array=new Float32Array(4*f.length)),c=0;for(h=f.length;c<h;c++)m=4*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z,n._array[m+3]=f[c].w;Tt.uniform4fv(s,n._array)}else if("m4"===c)void 0===n._array&&(n._array=new Float32Array(16)),f.flattenToArray(n._array),Tt.uniformMatrix4fv(s,!1,n._array);else if("m4v"===c){void 0===n._array&&(n._array=new Float32Array(16*f.length)),c=0;for(h=f.length;c<h;c++)f[c].flattenToArrayOffset(n._array,16*c);Tt.uniformMatrix4fv(s,!1,n._array)}else if("t"===c){if(m=f,f=S(),Tt.uniform1i(s,f),m)if(m.image instanceof Array&&6===m.image.length){if(n=m,s=f,6===n.image.length)if(n.needsUpdate){n.image.__webglTextureCube||(n.image.__webglTextureCube=Tt.createTexture(),U.info.memory.textures++),Tt.activeTexture(Tt.TEXTURE0+s),Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube),Tt.pixelStorei(Tt.UNPACK_FLIP_Y_WEBGL,n.flipY),s=n instanceof THREE.CompressedTexture,f=[];for(c=0;6>c;c++)U.autoScaleCubemaps&&!s?(h=f,m=c,g=n.image[c],b=_t,g.width<=b&&g.height<=b||(w=Math.max(g.width,g.height),y=Math.floor(g.width*b/w),b=Math.floor(g.height*b/w),w=document.createElement("canvas"),w.width=y,w.height=b,w.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,y,b),g=w),h[m]=g):f[c]=n.image[c];c=f[0],h=0===(c.width&c.width-1)&&0===(c.height&c.height-1),m=_(n.format),g=_(n.type),A(Tt.TEXTURE_CUBE_MAP,n,h);for(c=0;6>c;c++)if(s){b=f[c].mipmaps,w=0;for(E=b.length;w<E;w++)y=b[w],Tt.compressedTexImage2D(Tt.TEXTURE_CUBE_MAP_POSITIVE_X+c,w,m,y.width,y.height,0,y.data)}else Tt.texImage2D(Tt.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,m,m,g,f[c]);n.generateMipmaps&&h&&Tt.generateMipmap(Tt.TEXTURE_CUBE_MAP),n.needsUpdate=!1,n.onUpdate&&n.onUpdate()}else Tt.activeTexture(Tt.TEXTURE0+s),Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(n=m,Tt.activeTexture(Tt.TEXTURE0+f),Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,n.__webglTexture)):U.setTexture(m,f)}else if("tv"===c){void 0===n._array&&(n._array=[]),c=0;for(h=n.value.length;c<h;c++)n._array[c]=S();Tt.uniform1iv(s,n._array),c=0;for(h=n.value.length;c<h;c++)m=n.value[c],f=n._array[c],m&&U.setTexture(m,f)}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==u.cameraPosition&&(t=e.matrixWorld.getPosition(),Tt.uniform3f(u.cameraPosition,t.x,t.y,t.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==u.viewMatrix&&Tt.uniformMatrix4fv(u.viewMatrix,!1,e.matrixWorldInverse.elements)}return Tt.uniformMatrix4fv(u.modelViewMatrix,!1,i._modelViewMatrix.elements),u.normalMatrix&&Tt.uniformMatrix3fv(u.normalMatrix,!1,i._normalMatrix.elements),null!==u.modelMatrix&&Tt.uniformMatrix4fv(u.modelMatrix,!1,i.matrixWorld.elements),o}function S(){var e=G;return e>=Ot&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ot),G+=1,e}function x(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function T(e,t,n,r){e[t]=n.r*n.r*r,e[t+1]=n.g*n.g*r,e[t+2]=n.b*n.b*r}function N(e,t,n,r){e[t]=n.r*r,e[t+1]=n.g*r,e[t+2]=n.b*r}function C(e,t,n){ot!==e&&(e?Tt.enable(Tt.POLYGON_OFFSET_FILL):Tt.disable(Tt.POLYGON_OFFSET_FILL),ot=e),e&&(ut!==t||at!==n)&&(Tt.polygonOffset(t,n),ut=t,at=n)}function k(e){for(var e=e.split("\n"),t=0,n=e.length;t<n;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function L(e,t){var n;return"fragment"===e?n=Tt.createShader(Tt.FRAGMENT_SHADER):"vertex"===e&&(n=Tt.createShader(Tt.VERTEX_SHADER)),Tt.shaderSource(n,t),Tt.compileShader(n),Tt.getShaderParameter(n,Tt.COMPILE_STATUS)?n:(console.error(Tt.getShaderInfoLog(n)),console.error(k(t)),null)}function A(e,t,n){n?(Tt.texParameteri(e,Tt.TEXTURE_WRAP_S,_(t.wrapS)),Tt.texParameteri(e,Tt.TEXTURE_WRAP_T,_(t.wrapT)),Tt.texParameteri(e,Tt.TEXTURE_MAG_FILTER,_(t.magFilter)),Tt.texParameteri(e,Tt.TEXTURE_MIN_FILTER,_(t.minFilter))):(Tt.texParameteri(e,Tt.TEXTURE_WRAP_S,Tt.CLAMP_TO_EDGE),Tt.texParameteri(e,Tt.TEXTURE_WRAP_T,Tt.CLAMP_TO_EDGE),Tt.texParameteri(e,Tt.TEXTURE_MAG_FILTER,M(t.magFilter)),Tt.texParameteri(e,Tt.TEXTURE_MIN_FILTER,M(t.minFilter))),kt&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(Tt.texParameterf(e,kt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Dt)),t.__oldAnisotropy=t.anisotropy)}function O(e,t){Tt.bindRenderbuffer(Tt.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Tt.renderbufferStorage(Tt.RENDERBUFFER,Tt.DEPTH_COMPONENT16,t.width,t.height),Tt.framebufferRenderbuffer(Tt.FRAMEBUFFER,Tt.DEPTH_ATTACHMENT,Tt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Tt.renderbufferStorage(Tt.RENDERBUFFER,Tt.DEPTH_STENCIL,t.width,t.height),Tt.framebufferRenderbuffer(Tt.FRAMEBUFFER,Tt.DEPTH_STENCIL_ATTACHMENT,Tt.RENDERBUFFER,e)):Tt.renderbufferStorage(Tt.RENDERBUFFER,Tt.RGBA4,t.width,t.height)}function M(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Tt.NEAREST:Tt.LINEAR}function _(e){if(e===THREE.RepeatWrapping)return Tt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Tt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Tt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Tt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Tt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Tt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Tt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Tt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Tt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Tt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Tt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Tt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Tt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Tt.BYTE;if(e===THREE.ShortType)return Tt.SHORT;if(e===THREE.UnsignedShortType)return Tt.UNSIGNED_SHORT;if(e===THREE.IntType)return Tt.INT;if(e===THREE.UnsignedIntType)return Tt.UNSIGNED_INT;if(e===THREE.FloatType)return Tt.FLOAT;if(e===THREE.AlphaFormat)return Tt.ALPHA;if(e===THREE.RGBFormat)return Tt.RGB;if(e===THREE.RGBAFormat)return Tt.RGBA;if(e===THREE.LuminanceFormat)return Tt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Tt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Tt.FUNC_ADD;if(e===THREE.SubtractEquation)return Tt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Tt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Tt.ZERO;if(e===THREE.OneFactor)return Tt.ONE;if(e===THREE.SrcColorFactor)return Tt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Tt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Tt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Tt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Tt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Tt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Tt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Tt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Tt.SRC_ALPHA_SATURATE;if(void 0!==Lt){if(e===THREE.RGB_S3TC_DXT1_Format)return Lt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Lt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Lt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Lt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e=e||{},D=void 0!==e.canvas?e.canvas:document.createElement("canvas"),P=void 0!==e.precision?e.precision:"highp",H=void 0!==e.alpha?e.alpha:!0,B=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,j=void 0!==e.antialias?e.antialias:!1,F=void 0!==e.stencil?e.stencil:!0,I=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,q=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),R=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=D,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var U=this,z=[],W=0,X=null,V=null,$=-1,J=null,K=null,Q=0,G=0,Y=-1,Z=-1,et=-1,tt=-1,nt=-1,rt=-1,it=-1,st=-1,ot=null,ut=null,at=null,ft=null,lt=0,ct=0,ht=0,pt=0,dt=0,vt=0,mt={},gt=new THREE.Frustum,yt=new THREE.Matrix4,bt=new THREE.Matrix4,wt=new THREE.Vector3,Et=new THREE.Vector3,St=!0,xt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},Tt,Nt,Ct,kt,Lt;try{if(!(Tt=D.getContext("experimental-webgl",{alpha:H,premultipliedAlpha:B,antialias:j,stencil:F,preserveDrawingBuffer:I})))throw"Error creating WebGL context."}catch(At){console.error(At)}Nt=Tt.getExtension("OES_texture_float"),Ct=Tt.getExtension("OES_standard_derivatives"),kt=Tt.getExtension("EXT_texture_filter_anisotropic")||Tt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Tt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Lt=Tt.getExtension("WEBGL_compressed_texture_s3tc")||Tt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Tt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Nt||console.log("THREE.WebGLRenderer: Float textures not supported."),Ct||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),kt||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Lt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),Tt.clearColor(0,0,0,1),Tt.clearDepth(1),Tt.clearStencil(0),Tt.enable(Tt.DEPTH_TEST),Tt.depthFunc(Tt.LEQUAL),Tt.frontFace(Tt.CCW),Tt.cullFace(Tt.BACK),Tt.enable(Tt.CULL_FACE),Tt.enable(Tt.BLEND),Tt.blendEquation(Tt.FUNC_ADD),Tt.blendFunc(Tt.SRC_ALPHA,Tt.ONE_MINUS_SRC_ALPHA),Tt.clearColor(q.r,q.g,q.b,R),this.context=Tt;var Ot=Tt.getParameter(Tt.MAX_TEXTURE_IMAGE_UNITS),Mt=Tt.getParameter(Tt.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Tt.getParameter(Tt.MAX_TEXTURE_SIZE);var _t=Tt.getParameter(Tt.MAX_CUBE_MAP_TEXTURE_SIZE),Dt=kt?Tt.getParameter(kt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Pt=0<Mt,Ht=Pt&&Nt;Lt&&Tt.getParameter(Tt.COMPRESSED_TEXTURE_FORMATS);var Bt=Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.HIGH_FLOAT),jt=Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.MEDIUM_FLOAT);Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.LOW_FLOAT);var Ft=Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.HIGH_FLOAT),It=Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.MEDIUM_FLOAT);Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.LOW_FLOAT),Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.HIGH_INT),Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.MEDIUM_INT),Tt.getShaderPrecisionFormat(Tt.VERTEX_SHADER,Tt.LOW_INT),Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.HIGH_INT),Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.MEDIUM_INT),Tt.getShaderPrecisionFormat(Tt.FRAGMENT_SHADER,Tt.LOW_INT);var qt=0<Bt.precision&&0<Ft.precision,Rt=0<jt.precision&&0<It.precision;"highp"===P&&!qt&&(Rt?(P="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(P="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"===P&&!Rt&&(P="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Tt},this.supportsVertexTextures=function(){return Pt},this.supportsFloatTextures=function(){return Nt},this.supportsStandardDerivatives=function(){return Ct},this.supportsCompressedTextureS3TC=function(){return Lt},this.getMaxAnisotropy=function(){return Dt},this.getPrecision=function(){return P},this.setSize=function(e,t){D.width=e*this.devicePixelRatio,D.height=t*this.devicePixelRatio,D.style.width=e+"px",D.style.height=t+"px",this.setViewport(0,0,D.width,D.height)},this.setViewport=function(e,t,n,r){lt=void 0!==e?e:0,ct=void 0!==t?t:0,ht=void 0!==n?n:D.width,pt=void 0!==r?r:D.height,Tt.viewport(lt,ct,ht,pt)},this.setScissor=function(e,t,n,r){Tt.scissor(e,t,n,r)},this.enableScissorTest=function(e){e?Tt.enable(Tt.SCISSOR_TEST):Tt.disable(Tt.SCISSOR_TEST)},this.setClearColorHex=function(e,t){q.setHex(e),R=t,Tt.clearColor(q.r,q.g,q.b,R)},this.setClearColor=function(e,t){q.copy(e),R=t,Tt.clearColor(q.r,q.g,q.b,R)},this.getClearColor=function(){return q},this.getClearAlpha=function(){return R},this.clear=function(e,t,n){var r=0;if(void 0===e||e)r|=Tt.COLOR_BUFFER_BIT;if(void 0===t||t)r|=Tt.DEPTH_BUFFER_BIT;if(void 0===n||n)r|=Tt.STENCIL_BUFFER_BIT;Tt.clear(r)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){X=null,$=J=st=it=et=-1,St=!0,Z=Y=-1,this.shadowMapPlugin.update(e,t)};var Ut=function(e){e=e.target,e.removeEventListener("dispose",Ut),e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&Tt.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&Tt.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&Tt.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&Tt.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&Tt.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&Tt.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&Tt.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&Tt.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&Tt.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&Tt.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&Tt.deleteBuffer(e.__webglLineDistanceBuffer);if(void 0!==e.geometryGroups)for(var n in e.geometryGroups){var r=e.geometryGroups[n];if(void 0!==r.numMorphTargets)for(var i=0,s=r.numMorphTargets;i<s;i++)Tt.deleteBuffer(r.__webglMorphTargetsBuffers[i]);if(void 0!==r.numMorphNormals){i=0;for(s=r.numMorphNormals;i<s;i++)Tt.deleteBuffer(r.__webglMorphNormalsBuffers[i])}t(r)}t(e),U.info.memory.geometries--},zt=function(e){e=e.target,e.removeEventListener("dispose",zt),e.image&&e.image.__webglTextureCube?Tt.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,Tt.deleteTexture(e.__webglTexture)),U.info.memory.textures--},Wt=function(e){e=e.target,e.removeEventListener("dispose",Wt);if(e&&e.__webglTexture)if(Tt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Tt.deleteFramebuffer(e.__webglFramebuffer[t]),Tt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Tt.deleteFramebuffer(e.__webglFramebuffer),Tt.deleteRenderbuffer(e.__webglRenderbuffer);U.info.memory.textures--},Xt=function(e){e=e.target,e.removeEventListener("dispose",Xt),Vt(e)},Vt=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var n,r,i=!1,e=0;for(n=z.length;e<n;e++)if(r=z[e],r.program===t){r.usedTimes--,0===r.usedTimes&&(i=!0);break}if(!0===i){i=[],e=0;for(n=z.length;e<n;e++)r=z[e],r.program!==t&&i.push(r);z=i,Tt.deleteProgram(t),U.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,n){e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Tt.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Tt.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Tt.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Tt.createBuffer()),e.hasPositions&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,e.__webglVertexBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,e.positionArray,Tt.DYNAMIC_DRAW),Tt.enableVertexAttribArray(t.attributes.position),Tt.vertexAttribPointer(t.attributes.position,3,Tt.FLOAT,!1,0,0));if(e.hasNormals){Tt.bindBuffer(Tt.ARRAY_BUFFER,e.__webglNormalBuffer);if(n.shading===THREE.FlatShading){var r,i,s,o,u,a,f,l,c,h,p,d=3*e.count;for(p=0;p<d;p+=9)h=e.normalArray,r=h[p],i=h[p+1],s=h[p+2],o=h[p+3],a=h[p+4],l=h[p+5],u=h[p+6],f=h[p+7],c=h[p+8],r=(r+o+u)/3,i=(i+a+f)/3,s=(s+l+c)/3,h[p]=r,h[p+1]=i,h[p+2]=s,h[p+3]=r,h[p+4]=i,h[p+5]=s,h[p+6]=r,h[p+7]=i,h[p+8]=s}Tt.bufferData(Tt.ARRAY_BUFFER,e.normalArray,Tt.DYNAMIC_DRAW),Tt.enableVertexAttribArray(t.attributes.normal),Tt.vertexAttribPointer(t.attributes.normal,3,Tt.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,e.__webglUvBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,e.uvArray,Tt.DYNAMIC_DRAW),Tt.enableVertexAttribArray(t.attributes.uv),Tt.vertexAttribPointer(t.attributes.uv,2,Tt.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==THREE.NoColors&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,e.__webglColorBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,e.colorArray,Tt.DYNAMIC_DRAW),Tt.enableVertexAttribArray(t.attributes.color),Tt.vertexAttribPointer(t.attributes.color,3,Tt.FLOAT,!1,0,0)),Tt.drawArrays(Tt.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,s){if(!1!==r.visible)if(n=E(e,t,n,r,s),e=n.attributes,t=!1,r=16777215*i.id+2*n.id+(r.wireframe?1:0),r!==J&&(J=r,t=!0),t&&l(),s instanceof THREE.Mesh)if(s=i.attributes.index){r=i.offsets,1<r.length&&(t=!0);for(var n=0,o=r.length;n<o;n++){var u=r[n].index;if(t){var a=i.attributes.position,c=a.itemSize;Tt.bindBuffer(Tt.ARRAY_BUFFER,a.buffer),f(e.position),Tt.vertexAttribPointer(e.position,c,Tt.FLOAT,!1,0,4*u*c),c=i.attributes.normal;if(0<=e.normal&&c){var h=c.itemSize;Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.normal),Tt.vertexAttribPointer(e.normal,h,Tt.FLOAT,!1,0,4*u*h)}c=i.attributes.uv,0<=e.uv&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.uv),Tt.vertexAttribPointer(e.uv,h,Tt.FLOAT,!1,0,4*u*h)),c=i.attributes.color,0<=e.color&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.color),Tt.vertexAttribPointer(e.color,h,Tt.FLOAT,!1,0,4*u*h)),c=i.attributes.tangent,0<=e.tangent&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.tangent),Tt.vertexAttribPointer(e.tangent,h,Tt.FLOAT,!1,0,4*u*h)),Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,s.buffer)}Tt.drawElements(Tt.TRIANGLES,r[n].count,Tt.UNSIGNED_SHORT,2*r[n].start),U.info.render.calls++,U.info.render.vertices+=r[n].count,U.info.render.faces+=r[n].count/3}}else t&&(a=i.attributes.position,c=a.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,a.buffer),f(e.position),Tt.vertexAttribPointer(e.position,c,Tt.FLOAT,!1,0,0),c=i.attributes.normal,0<=e.normal&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.normal),Tt.vertexAttribPointer(e.normal,h,Tt.FLOAT,!1,0,0)),c=i.attributes.uv,0<=e.uv&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.uv),Tt.vertexAttribPointer(e.uv,h,Tt.FLOAT,!1,0,0)),c=i.attributes.color,0<=e.color&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.color),Tt.vertexAttribPointer(e.color,h,Tt.FLOAT,!1,0,0)),c=i.attributes.tangent,0<=e.tangent&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.tangent),Tt.vertexAttribPointer(e.tangent,h,Tt.FLOAT,!1,0,0))),Tt.drawArrays(Tt.TRIANGLES,0,a.numItems/3),U.info.render.calls++,U.info.render.vertices+=a.numItems/3,U.info.render.faces+=a.numItems/3/3;else s instanceof THREE.ParticleSystem?t&&(a=i.attributes.position,c=a.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,a.buffer),f(e.position),Tt.vertexAttribPointer(e.position,c,Tt.FLOAT,!1,0,0),c=i.attributes.color,0<=e.color&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.color),Tt.vertexAttribPointer(e.color,h,Tt.FLOAT,!1,0,0)),Tt.drawArrays(Tt.POINTS,0,a.numItems/3),U.info.render.calls++,U.info.render.points+=a.numItems/3):s instanceof THREE.Line&&t&&(a=i.attributes.position,c=a.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,a.buffer),f(e.position),Tt.vertexAttribPointer(e.position,c,Tt.FLOAT,!1,0,0),c=i.attributes.color,0<=e.color&&c&&(h=c.itemSize,Tt.bindBuffer(Tt.ARRAY_BUFFER,c.buffer),f(e.color),Tt.vertexAttribPointer(e.color,h,Tt.FLOAT,!1,0,0)),Tt.drawArrays(Tt.LINE_STRIP,0,a.numItems/3),U.info.render.calls++,U.info.render.points+=a.numItems)},this.renderBuffer=function(e,t,n,r,i,s){if(!1!==r.visible){var o,u,n=E(e,t,n,r,s),t=n.attributes,e=!1,n=16777215*i.id+2*n.id+(r.wireframe?1:0);n!==J&&(J=n,e=!0),e&&l();if(!r.morphTargets&&0<=t.position)e&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglVertexBuffer),f(t.position),Tt.vertexAttribPointer(t.position,3,Tt.FLOAT,!1,0,0));else if(s.morphTargetBase){n=r.program.attributes,-1!==s.morphTargetBase&&0<=n.position?(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[s.morphTargetBase]),f(n.position),Tt.vertexAttribPointer(n.position,3,Tt.FLOAT,!1,0,0)):0<=n.position&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglVertexBuffer),f(n.position),Tt.vertexAttribPointer(n.position,3,Tt.FLOAT,!1,0,0));if(s.morphTargetForcedOrder.length){var a=0;u=s.morphTargetForcedOrder;for(o=s.morphTargetInfluences;a<r.numSupportedMorphTargets&&a<u.length;)0<=n["morphTarget"+a]&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[u[a]]),f(n["morphTarget"+a]),Tt.vertexAttribPointer(n["morphTarget"+a],3,Tt.FLOAT,!1,0,0)),0<=n["morphNormal"+a]&&r.morphNormals&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[u[a]]),f(n["morphNormal"+a]),Tt.vertexAttribPointer(n["morphNormal"+a],3,Tt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[a]=o[u[a]],a++}else{u=[],o=s.morphTargetInfluences;var c,p=o.length;for(c=0;c<p;c++)a=o[c],0<a&&u.push([a,c]);u.length>r.numSupportedMorphTargets?(u.sort(h),u.length=r.numSupportedMorphTargets):u.length>r.numSupportedMorphNormals?u.sort(h):0===u.length&&u.push([0,0]);for(a=0;a<r.numSupportedMorphTargets;)u[a]?(c=u[a][1],0<=n["morphTarget"+a]&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[c]),f(n["morphTarget"+a]),Tt.vertexAttribPointer(n["morphTarget"+a],3,Tt.FLOAT,!1,0,0)),0<=n["morphNormal"+a]&&r.morphNormals&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[c]),f(n["morphNormal"+a]),Tt.vertexAttribPointer(n["morphNormal"+a],3,Tt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[a]=o[c]):s.__webglMorphTargetInfluences[a]=0,a++}null!==r.program.uniforms.morphTargetInfluences&&Tt.uniform1fv(r.program.uniforms.morphTargetInfluences,s.__webglMorphTargetInfluences)}if(e){if(i.__webglCustomAttributesList){o=0;for(u=i.__webglCustomAttributesList.length;o<u;o++)n=i.__webglCustomAttributesList[o],0<=t[n.buffer.belongsToAttribute]&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,n.buffer),f(t[n.buffer.belongsToAttribute]),Tt.vertexAttribPointer(t[n.buffer.belongsToAttribute],n.size,Tt.FLOAT,!1,0,0))}0<=t.color&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglColorBuffer),f(t.color),Tt.vertexAttribPointer(t.color,3,Tt.FLOAT,!1,0,0)),0<=t.normal&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglNormalBuffer),f(t.normal),Tt.vertexAttribPointer(t.normal,3,Tt.FLOAT,!1,0,0)),0<=t.tangent&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglTangentBuffer),f(t.tangent),Tt.vertexAttribPointer(t.tangent,4,Tt.FLOAT,!1,0,0)),0<=t.uv&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglUVBuffer),f(t.uv),Tt.vertexAttribPointer(t.uv,2,Tt.FLOAT,!1,0,0)),0<=t.uv2&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglUV2Buffer),f(t.uv2),Tt.vertexAttribPointer(t.uv2,2,Tt.FLOAT,!1,0,0)),r.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglSkinIndicesBuffer),f(t.skinIndex),Tt.vertexAttribPointer(t.skinIndex,4,Tt.FLOAT,!1,0,0),Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglSkinWeightsBuffer),f(t.skinWeight),Tt.vertexAttribPointer(t.skinWeight,4,Tt.FLOAT,!1,0,0)),0<=t.lineDistance&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,i.__webglLineDistanceBuffer),f(t.lineDistance),Tt.vertexAttribPointer(t.lineDistance,1,Tt.FLOAT,!1,0,0))}s instanceof THREE.Mesh?(r.wireframe?(r=r.wireframeLinewidth,r!==ft&&(Tt.lineWidth(r),ft=r),e&&Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer),Tt.drawElements(Tt.LINES,i.__webglLineCount,Tt.UNSIGNED_SHORT,0)):(e&&Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),Tt.drawElements(Tt.TRIANGLES,i.__webglFaceCount,Tt.UNSIGNED_SHORT,0)),U.info.render.calls++,U.info.render.vertices+=i.__webglFaceCount,U.info.render.faces+=i.__webglFaceCount/3):s instanceof THREE.Line?(s=s.type===THREE.LineStrip?Tt.LINE_STRIP:Tt.LINES,r=r.linewidth,r!==ft&&(Tt.lineWidth(r),ft=r),Tt.drawArrays(s,0,i.__webglLineCount),U.info.render.calls++):s instanceof THREE.ParticleSystem?(Tt.drawArrays(Tt.POINTS,0,i.__webglParticleCount),U.info.render.calls++,U.info.render.points+=i.__webglParticleCount):s instanceof THREE.Ribbon&&(Tt.drawArrays(Tt.TRIANGLE_STRIP,0,i.__webglVertexCount),U.info.render.calls++)}},this.render=function(e,t,n,r){if(0==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var i,s,o,u,a=e.__lights,f=e.fog;$=-1,St=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),yt.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),gt.setFromMatrix(yt),this.autoUpdateObjects&&this.initWebGLObjects(e),p(this.renderPluginsPre,e,t),U.info.render.calls=0,U.info.render.vertices=0,U.info.render.faces=0,U.info.render.points=0,this.setRenderTarget(n),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),u=e.__webglObjects,r=0;for(i=u.length;r<i;r++)if(s=u[r],o=s.object,s.render=!1,o.visible&&(!(o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)||!o.frustumCulled||gt.intersectsObject(o))){x(o,t);var l=s,h=l.buffer,m=void 0,g=m=void 0,g=l.object.material;if(g instanceof THREE.MeshFaceMaterial)m=h.materialIndex,m=g.materials[m],m.transparent?(l.transparent=m,l.opaque=null):(l.opaque=m,l.transparent=null);else if(m=g)m.transparent?(l.transparent=m,l.opaque=null):(l.opaque=m,l.transparent=null);s.render=!0,!0===this.sortObjects&&(null!==o.renderDepth?s.z=o.renderDepth:(wt.copy(o.matrixWorld.getPosition()),wt.applyProjection(yt),s.z=wt.z),s.id=o.id)}this.sortObjects&&u.sort(c),u=e.__webglObjectsImmediate,r=0;for(i=u.length;r<i;r++)s=u[r],o=s.object,o.visible&&(x(o,t),o=s.object.material,o.transparent?(s.transparent=o,s.opaque=null):(s.opaque=o,s.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),C(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),d(e.__webglObjects,!1,"",t,a,f,!0,r),v(e.__webglObjectsImmediate,"",t,a,f,!1,r)):(r=null,this.setBlending(THREE.NoBlending),d(e.__webglObjects,!0,"opaque",t,a,f,!1,r),v(e.__webglObjectsImmediate,"opaque",t,a,f,!1,r),d(e.__webglObjects,!1,"transparent",t,a,f,!0,r),v(e.__webglObjectsImmediate,"transparent",t,a,f,!0,r)),p(this.renderPluginsPost,e,t),n&&n.generateMipmaps&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter&&(n instanceof THREE.WebGLRenderTargetCube?(Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,n.__webglTexture),Tt.generateMipmap(Tt.TEXTURE_CUBE_MAP),Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,null)):(Tt.bindTexture(Tt.TEXTURE_2D,n.__webglTexture),Tt.generateMipmap(Tt.TEXTURE_2D),Tt.bindTexture(Tt.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,n,r,i){var s=E(e,t,n,r,i);J=-1,U.setMaterialFaces(r),i.immediateRenderCallback?i.immediateRenderCallback(s,Tt,gt):i.render(function(e){U.renderBufferImmediate(e,s,r)})},this.initWebGLObjects=function(e){e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);for(;e.__objectsAdded.length;){var t=e.__objectsAdded[0],f=e,l=void 0,c=void 0,p=void 0,d=void 0;if(!t.__webglInit)if(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3,void 0!==t.geometry&&void 0===t.geometry.__webglInit&&(t.geometry.__webglInit=!0,t.geometry.addEventListener("dispose",Ut)),t instanceof THREE.Mesh)if(c=t.geometry,p=t.material,c instanceof THREE.Geometry){if(void 0===c.geometryGroups){var v=c,E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,k={},L=v.morphTargets.length,A=v.morphNormals.length,O=p instanceof THREE.MeshFaceMaterial;v.geometryGroups={},E=0;for(S=v.faces.length;E<S;E++)x=v.faces[E],T=O?x.materialIndex:0,void 0===k[T]&&(k[T]={hash:T,counter:0}),C=k[T].hash+"_"+k[T].counter,void 0===v.geometryGroups[C]&&(v.geometryGroups[C]={faces3:[],faces4:[],materialIndex:T,vertices:0,numMorphTargets:L,numMorphNormals:A}),N=x instanceof THREE.Face3?3:4,65535<v.geometryGroups[C].vertices+N&&(k[T].counter+=1,C=k[T].hash+"_"+k[T].counter,void 0===v.geometryGroups[C]&&(v.geometryGroups[C]={faces3:[],faces4:[],materialIndex:T,vertices:0,numMorphTargets:L,numMorphNormals:A})),x instanceof THREE.Face3?v.geometryGroups[C].faces3.push(E):v.geometryGroups[C].faces4.push(E),v.geometryGroups[C].vertices+=N;v.geometryGroupsList=[];var M=void 0;for(M in v.geometryGroups)v.geometryGroups[M].id=Q++,v.geometryGroupsList.push(v.geometryGroups[M])}for(l in c.geometryGroups)if(d=c.geometryGroups[l],!d.__webglVertexBuffer){var _=d;_.__webglVertexBuffer=Tt.createBuffer(),_.__webglNormalBuffer=Tt.createBuffer(),_.__webglTangentBuffer=Tt.createBuffer(),_.__webglColorBuffer=Tt.createBuffer(),_.__webglUVBuffer=Tt.createBuffer(),_.__webglUV2Buffer=Tt.createBuffer(),_.__webglSkinIndicesBuffer=Tt.createBuffer(),_.__webglSkinWeightsBuffer=Tt.createBuffer(),_.__webglFaceBuffer=Tt.createBuffer(),_.__webglLineBuffer=Tt.createBuffer();var D=void 0,P=void 0;if(_.numMorphTargets){_.__webglMorphTargetsBuffers=[],D=0;for(P=_.numMorphTargets;D<P;D++)_.__webglMorphTargetsBuffers.push(Tt.createBuffer())}if(_.numMorphNormals){_.__webglMorphNormalsBuffers=[],D=0;for(P=_.numMorphNormals;D<P;D++)_.__webglMorphNormalsBuffers.push(Tt.createBuffer())}U.info.memory.geometries++,r(d,t),c.verticesNeedUpdate=!0,c.morphTargetsNeedUpdate=!0,c.elementsNeedUpdate=!0,c.uvsNeedUpdate=!0,c.normalsNeedUpdate=!0,c.tangentsNeedUpdate=!0,c.colorsNeedUpdate=!0}}else c instanceof THREE.BufferGeometry&&u(c);else if(t instanceof THREE.Ribbon){if(c=t.geometry,!c.__webglVertexBuffer){var H=c;H.__webglVertexBuffer=Tt.createBuffer(),H.__webglColorBuffer=Tt.createBuffer(),H.__webglNormalBuffer=Tt.createBuffer(),U.info.memory.geometries++;var B=c,j=t,F=B.vertices.length;B.__vertexArray=new Float32Array(3*F),B.__colorArray=new Float32Array(3*F),B.__normalArray=new Float32Array(3*F),B.__webglVertexCount=F,n(B,j),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0,c.normalsNeedUpdate=!0}}else if(t instanceof THREE.Line){if(c=t.geometry,!c.__webglVertexBuffer)if(c instanceof THREE.Geometry){var I=c;I.__webglVertexBuffer=Tt.createBuffer(),I.__webglColorBuffer=Tt.createBuffer(),I.__webglLineDistanceBuffer=Tt.createBuffer(),U.info.memory.geometries++;var q=c,R=t,z=q.vertices.length;q.__vertexArray=new Float32Array(3*z),q.__colorArray=new Float32Array(3*z),q.__lineDistanceArray=new Float32Array(1*z),q.__webglLineCount=z,n(q,R),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0,c.lineDistancesNeedUpdate=!0}else c instanceof THREE.BufferGeometry&&u(c)}else if(t instanceof THREE.ParticleSystem&&(c=t.geometry,!c.__webglVertexBuffer))if(c instanceof THREE.Geometry){var W=c;W.__webglVertexBuffer=Tt.createBuffer(),W.__webglColorBuffer=Tt.createBuffer(),U.info.memory.geometries++;var X=c,V=t,$=X.vertices.length;X.__vertexArray=new Float32Array(3*$),X.__colorArray=new Float32Array(3*$),X.__sortArray=[],X.__webglParticleCount=$,n(X,V),c.verticesNeedUpdate=!0,c.colorsNeedUpdate=!0}else c instanceof THREE.BufferGeometry&&u(c);if(!t.__webglActive){if(t instanceof THREE.Mesh){if(c=t.geometry,c instanceof THREE.BufferGeometry)m(f.__webglObjects,c,t);else if(c instanceof THREE.Geometry)for(l in c.geometryGroups)d=c.geometryGroups[l],m(f.__webglObjects,d,t)}else t instanceof THREE.Ribbon||t instanceof THREE.Line||t instanceof THREE.ParticleSystem?(c=t.geometry,m(f.__webglObjects,c,t)):t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback?f.__webglObjectsImmediate.push({object:t,opaque:null,transparent:null}):t instanceof THREE.Sprite?f.__webglSprites.push(t):t instanceof THREE.LensFlare&&f.__webglFlares.push(t);t.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var J=e.__objectsRemoved[0],K=e;J instanceof THREE.Mesh||J instanceof THREE.ParticleSystem||J instanceof THREE.Ribbon||J instanceof THREE.Line?b(K.__webglObjects,J):J instanceof THREE.Sprite?w(K.__webglSprites,J):J instanceof THREE.LensFlare?w(K.__webglFlares,J):(J instanceof THREE.ImmediateRenderObject||J.immediateRenderCallback)&&b(K.__webglObjectsImmediate,J),J.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var G=0,Y=e.__webglObjects.length;G<Y;G++){var Z=e.__webglObjects[G].object,et=Z.geometry,tt=void 0,nt=void 0,rt=void 0;if(Z instanceof THREE.Mesh)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.elementsNeedUpdate||et.uvsNeedUpdate||et.normalsNeedUpdate||et.colorsNeedUpdate||et.tangentsNeedUpdate)&&a(et,Tt.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.elementsNeedUpdate=!1,et.uvsNeedUpdate=!1,et.normalsNeedUpdate=!1,et.colorsNeedUpdate=!1,et.tangentsNeedUpdate=!1;else{for(var it=0,st=et.geometryGroupsList.length;it<st;it++)if(tt=et.geometryGroupsList[it],rt=i(Z,tt),et.buffersNeedUpdate&&r(tt,Z),nt=rt.attributes&&g(rt),et.verticesNeedUpdate||et.morphTargetsNeedUpdate||et.elementsNeedUpdate||et.uvsNeedUpdate||et.normalsNeedUpdate||et.colorsNeedUpdate||et.tangentsNeedUpdate||nt){var ot=tt,ut=Z,at=Tt.DYNAMIC_DRAW,ft=!et.dynamic,lt=rt;if(ot.__inittedArrays){var ct=s(lt),ht=lt.vertexColors?lt.vertexColors:!1,pt=o(lt),dt=ct===THREE.SmoothShading,vt=void 0,mt=void 0,gt=void 0,Et=void 0,St=void 0,xt=void 0,Nt=void 0,Ct=void 0,kt=void 0,Lt=void 0,At=void 0,Ot=void 0,Mt=void 0,_t=void 0,Dt=void 0,Pt=void 0,Ht=void 0,Bt=void 0,jt=void 0,Ft=void 0,It=void 0,qt=void 0,Rt=void 0,zt=void 0,Wt=void 0,Xt=void 0,Vt=void 0,$t=void 0,Jt=void 0,Kt=void 0,Qt=void 0,Gt=void 0,Yt=void 0,Zt=void 0,en=void 0,tn=void 0,nn=void 0,rn=void 0,sn=void 0,on=void 0,un=void 0,an=void 0,fn=void 0,ln=void 0,cn=void 0,hn=void 0,pn=0,dn=0,vn=0,mn=0,gn=0,yn=0,bn=0,wn=0,En=0,Sn=0,xn=0,Tn=0,Nn=void 0,Cn=ot.__vertexArray,kn=ot.__uvArray,Ln=ot.__uv2Array,An=ot.__normalArray,On=ot.__tangentArray,Mn=ot.__colorArray,_n=ot.__skinIndexArray,Dn=ot.__skinWeightArray,Pn=ot.__morphTargetsArrays,Hn=ot.__morphNormalsArrays,Bn=ot.__webglCustomAttributesList,jn=void 0,Fn=ot.__faceArray,In=ot.__lineArray,qn=ut.geometry,Rn=qn.elementsNeedUpdate,Un=qn.uvsNeedUpdate,zn=qn.normalsNeedUpdate,Wn=qn.tangentsNeedUpdate,Xn=qn.colorsNeedUpdate,Vn=qn.morphTargetsNeedUpdate,$n=qn.vertices,Jn=ot.faces3,Kn=ot.faces4,Qn=qn.faces,Gn=qn.faceVertexUvs[0],Yn=qn.faceVertexUvs[1],Zn=qn.skinIndices,er=qn.skinWeights,tr=qn.morphTargets,nr=qn.morphNormals;if(qn.verticesNeedUpdate){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],Ot=$n[Et.a],Mt=$n[Et.b],_t=$n[Et.c],Cn[dn]=Ot.x,Cn[dn+1]=Ot.y,Cn[dn+2]=Ot.z,Cn[dn+3]=Mt.x,Cn[dn+4]=Mt.y,Cn[dn+5]=Mt.z,Cn[dn+6]=_t.x,Cn[dn+7]=_t.y,Cn[dn+8]=_t.z,dn+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],Ot=$n[Et.a],Mt=$n[Et.b],_t=$n[Et.c],Dt=$n[Et.d],Cn[dn]=Ot.x,Cn[dn+1]=Ot.y,Cn[dn+2]=Ot.z,Cn[dn+3]=Mt.x,Cn[dn+4]=Mt.y,Cn[dn+5]=Mt.z,Cn[dn+6]=_t.x,Cn[dn+7]=_t.y,Cn[dn+8]=_t.z,Cn[dn+9]=Dt.x,Cn[dn+10]=Dt.y,Cn[dn+11]=Dt.z,dn+=12;Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglVertexBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Cn,at)}if(Vn){un=0;for(an=tr.length;un<an;un++){vt=xn=0;for(mt=Jn.length;vt<mt;vt++)cn=Jn[vt],Et=Qn[cn],Ot=tr[un].vertices[Et.a],Mt=tr[un].vertices[Et.b],_t=tr[un].vertices[Et.c],fn=Pn[un],fn[xn]=Ot.x,fn[xn+1]=Ot.y,fn[xn+2]=Ot.z,fn[xn+3]=Mt.x,fn[xn+4]=Mt.y,fn[xn+5]=Mt.z,fn[xn+6]=_t.x,fn[xn+7]=_t.y,fn[xn+8]=_t.z,lt.morphNormals&&(dt?(hn=nr[un].vertexNormals[cn],Ft=hn.a,It=hn.b,qt=hn.c):qt=It=Ft=nr[un].faceNormals[cn],ln=Hn[un],ln[xn]=Ft.x,ln[xn+1]=Ft.y,ln[xn+2]=Ft.z,ln[xn+3]=It.x,ln[xn+4]=It.y,ln[xn+5]=It.z,ln[xn+6]=qt.x,ln[xn+7]=qt.y,ln[xn+8]=qt.z),xn+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)cn=Kn[vt],Et=Qn[cn],Ot=tr[un].vertices[Et.a],Mt=tr[un].vertices[Et.b],_t=tr[un].vertices[Et.c],Dt=tr[un].vertices[Et.d],fn=Pn[un],fn[xn]=Ot.x,fn[xn+1]=Ot.y,fn[xn+2]=Ot.z,fn[xn+3]=Mt.x,fn[xn+4]=Mt.y,fn[xn+5]=Mt.z,fn[xn+6]=_t.x,fn[xn+7]=_t.y,fn[xn+8]=_t.z,fn[xn+9]=Dt.x,fn[xn+10]=Dt.y,fn[xn+11]=Dt.z,lt.morphNormals&&(dt?(hn=nr[un].vertexNormals[cn],Ft=hn.a,It=hn.b,qt=hn.c,Rt=hn.d):Rt=qt=It=Ft=nr[un].faceNormals[cn],ln=Hn[un],ln[xn]=Ft.x,ln[xn+1]=Ft.y,ln[xn+2]=Ft.z,ln[xn+3]=It.x,ln[xn+4]=It.y,ln[xn+5]=It.z,ln[xn+6]=qt.x,ln[xn+7]=qt.y,ln[xn+8]=qt.z,ln[xn+9]=Rt.x,ln[xn+10]=Rt.y,ln[xn+11]=Rt.z),xn+=12;Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglMorphTargetsBuffers[un]),Tt.bufferData(Tt.ARRAY_BUFFER,Pn[un],at),lt.morphNormals&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglMorphNormalsBuffers[un]),Tt.bufferData(Tt.ARRAY_BUFFER,Hn[un],at))}}if(er.length){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],$t=er[Et.a],Jt=er[Et.b],Kt=er[Et.c],Dn[Sn]=$t.x,Dn[Sn+1]=$t.y,Dn[Sn+2]=$t.z,Dn[Sn+3]=$t.w,Dn[Sn+4]=Jt.x,Dn[Sn+5]=Jt.y,Dn[Sn+6]=Jt.z,Dn[Sn+7]=Jt.w,Dn[Sn+8]=Kt.x,Dn[Sn+9]=Kt.y,Dn[Sn+10]=Kt.z,Dn[Sn+11]=Kt.w,Gt=Zn[Et.a],Yt=Zn[Et.b],Zt=Zn[Et.c],_n[Sn]=Gt.x,_n[Sn+1]=Gt.y,_n[Sn+2]=Gt.z,_n[Sn+3]=Gt.w,_n[Sn+4]=Yt.x,_n[Sn+5]=Yt.y,_n[Sn+6]=Yt.z,_n[Sn+7]=Yt.w,_n[Sn+8]=Zt.x,_n[Sn+9]=Zt.y,_n[Sn+10]=Zt.z,_n[Sn+11]=Zt.w,Sn+=12;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],$t=er[Et.a],Jt=er[Et.b],Kt=er[Et.c],Qt=er[Et.d],Dn[Sn]=$t.x,Dn[Sn+1]=$t.y,Dn[Sn+2]=$t.z,Dn[Sn+3]=$t.w,Dn[Sn+4]=Jt.x,Dn[Sn+5]=Jt.y,Dn[Sn+6]=Jt.z,Dn[Sn+7]=Jt.w,Dn[Sn+8]=Kt.x,Dn[Sn+9]=Kt.y,Dn[Sn+10]=Kt.z,Dn[Sn+11]=Kt.w,Dn[Sn+12]=Qt.x,Dn[Sn+13]=Qt.y,Dn[Sn+14]=Qt.z,Dn[Sn+15]=Qt.w,Gt=Zn[Et.a],Yt=Zn[Et.b],Zt=Zn[Et.c],en=Zn[Et.d],_n[Sn]=Gt.x,_n[Sn+1]=Gt.y,_n[Sn+2]=Gt.z,_n[Sn+3]=Gt.w,_n[Sn+4]=Yt.x,_n[Sn+5]=Yt.y,_n[Sn+6]=Yt.z,_n[Sn+7]=Yt.w,_n[Sn+8]=Zt.x,_n[Sn+9]=Zt.y,_n[Sn+10]=Zt.z,_n[Sn+11]=Zt.w,_n[Sn+12]=en.x,_n[Sn+13]=en.y,_n[Sn+14]=en.z,_n[Sn+15]=en.w,Sn+=16;0<Sn&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglSkinIndicesBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,_n,at),Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglSkinWeightsBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Dn,at))}if(Xn&&ht){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],Nt=Et.vertexColors,Ct=Et.color,3===Nt.length&&ht===THREE.VertexColors?(zt=Nt[0],Wt=Nt[1],Xt=Nt[2]):Xt=Wt=zt=Ct,Mn[En]=zt.r,Mn[En+1]=zt.g,Mn[En+2]=zt.b,Mn[En+3]=Wt.r,Mn[En+4]=Wt.g,Mn[En+5]=Wt.b,Mn[En+6]=Xt.r,Mn[En+7]=Xt.g,Mn[En+8]=Xt.b,En+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],Nt=Et.vertexColors,Ct=Et.color,4===Nt.length&&ht===THREE.VertexColors?(zt=Nt[0],Wt=Nt[1],Xt=Nt[2],Vt=Nt[3]):Vt=Xt=Wt=zt=Ct,Mn[En]=zt.r,Mn[En+1]=zt.g,Mn[En+2]=zt.b,Mn[En+3]=Wt.r,Mn[En+4]=Wt.g,Mn[En+5]=Wt.b,Mn[En+6]=Xt.r,Mn[En+7]=Xt.g,Mn[En+8]=Xt.b,Mn[En+9]=Vt.r,Mn[En+10]=Vt.g,Mn[En+11]=Vt.b,En+=12;0<En&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglColorBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Mn,at))}if(Wn&&qn.hasTangents){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],kt=Et.vertexTangents,Pt=kt[0],Ht=kt[1],Bt=kt[2],On[bn]=Pt.x,On[bn+1]=Pt.y,On[bn+2]=Pt.z,On[bn+3]=Pt.w,On[bn+4]=Ht.x,On[bn+5]=Ht.y,On[bn+6]=Ht.z,On[bn+7]=Ht.w,On[bn+8]=Bt.x,On[bn+9]=Bt.y,On[bn+10]=Bt.z,On[bn+11]=Bt.w,bn+=12;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],kt=Et.vertexTangents,Pt=kt[0],Ht=kt[1],Bt=kt[2],jt=kt[3],On[bn]=Pt.x,On[bn+1]=Pt.y,On[bn+2]=Pt.z,On[bn+3]=Pt.w,On[bn+4]=Ht.x,On[bn+5]=Ht.y,On[bn+6]=Ht.z,On[bn+7]=Ht.w,On[bn+8]=Bt.x,On[bn+9]=Bt.y,On[bn+10]=Bt.z,On[bn+11]=Bt.w,On[bn+12]=jt.x,On[bn+13]=jt.y,On[bn+14]=jt.z,On[bn+15]=jt.w,bn+=16;Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglTangentBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,On,at)}if(zn&&ct){vt=0;for(mt=Jn.length;vt<mt;vt++)if(Et=Qn[Jn[vt]],St=Et.vertexNormals,xt=Et.normal,3===St.length&&dt)for(tn=0;3>tn;tn++)rn=St[tn],An[yn]=rn.x,An[yn+1]=rn.y,An[yn+2]=rn.z,yn+=3;else for(tn=0;3>tn;tn++)An[yn]=xt.x,An[yn+1]=xt.y,An[yn+2]=xt.z,yn+=3;vt=0;for(mt=Kn.length;vt<mt;vt++)if(Et=Qn[Kn[vt]],St=Et.vertexNormals,xt=Et.normal,4===St.length&&dt)for(tn=0;4>tn;tn++)rn=St[tn],An[yn]=rn.x,An[yn+1]=rn.y,An[yn+2]=rn.z,yn+=3;else for(tn=0;4>tn;tn++)An[yn]=xt.x,An[yn+1]=xt.y,An[yn+2]=xt.z,yn+=3;Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglNormalBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,An,at)}if(Un&&Gn&&pt){vt=0;for(mt=Jn.length;vt<mt;vt++)if(gt=Jn[vt],Lt=Gn[gt],void 0!==Lt)for(tn=0;3>tn;tn++)sn=Lt[tn],kn[vn]=sn.x,kn[vn+1]=sn.y,vn+=2;vt=0;for(mt=Kn.length;vt<mt;vt++)if(gt=Kn[vt],Lt=Gn[gt],void 0!==Lt)for(tn=0;4>tn;tn++)sn=Lt[tn],kn[vn]=sn.x,kn[vn+1]=sn.y,vn+=2;0<vn&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglUVBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,kn,at))}if(Un&&Yn&&pt){vt=0;for(mt=Jn.length;vt<mt;vt++)if(gt=Jn[vt],At=Yn[gt],void 0!==At)for(tn=0;3>tn;tn++)on=At[tn],Ln[mn]=on.x,Ln[mn+1]=on.y,mn+=2;vt=0;for(mt=Kn.length;vt<mt;vt++)if(gt=Kn[vt],At=Yn[gt],void 0!==At)for(tn=0;4>tn;tn++)on=At[tn],Ln[mn]=on.x,Ln[mn+1]=on.y,mn+=2;0<mn&&(Tt.bindBuffer(Tt.ARRAY_BUFFER,ot.__webglUV2Buffer),Tt.bufferData(Tt.ARRAY_BUFFER,Ln,at))}if(Rn){vt=0;for(mt=Jn.length;vt<mt;vt++)Fn[gn]=pn,Fn[gn+1]=pn+1,Fn[gn+2]=pn+2,gn+=3,In[wn]=pn,In[wn+1]=pn+1,In[wn+2]=pn,In[wn+3]=pn+2,In[wn+4]=pn+1,In[wn+5]=pn+2,wn+=6,pn+=3;vt=0;for(mt=Kn.length;vt<mt;vt++)Fn[gn]=pn,Fn[gn+1]=pn+1,Fn[gn+2]=pn+3,Fn[gn+3]=pn+1,Fn[gn+4]=pn+2,Fn[gn+5]=pn+3,gn+=6,In[wn]=pn,In[wn+1]=pn+1,In[wn+2]=pn,In[wn+3]=pn+3,In[wn+4]=pn+1,In[wn+5]=pn+2,In[wn+6]=pn+2,In[wn+7]=pn+3,wn+=8,pn+=4;Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,ot.__webglFaceBuffer),Tt.bufferData(Tt.ELEMENT_ARRAY_BUFFER,Fn,at),Tt.bindBuffer(Tt.ELEMENT_ARRAY_BUFFER,ot.__webglLineBuffer),Tt.bufferData(Tt.ELEMENT_ARRAY_BUFFER,In,at)}if(Bn){tn=0;for(nn=Bn.length;tn<nn;tn++)if(jn=Bn[tn],jn.__original.needsUpdate){Tn=0;if(1===jn.size){if(void 0===jn.boundTo||"vertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],jn.array[Tn]=jn.value[Et.a],jn.array[Tn+1]=jn.value[Et.b],jn.array[Tn+2]=jn.value[Et.c],Tn+=3;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],jn.array[Tn]=jn.value[Et.a],jn.array[Tn+1]=jn.value[Et.b],jn.array[Tn+2]=jn.value[Et.c],jn.array[Tn+3]=jn.value[Et.d],Tn+=4}else if("faces"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Nn=jn.value[Jn[vt]],jn.array[Tn]=Nn,jn.array[Tn+1]=Nn,jn.array[Tn+2]=Nn,Tn+=3;vt=0;for(mt=Kn.length;vt<mt;vt++)Nn=jn.value[Kn[vt]],jn.array[Tn]=Nn,jn.array[Tn+1]=Nn,jn.array[Tn+2]=Nn,jn.array[Tn+3]=Nn,Tn+=4}}else if(2===jn.size){if(void 0===jn.boundTo||"vertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Mt.x,jn.array[Tn+3]=Mt.y,jn.array[Tn+4]=_t.x,jn.array[Tn+5]=_t.y,Tn+=6;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],Dt=jn.value[Et.d],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Mt.x,jn.array[Tn+3]=Mt.y,jn.array[Tn+4]=_t.x,jn.array[Tn+5]=_t.y,jn.array[Tn+6]=Dt.x,jn.array[Tn+7]=Dt.y,Tn+=8}else if("faces"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)_t=Mt=Ot=Nn=jn.value[Jn[vt]],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Mt.x,jn.array[Tn+3]=Mt.y,jn.array[Tn+4]=_t.x,jn.array[Tn+5]=_t.y,Tn+=6;vt=0;for(mt=Kn.length;vt<mt;vt++)Dt=_t=Mt=Ot=Nn=jn.value[Kn[vt]],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Mt.x,jn.array[Tn+3]=Mt.y,jn.array[Tn+4]=_t.x,jn.array[Tn+5]=_t.y,jn.array[Tn+6]=Dt.x,jn.array[Tn+7]=Dt.y,Tn+=8}}else if(3===jn.size){var rr;rr="c"===jn.type?["r","g","b"]:["x","y","z"];if(void 0===jn.boundTo||"vertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],Tn+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],Dt=jn.value[Et.d],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],jn.array[Tn+9]=Dt[rr[0]],jn.array[Tn+10]=Dt[rr[1]],jn.array[Tn+11]=Dt[rr[2]],Tn+=12}else if("faces"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)_t=Mt=Ot=Nn=jn.value[Jn[vt]],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],Tn+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)Dt=_t=Mt=Ot=Nn=jn.value[Kn[vt]],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],jn.array[Tn+9]=Dt[rr[0]],jn.array[Tn+10]=Dt[rr[1]],jn.array[Tn+11]=Dt[rr[2]],Tn+=12}else if("faceVertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Nn=jn.value[Jn[vt]],Ot=Nn[0],Mt=Nn[1],_t=Nn[2],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],Tn+=9;vt=0;for(mt=Kn.length;vt<mt;vt++)Nn=jn.value[Kn[vt]],Ot=Nn[0],Mt=Nn[1],_t=Nn[2],Dt=Nn[3],jn.array[Tn]=Ot[rr[0]],jn.array[Tn+1]=Ot[rr[1]],jn.array[Tn+2]=Ot[rr[2]],jn.array[Tn+3]=Mt[rr[0]],jn.array[Tn+4]=Mt[rr[1]],jn.array[Tn+5]=Mt[rr[2]],jn.array[Tn+6]=_t[rr[0]],jn.array[Tn+7]=_t[rr[1]],jn.array[Tn+8]=_t[rr[2]],jn.array[Tn+9]=Dt[rr[0]],jn.array[Tn+10]=Dt[rr[1]],jn.array[Tn+11]=Dt[rr[2]],Tn+=12}}else if(4===jn.size)if(void 0===jn.boundTo||"vertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Et=Qn[Jn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,Tn+=12;vt=0;for(mt=Kn.length;vt<mt;vt++)Et=Qn[Kn[vt]],Ot=jn.value[Et.a],Mt=jn.value[Et.b],_t=jn.value[Et.c],Dt=jn.value[Et.d],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,jn.array[Tn+12]=Dt.x,jn.array[Tn+13]=Dt.y,jn.array[Tn+14]=Dt.z,jn.array[Tn+15]=Dt.w,Tn+=16}else if("faces"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)_t=Mt=Ot=Nn=jn.value[Jn[vt]],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,Tn+=12;vt=0;for(mt=Kn.length;vt<mt;vt++)Dt=_t=Mt=Ot=Nn=jn.value[Kn[vt]],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,jn.array[Tn+12]=Dt.x,jn.array[Tn+13]=Dt.y,jn.array[Tn+14]=Dt.z,jn.array[Tn+15]=Dt.w,Tn+=16}else if("faceVertices"===jn.boundTo){vt=0;for(mt=Jn.length;vt<mt;vt++)Nn=jn.value[Jn[vt]],Ot=Nn[0],Mt=Nn[1],_t=Nn[2],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,Tn+=12;vt=0;for(mt=Kn.length;vt<mt;vt++)Nn=jn.value[Kn[vt]],Ot=Nn[0],Mt=Nn[1],_t=Nn[2],Dt=Nn[3],jn.array[Tn]=Ot.x,jn.array[Tn+1]=Ot.y,jn.array[Tn+2]=Ot.z,jn.array[Tn+3]=Ot.w,jn.array[Tn+4]=Mt.x,jn.array[Tn+5]=Mt.y,jn.array[Tn+6]=Mt.z,jn.array[Tn+7]=Mt.w,jn.array[Tn+8]=_t.x,jn.array[Tn+9]=_t.y,jn.array[Tn+10]=_t.z,jn.array[Tn+11]=_t.w,jn.array[Tn+12]=Dt.x,jn.array[Tn+13]=Dt.y,jn.array[Tn+14]=Dt.z,jn.array[Tn+15]=Dt.w,Tn+=16}Tt.bindBuffer(Tt.ARRAY_BUFFER,jn.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,jn.array,at)}}ft&&(delete ot.__inittedArrays,delete ot.__colorArray,delete ot.__normalArray,delete ot.__tangentArray,delete ot.__uvArray,delete ot.__uv2Array,delete ot.__faceArray,delete ot.__vertexArray,delete ot.__lineArray,delete ot.__skinIndexArray,delete ot.__skinWeightArray)}}et.verticesNeedUpdate=!1,et.morphTargetsNeedUpdate=!1,et.elementsNeedUpdate=!1,et.uvsNeedUpdate=!1,et.normalsNeedUpdate=!1,et.colorsNeedUpdate=!1,et.tangentsNeedUpdate=!1,et.buffersNeedUpdate=!1,rt.attributes&&y(rt)}else if(Z instanceof THREE.Ribbon){rt=i(Z,et),nt=rt.attributes&&g(rt);if(et.verticesNeedUpdate||et.colorsNeedUpdate||et.normalsNeedUpdate||nt){var ir=et,sr=Tt.DYNAMIC_DRAW,or=void 0,ur=void 0,ar=void 0,fr=void 0,lr=void 0,cr=void 0,hr=void 0,pr=void 0,dr=void 0,vr=void 0,mr=void 0,gr=void 0,yr=void 0,br=ir.vertices,wr=ir.colors,Er=ir.normals,Sr=br.length,xr=wr.length,Tr=Er.length,Nr=ir.__vertexArray,Cr=ir.__colorArray,kr=ir.__normalArray,Lr=ir.colorsNeedUpdate,Ar=ir.normalsNeedUpdate,Or=ir.__webglCustomAttributesList;if(ir.verticesNeedUpdate){for(or=0;or<Sr;or++)fr=br[or],lr=3*or,Nr[lr]=fr.x,Nr[lr+1]=fr.y,Nr[lr+2]=fr.z;Tt.bindBuffer(Tt.ARRAY_BUFFER,ir.__webglVertexBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Nr,sr)}if(Lr){for(ur=0;ur<xr;ur++)cr=wr[ur],lr=3*ur,Cr[lr]=cr.r,Cr[lr+1]=cr.g,Cr[lr+2]=cr.b;Tt.bindBuffer(Tt.ARRAY_BUFFER,ir.__webglColorBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Cr,sr)}if(Ar){for(ar=0;ar<Tr;ar++)hr=Er[ar],lr=3*ar,kr[lr]=hr.x,kr[lr+1]=hr.y,kr[lr+2]=hr.z;Tt.bindBuffer(Tt.ARRAY_BUFFER,ir.__webglNormalBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,kr,sr)}if(Or){pr=0;for(dr=Or.length;pr<dr;pr++)if(gr=Or[pr],gr.needsUpdate&&(void 0===gr.boundTo||"vertices"===gr.boundTo)){lr=0,mr=gr.value.length;if(1===gr.size)for(vr=0;vr<mr;vr++)gr.array[vr]=gr.value[vr];else if(2===gr.size)for(vr=0;vr<mr;vr++)yr=gr.value[vr],gr.array[lr]=yr.x,gr.array[lr+1]=yr.y,lr+=2;else if(3===gr.size)if("c"===gr.type)for(vr=0;vr<mr;vr++)yr=gr.value[vr],gr.array[lr]=yr.r,gr.array[lr+1]=yr.g,gr.array[lr+2]=yr.b,lr+=3;else for(vr=0;vr<mr;vr++)yr=gr.value[vr],gr.array[lr]=yr.x,gr.array[lr+1]=yr.y,gr.array[lr+2]=yr.z,lr+=3;else if(4===gr.size)for(vr=0;vr<mr;vr++)yr=gr.value[vr],gr.array[lr]=yr.x,gr.array[lr+1]=yr.y,gr.array[lr+2]=yr.z,gr.array[lr+3]=yr.w,lr+=4;Tt.bindBuffer(Tt.ARRAY_BUFFER,gr.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,gr.array,sr)}}}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,et.normalsNeedUpdate=!1,rt.attributes&&y(rt)}else if(Z instanceof THREE.Line)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.colorsNeedUpdate)&&a(et,Tt.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1;else{rt=i(Z,et),nt=rt.attributes&&g(rt);if(et.verticesNeedUpdate||et.colorsNeedUpdate||et.lineDistancesNeedUpdate||nt){var Mr=et,_r=Tt.DYNAMIC_DRAW,Dr=void 0,Pr=void 0,Hr=void 0,Br=void 0,jr=void 0,Fr=void 0,Ir=Mr.vertices,qr=Mr.colors,Rr=Mr.lineDistances,Ur=Ir.length,zr=qr.length,Wr=Rr.length,Xr=Mr.__vertexArray,Vr=Mr.__colorArray,$r=Mr.__lineDistanceArray,Jr=Mr.colorsNeedUpdate,Kr=Mr.lineDistancesNeedUpdate,Qr=Mr.__webglCustomAttributesList,Gr=void 0,Yr=void 0,Zr=void 0,ei=void 0,ti=void 0,ni=void 0;if(Mr.verticesNeedUpdate){for(Dr=0;Dr<Ur;Dr++)Br=Ir[Dr],jr=3*Dr,Xr[jr]=Br.x,Xr[jr+1]=Br.y,Xr[jr+2]=Br.z;Tt.bindBuffer(Tt.ARRAY_BUFFER,Mr.__webglVertexBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Xr,_r)}if(Jr){for(Pr=0;Pr<zr;Pr++)Fr=qr[Pr],jr=3*Pr,Vr[jr]=Fr.r,Vr[jr+1]=Fr.g,Vr[jr+2]=Fr.b;Tt.bindBuffer(Tt.ARRAY_BUFFER,Mr.__webglColorBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,Vr,_r)}if(Kr){for(Hr=0;Hr<Wr;Hr++)$r[Hr]=Rr[Hr];Tt.bindBuffer(Tt.ARRAY_BUFFER,Mr.__webglLineDistanceBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,$r,_r)}if(Qr){Gr=0;for(Yr=Qr.length;Gr<Yr;Gr++)if(ni=Qr[Gr],ni.needsUpdate&&(void 0===ni.boundTo||"vertices"===ni.boundTo)){jr=0,ei=ni.value.length;if(1===ni.size)for(Zr=0;Zr<ei;Zr++)ni.array[Zr]=ni.value[Zr];else if(2===ni.size)for(Zr=0;Zr<ei;Zr++)ti=ni.value[Zr],ni.array[jr]=ti.x,ni.array[jr+1]=ti.y,jr+=2;else if(3===ni.size)if("c"===ni.type)for(Zr=0;Zr<ei;Zr++)ti=ni.value[Zr],ni.array[jr]=ti.r,ni.array[jr+1]=ti.g,ni.array[jr+2]=ti.b,jr+=3;else for(Zr=0;Zr<ei;Zr++)ti=ni.value[Zr],ni.array[jr]=ti.x,ni.array[jr+1]=ti.y,ni.array[jr+2]=ti.z,jr+=3;else if(4===ni.size)for(Zr=0;Zr<ei;Zr++)ti=ni.value[Zr],ni.array[jr]=ti.x,ni.array[jr+1]=ti.y,ni.array[jr+2]=ti.z,ni.array[jr+3]=ti.w,jr+=4;Tt.bindBuffer(Tt.ARRAY_BUFFER,ni.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,ni.array,_r)}}}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,et.lineDistancesNeedUpdate=!1,rt.attributes&&y(rt)}else if(Z instanceof THREE.ParticleSystem)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.colorsNeedUpdate)&&a(et,Tt.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1;else{rt=i(Z,et),nt=rt.attributes&&g(rt);if(et.verticesNeedUpdate||et.colorsNeedUpdate||Z.sortParticles||nt){var ri=et,ii=Tt.DYNAMIC_DRAW,si=Z,oi=void 0,ui=void 0,ai=void 0,fi=void 0,li=void 0,ci=void 0,hi=ri.vertices,pi=hi.length,di=ri.colors,vi=di.length,mi=ri.__vertexArray,gi=ri.__colorArray,yi=ri.__sortArray,bi=ri.verticesNeedUpdate,wi=ri.colorsNeedUpdate,Ei=ri.__webglCustomAttributesList,Si=void 0,xi=void 0,Ti=void 0,Ni=void 0,Ci=void 0,ki=void 0;if(si.sortParticles){bt.copy(yt),bt.multiply(si.matrixWorld);for(oi=0;oi<pi;oi++)ai=hi[oi],wt.copy(ai),wt.applyProjection(bt),yi[oi]=[wt.z,oi];yi.sort(h);for(oi=0;oi<pi;oi++)ai=hi[yi[oi][1]],fi=3*oi,mi[fi]=ai.x,mi[fi+1]=ai.y,mi[fi+2]=ai.z;for(ui=0;ui<vi;ui++)fi=3*ui,ci=di[yi[ui][1]],gi[fi]=ci.r,gi[fi+1]=ci.g,gi[fi+2]=ci.b;if(Ei){Si=0;for(xi=Ei.length;Si<xi;Si++)if(ki=Ei[Si],void 0===ki.boundTo||"vertices"===ki.boundTo)if(fi=0,Ni=ki.value.length,1===ki.size)for(Ti=0;Ti<Ni;Ti++)li=yi[Ti][1],ki.array[Ti]=ki.value[li];else if(2===ki.size)for(Ti=0;Ti<Ni;Ti++)li=yi[Ti][1],Ci=ki.value[li],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,fi+=2;else if(3===ki.size)if("c"===ki.type)for(Ti=0;Ti<Ni;Ti++)li=yi[Ti][1],Ci=ki.value[li],ki.array[fi]=Ci.r,ki.array[fi+1]=Ci.g,ki.array[fi+2]=Ci.b,fi+=3;else for(Ti=0;Ti<Ni;Ti++)li=yi[Ti][1],Ci=ki.value[li],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,ki.array[fi+2]=Ci.z,fi+=3;else if(4===ki.size)for(Ti=0;Ti<Ni;Ti++)li=yi[Ti][1],Ci=ki.value[li],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,ki.array[fi+2]=Ci.z,ki.array[fi+3]=Ci.w,fi+=4}}else{if(bi)for(oi=0;oi<pi;oi++)ai=hi[oi],fi=3*oi,mi[fi]=ai.x,mi[fi+1]=ai.y,mi[fi+2]=ai.z;if(wi)for(ui=0;ui<vi;ui++)ci=di[ui],fi=3*ui,gi[fi]=ci.r,gi[fi+1]=ci.g,gi[fi+2]=ci.b;if(Ei){Si=0;for(xi=Ei.length;Si<xi;Si++)if(ki=Ei[Si],ki.needsUpdate&&(void 0===ki.boundTo||"vertices"===ki.boundTo))if(Ni=ki.value.length,fi=0,1===ki.size)for(Ti=0;Ti<Ni;Ti++)ki.array[Ti]=ki.value[Ti];else if(2===ki.size)for(Ti=0;Ti<Ni;Ti++)Ci=ki.value[Ti],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,fi+=2;else if(3===ki.size)if("c"===ki.type)for(Ti=0;Ti<Ni;Ti++)Ci=ki.value[Ti],ki.array[fi]=Ci.r,ki.array[fi+1]=Ci.g,ki.array[fi+2]=Ci.b,fi+=3;else for(Ti=0;Ti<Ni;Ti++)Ci=ki.value[Ti],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,ki.array[fi+2]=Ci.z,fi+=3;else if(4===ki.size)for(Ti=0;Ti<Ni;Ti++)Ci=ki.value[Ti],ki.array[fi]=Ci.x,ki.array[fi+1]=Ci.y,ki.array[fi+2]=Ci.z,ki.array[fi+3]=Ci.w,fi+=4}}if(bi||si.sortParticles)Tt.bindBuffer(Tt.ARRAY_BUFFER,ri.__webglVertexBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,mi,ii);if(wi||si.sortParticles)Tt.bindBuffer(Tt.ARRAY_BUFFER,ri.__webglColorBuffer),Tt.bufferData(Tt.ARRAY_BUFFER,gi,ii);if(Ei){Si=0;for(xi=Ei.length;Si<xi;Si++)if(ki=Ei[Si],ki.needsUpdate||si.sortParticles)Tt.bindBuffer(Tt.ARRAY_BUFFER,ki.buffer),Tt.bufferData(Tt.ARRAY_BUFFER,ki.array,ii)}}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,rt.attributes&&y(rt)}}},this.initMaterial=function(e,t,n,r){var i,s,o,u;e.addEventListener("dispose",Xt);var a,f,l,c,h;e instanceof THREE.MeshDepthMaterial?h="depth":e instanceof THREE.MeshNormalMaterial?h="normal":e instanceof THREE.MeshBasicMaterial?h="basic":e instanceof THREE.MeshLambertMaterial?h="lambert":e instanceof THREE.MeshPhongMaterial?h="phong":e instanceof THREE.LineBasicMaterial?h="basic":e instanceof THREE.LineDashedMaterial?h="dashed":e instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var p=THREE.ShaderLib[h];e.uniforms=THREE.UniformsUtils.clone(p.uniforms),e.vertexShader=p.vertexShader,e.fragmentShader=p.fragmentShader}var d,v,m;i=o=v=m=p=0;for(s=t.length;i<s;i++)d=t[i],d.onlyShadow||(d instanceof THREE.DirectionalLight&&o++,d instanceof THREE.PointLight&&v++,d instanceof THREE.SpotLight&&m++,d instanceof THREE.HemisphereLight&&p++);i=o,s=v,o=m,u=p,p=d=0;for(m=t.length;p<m;p++)v=t[p],v.castShadow&&(v instanceof THREE.SpotLight&&d++,v instanceof THREE.DirectionalLight&&!v.shadowCascade&&d++);c=d,Ht&&r&&r.useVertexTexture?l=1024:(t=Tt.getParameter(Tt.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),t<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),l=t);e:{v=e.fragmentShader,m=e.vertexShader,p=e.uniforms,t=e.attributes,d=e.defines;var n={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:n,useFog:e.fog,fogExp:n instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Ht&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:i,maxPointLights:s,maxSpotLights:o,maxHemiLights:u,maxShadows:c,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},g,y,b,r=[];h?r.push(h):(r.push(v),r.push(m));for(y in d)r.push(y),r.push(d[y]);for(g in n)r.push(g),r.push(n[g]);h=r.join(),g=0;for(y=z.length;g<y;g++)if(r=z[g],r.code===h){r.usedTimes++,f=r.program;break e}g="SHADOWMAP_TYPE_BASIC",n.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),y=[];for(b in d)r=d[b],!1!==r&&(r="#define "+b+" "+r,y.push(r));r=y.join("\n"),b=Tt.createProgram(),y=["precision "+P+" float;",r,Pt?"#define VERTEX_TEXTURES":"",U.gammaInput?"#define GAMMA_INPUT":"",U.gammaOutput?"#define GAMMA_OUTPUT":"",U.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.boneTextureWidth?"#define N_BONE_PIXEL_X "+n.boneTextureWidth.toFixed(1):"",n.boneTextureHeight?"#define N_BONE_PIXEL_Y "+n.boneTextureHeight.toFixed(1):"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+g:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=["precision "+P+" float;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",r,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",U.gammaInput?"#define GAMMA_INPUT":"",U.gammaOutput?"#define GAMMA_OUTPUT":"",U.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+g:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),g=L("fragment",g+v),y=L("vertex",y+m),Tt.attachShader(b,y),Tt.attachShader(b,g),Tt.linkProgram(b),Tt.getProgramParameter(b,Tt.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+Tt.getProgramParameter(b,Tt.VALIDATE_STATUS)+", gl error ["+Tt.getError()+"]"),Tt.deleteShader(g),Tt.deleteShader(y),b.uniforms={},b.attributes={};var w;g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),n.useVertexTexture?g.push("boneTexture"):g.push("boneGlobalMatrices");for(w in p)g.push(w);w=g,g=0;for(y=w.length;g<y;g++)p=w[g],b.uniforms[p]=Tt.getUniformLocation(b,p);g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(w=0;w<n.maxMorphTargets;w++)g.push("morphTarget"+w);for(w=0;w<n.maxMorphNormals;w++)g.push("morphNormal"+w);for(f in t)g.push(f);f=g,w=0;for(t=f.length;w<t;w++)g=f[w],b.attributes[g]=Tt.getAttribLocation(b,g);b.id=W++,z.push({program:b,code:h,usedTimes:1}),U.info.memory.programs=z.length,f=b}e.program=f,w=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0,t="morphTarget";for(f=0;f<this.maxMorphTargets;f++)b=t+f,0<=w[b]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0,t="morphNormal";for(f=0;f<this.maxMorphNormals;f++)b=t+f,0<=w[b]&&e.numSupportedMorphNormals++}e.uniformsList=[];for(a in e.uniforms)e.uniformsList.push([e.uniforms[a],a])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Tt.disable(Tt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Tt.frontFace(Tt.CW):Tt.frontFace(Tt.CCW),e===THREE.CullFaceBack?Tt.cullFace(Tt.BACK):e===THREE.CullFaceFront?Tt.cullFace(Tt.FRONT):Tt.cullFace(Tt.FRONT_AND_BACK),Tt.enable(Tt.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;Y!==t&&(t?Tt.disable(Tt.CULL_FACE):Tt.enable(Tt.CULL_FACE),Y=t),Z!==e&&(e?Tt.frontFace(Tt.CW):Tt.frontFace(Tt.CCW),Z=e)},this.setDepthTest=function(e){it!==e&&(e?Tt.enable(Tt.DEPTH_TEST):Tt.disable(Tt.DEPTH_TEST),it=e)},this.setDepthWrite=function(e){st!==e&&(Tt.depthMask(e),st=e)},this.setBlending=function(e,t,n,r){e!==et&&(e===THREE.NoBlending?Tt.disable(Tt.BLEND):e===THREE.AdditiveBlending?(Tt.enable(Tt.BLEND),Tt.blendEquation(Tt.FUNC_ADD),Tt.blendFunc(Tt.SRC_ALPHA,Tt.ONE)):e===THREE.SubtractiveBlending?(Tt.enable(Tt.BLEND),Tt.blendEquation(Tt.FUNC_ADD),Tt.blendFunc(Tt.ZERO,Tt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Tt.enable(Tt.BLEND),Tt.blendEquation(Tt.FUNC_ADD),Tt.blendFunc(Tt.ZERO,Tt.SRC_COLOR)):e===THREE.CustomBlending?Tt.enable(Tt.BLEND):(Tt.enable(Tt.BLEND),Tt.blendEquationSeparate(Tt.FUNC_ADD,Tt.FUNC_ADD),Tt.blendFuncSeparate(Tt.SRC_ALPHA,Tt.ONE_MINUS_SRC_ALPHA,Tt.ONE,Tt.ONE_MINUS_SRC_ALPHA)),et=e);if(e===THREE.CustomBlending){if(t!==tt&&(Tt.blendEquation(_(t)),tt=t),n!==nt||r!==rt)Tt.blendFunc(_(n),_(r)),nt=n,rt=r}else rt=nt=tt=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",zt),e.__webglTexture=Tt.createTexture(),U.info.memory.textures++),Tt.activeTexture(Tt.TEXTURE0+t),Tt.bindTexture(Tt.TEXTURE_2D,e.__webglTexture),Tt.pixelStorei(Tt.UNPACK_FLIP_Y_WEBGL,e.flipY),Tt.pixelStorei(Tt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Tt.pixelStorei(Tt.UNPACK_ALIGNMENT,e.unpackAlignment);var n=e.image,r=0===(n.width&n.width-1)&&0===(n.height&n.height-1),i=_(e.format),s=_(e.type);A(Tt.TEXTURE_2D,e,r);var o=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<o.length&&r){for(var u=0,a=o.length;u<a;u++)n=o[u],Tt.texImage2D(Tt.TEXTURE_2D,u,i,n.width,n.height,0,i,s,n.data);e.generateMipmaps=!1}else Tt.texImage2D(Tt.TEXTURE_2D,0,i,n.width,n.height,0,i,s,n.data);else if(e instanceof THREE.CompressedTexture){u=0;for(a=o.length;u<a;u++)n=o[u],Tt.compressedTexImage2D(Tt.TEXTURE_2D,u,i,n.width,n.height,0,n.data)}else if(0<o.length&&r){u=0;for(a=o.length;u<a;u++)n=o[u],Tt.texImage2D(Tt.TEXTURE_2D,u,i,i,s,n);e.generateMipmaps=!1}else Tt.texImage2D(Tt.TEXTURE_2D,0,i,i,s,e.image);e.generateMipmaps&&r&&Tt.generateMipmap(Tt.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Tt.activeTexture(Tt.TEXTURE0+t),Tt.bindTexture(Tt.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Wt),e.__webglTexture=Tt.createTexture(),U.info.memory.textures++;var n=0===(e.width&e.width-1)&&0===(e.height&e.height-1),r=_(e.format),i=_(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,e.__webglTexture),A(Tt.TEXTURE_CUBE_MAP,e,n);for(var s=0;6>s;s++){e.__webglFramebuffer[s]=Tt.createFramebuffer(),e.__webglRenderbuffer[s]=Tt.createRenderbuffer(),Tt.texImage2D(Tt.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,r,e.width,e.height,0,r,i,null);var o=e,u=Tt.TEXTURE_CUBE_MAP_POSITIVE_X+s;Tt.bindFramebuffer(Tt.FRAMEBUFFER,e.__webglFramebuffer[s]),Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,u,o.__webglTexture,0),O(e.__webglRenderbuffer[s],e)}n&&Tt.generateMipmap(Tt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Tt.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Tt.createRenderbuffer(),Tt.bindTexture(Tt.TEXTURE_2D,e.__webglTexture),A(Tt.TEXTURE_2D,e,n),Tt.texImage2D(Tt.TEXTURE_2D,0,r,e.width,e.height,0,r,i,null),r=Tt.TEXTURE_2D,Tt.bindFramebuffer(Tt.FRAMEBUFFER,e.__webglFramebuffer),Tt.framebufferTexture2D(Tt.FRAMEBUFFER,Tt.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Tt.framebufferRenderbuffer(Tt.FRAMEBUFFER,Tt.DEPTH_ATTACHMENT,Tt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Tt.framebufferRenderbuffer(Tt.FRAMEBUFFER,Tt.DEPTH_STENCIL_ATTACHMENT,Tt.RENDERBUFFER,e.__webglRenderbuffer):O(e.__webglRenderbuffer,e),n&&Tt.generateMipmap(Tt.TEXTURE_2D);t?Tt.bindTexture(Tt.TEXTURE_CUBE_MAP,null):Tt.bindTexture(Tt.TEXTURE_2D,null),Tt.bindRenderbuffer(Tt.RENDERBUFFER,null),Tt.bindFramebuffer(Tt.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,n=e.width,e=e.height,i=r=0):(t=null,n=ht,e=pt,r=lt,i=ct),t!==V&&(Tt.bindFramebuffer(Tt.FRAMEBUFFER,t),Tt.viewport(r,i,n,e),V=t),dt=n,vt=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,n){THREE.EventDispatcher.call(this),this.width=e,this.height=t,n=n||{},this.wrapS=void 0!==n.wrapS?n.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==n.wrapT?n.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n.magFilter?n.magFilter:THREE.LinearFilter,this.minFilter=void 0!==n.minFilter?n.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==n.format?n.format:THREE.RGBAFormat,this.type=void 0!==n.type?n.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==n.depthBuffer?n.depthBuffer:!0,this.stencilBuffer=void 0!==n.stencilBuffer?n.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,n,r){var i=THREE.ColorUtils.__hsv;e.getHSV(i),i.h=THREE.Math.clamp(i.h+t,0,1),i.s=THREE.Math.clamp(i.s+n,0,1),i.v=THREE.Math.clamp(i.v+r,0,1),e.setHSV(i.h,i.s,i.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var n,r,i=e.vertices.length,s=t instanceof THREE.Mesh?t.geometry:t,o=e.vertices,u=s.vertices,a=e.faces,f=s.faces,l=e.faceVertexUvs[0],s=s.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,r=new THREE.Matrix3,r.getInverse(n),r.transpose());for(var c=0,h=u.length;c<h;c++){var p=u[c].clone();n&&p.applyMatrix4(n),o.push(p)}c=0;for(h=f.length;c<h;c++){var p=f[c],d,v,m=p.vertexNormals,g=p.vertexColors;p instanceof THREE.Face3?d=new THREE.Face3(p.a+i,p.b+i,p.c+i):p instanceof THREE.Face4&&(d=new THREE.Face4(p.a+i,p.b+i,p.c+i,p.d+i)),d.normal.copy(p.normal),r&&d.normal.applyMatrix3(r).normalize(),o=0;for(u=m.length;o<u;o++)v=m[o].clone(),r&&v.applyMatrix3(r).normalize(),d.vertexNormals.push(v);d.color.copy(p.color),o=0;for(u=g.length;o<u;o++)v=g[o],d.vertexColors.push(v.clone());d.materialIndex=p.materialIndex,d.centroid.copy(p.centroid),n&&d.centroid.applyMatrix4(n),a.push(d)}c=0;for(h=s.length;c<h;c++){n=s[c],r=[],o=0;for(u=n.length;o<u;o++)r.push(new THREE.Vector2(n[o].x,n[o].y));l.push(r)}},removeMaterials:function(e,t){for(var n={},r=0,i=t.length;r<i;r++)n[t[r]]=!0;for(var s,o=[],r=0,i=e.faces.length;r<i;r++)s=e.faces[r],s.materialIndex in n||o.push(s);e.faces=o},randomPointInTriangle:function(e,t,n){var r,i,s,o=new THREE.Vector3,u=THREE.GeometryUtils.__v1;return r=THREE.GeometryUtils.random(),i=THREE.GeometryUtils.random(),1<r+i&&(r=1-r,i=1-i),s=1-r-i,o.copy(e),o.multiplyScalar(r),u.copy(t),u.multiplyScalar(i),o.add(u),u.copy(n),u.multiplyScalar(s),o.add(u),o},randomPointInFace:function(e,t,n){var r,i,s;if(e instanceof THREE.Face3)return r=t.vertices[e.a],i=t.vertices[e.b],s=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,i,s);if(e instanceof THREE.Face4){r=t.vertices[e.a],i=t.vertices[e.b],s=t.vertices[e.c];var t=t.vertices[e.d],o;return n?e._area1&&e._area2?(n=e._area1,o=e._area2):(n=THREE.GeometryUtils.triangleArea(r,i,t),o=THREE.GeometryUtils.triangleArea(i,s,t),e._area1=n,e._area2=o):(n=THREE.GeometryUtils.triangleArea(r,i,t),o=THREE.GeometryUtils.triangleArea(i,s,t)),THREE.GeometryUtils.random()*(n+o)<n?THREE.GeometryUtils.randomPointInTriangle(r,i,t):THREE.GeometryUtils.randomPointInTriangle(i,s,t)}},randomPointsInGeometry:function(e,t){function n(e){function t(n,r){if(r<n)return n;var i=n+Math.floor((r-n)/2);return f[i]>e?t(n,i-1):f[i]<e?t(i+1,r):i}return t(0,f.length-1)}var r,i,s=e.faces,o=e.vertices,u=s.length,a=0,f=[],l,c,h,p;for(i=0;i<u;i++)r=s[i],r instanceof THREE.Face3?(l=o[r.a],c=o[r.b],h=o[r.c],r._area=THREE.GeometryUtils.triangleArea(l,c,h)):r instanceof THREE.Face4&&(l=o[r.a],c=o[r.b],h=o[r.c],p=o[r.d],r._area1=THREE.GeometryUtils.triangleArea(l,c,p),r._area2=THREE.GeometryUtils.triangleArea(c,h,p),r._area=r._area1+r._area2),a+=r._area,f[i]=a;r=[];for(i=0;i<t;i++)o=THREE.GeometryUtils.random()*a,o=n(o),r[i]=THREE.GeometryUtils.randomPointInFace(s[o],e,!0);return r},triangleArea:function(e,t,n){var r=THREE.GeometryUtils.__v1,i=THREE.GeometryUtils.__v2;return r.subVectors(t,e),i.subVectors(n,e),r.cross(i),.5*r.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,n=new THREE.Vector3;return n.addVectors(t.min,t.max),n.multiplyScalar(-0.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(n.x,n.y,n.z)),e.computeBoundingBox(),n},normalizeUVs:function(e){for(var e=e.faceVertexUvs[0],t=0,n=e.length;t<n;t++)for(var r=e[t],i=0,s=r.length;i<s;i++)1!==r[i].x&&(r[i].x-=Math.floor(r[i].x)),1!==r[i].y&&(r[i].y-=Math.floor(r[i].y))},triangulateQuads:function(e){var t,n,r,i,s=[],o=[],u=[];t=0;for(n=e.faceUvs.length;t<n;t++)o[t]=[];t=0;for(n=e.faceVertexUvs.length;t<n;t++)u[t]=[];t=0;for(n=e.faces.length;t<n;t++)if(r=e.faces[t],r instanceof THREE.Face4){i=r.a;var a=r.b,f=r.c,l=r.d,c=new THREE.Face3,h=new THREE.Face3;c.color.copy(r.color),h.color.copy(r.color),c.materialIndex=r.materialIndex,h.materialIndex=r.materialIndex,c.a=i,c.b=a,c.c=l,h.a=a,h.b=f,h.c=l,4===r.vertexColors.length&&(c.vertexColors[0]=r.vertexColors[0].clone(),c.vertexColors[1]=r.vertexColors[1].clone(),c.vertexColors[2]=r.vertexColors[3].clone(),h.vertexColors[0]=r.vertexColors[1].clone(),h.vertexColors[1]=r.vertexColors[2].clone(),h.vertexColors[2]=r.vertexColors[3].clone()),s.push(c,h),r=0;for(i=e.faceVertexUvs.length;r<i;r++)e.faceVertexUvs[r].length&&(c=e.faceVertexUvs[r][t],a=c[1],f=c[2],l=c[3],c=[c[0].clone(),a.clone(),l.clone()],a=[a.clone(),f.clone(),l.clone()],u[r].push(c,a));r=0;for(i=e.faceUvs.length;r<i;r++)e.faceUvs[r].length&&(a=e.faceUvs[r][t],o[r].push(a,a))}else{s.push(r),r=0;for(i=e.faceUvs.length;r<i;r++)o[r].push(e.faceUvs[r][t]);r=0;for(i=e.faceVertexUvs.length;r<i;r++)u[r].push(e.faceVertexUvs[r][t])}e.faces=s,e.faceUvs=o,e.faceVertexUvs=u,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,n,r){e=e.faces,r=r||e.length-1;for(n=n||0;n<=r;n++)e[n].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,n,r){var i=new Image,s=new THREE.Texture(i,t),t=new THREE.ImageLoader;return t.addEventListener("load",function(e){s.image=e.content,s.needsUpdate=!0,n&&n(s)}),t.addEventListener("error",function(e){r&&r(e.message)}),t.crossOrigin=this.crossOrigin,t.load(e,i),s.sourceFile=e,s},loadCompressedTexture:function(e,t,n,r){var i=new THREE.CompressedTexture;i.mapping=t;var s=new XMLHttpRequest;return s.onload=function(){var e=THREE.ImageUtils.parseDDS(s.response,!0);i.format=e.format,i.mipmaps=e.mipmaps,i.image.width=e.width,i.image.height=e.height,i.generateMipmaps=!1,i.needsUpdate=!0,n&&n(i)},s.onerror=r,s.open("GET",e,!0),s.responseType="arraybuffer",s.send(null),i},loadTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.Texture;s.image=i,void 0!==t&&(s.mapping=t),s.flipY=!1;for(var t=0,o=e.length;t<o;++t){var u=new Image;i[t]=u,u.onload=function(){i.loadCount+=1,6===i.loadCount&&(s.needsUpdate=!0,n&&n(s))},u.onerror=r,u.crossOrigin=this.crossOrigin,u.src=e[t]}return s},loadCompressedTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i,void 0!==t&&(s.mapping=t),s.flipY=!1,s.generateMipmaps=!1,t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,i.loadCount+=1,6===i.loadCount&&(s.format=r.format,s.needsUpdate=!0,n&&n(s))}};if(e instanceof Array)for(var o=0,u=e.length;o<u;++o){var a={};i[o]=a;var f=new XMLHttpRequest;f.onload=t(f,a),f.onerror=r,a=e[o],f.open("GET",a,!0),f.responseType="arraybuffer",f.send(null)}else f=new XMLHttpRequest,f.onload=function(){var e=THREE.ImageUtils.parseDDS(f.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){i[r]={mipmaps:[]};for(var o=0;o<e.mipmapCount;o++)i[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+o]),i[r].format=e.format,i[r].width=e.width,i[r].height=e.height}s.format=e.format,s.needsUpdate=!0,n&&n(s)}},f.onerror=r,f.open("GET",e,!0),f.responseType="arraybuffer",f.send(null);return s},parseDDS:function(e,t){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},i=n("DXT1"),s=n("DXT3"),o=n("DXT5"),u=new Int32Array(e,0,31);if(542327876!==u[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(!u[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var a=u[21];switch(a){case i:i=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case s:i=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case o:i=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(a&255,a>>8&255,a>>16&255,a>>24&255)),r}r.mipmapCount=1,u[2]&131072&&!1!==t&&(r.mipmapCount=Math.max(1,u[7])),r.isCubemap=u[28]&512?!0:!1,r.width=u[4],r.height=u[3];for(var u=u[1]+4,s=r.width,o=r.height,a=r.isCubemap?6:1,f=0;f<a;f++){for(var l=0;l<r.mipmapCount;l++){var c=Math.max(4,s)/4*Math.max(4,o)/4*i,h={data:new Uint8Array(e,u,c),width:s,height:o};r.mipmaps.push(h),u+=c,s=Math.max(.5*s,1),o=Math.max(.5*o,1)}s=r.width,o=r.height}return r},getNormalMap:function(e,t){var n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=t|1,r=e.width,i=e.height,s=document.createElement("canvas");s.width=r,s.height=i;var o=s.getContext("2d");o.drawImage(e,0,0);for(var u=o.getImageData(0,0,r,i).data,a=o.createImageData(r,i),f=a.data,l=0;l<r;l++)for(var c=0;c<i;c++){var h=0>c-1?0:c-1,p=c+1>i-1?i-1:c+1,d=0>l-1?0:l-1,v=l+1>r-1?r-1:l+1,m=[],g=[0,0,u[4*(c*r+l)]/255*t];m.push([-1,0,u[4*(c*r+d)]/255*t]),m.push([-1,-1,u[4*(h*r+d)]/255*t]),m.push([0,-1,u[4*(h*r+l)]/255*t]),m.push([1,-1,u[4*(h*r+v)]/255*t]),m.push([1,0,u[4*(c*r+v)]/255*t]),m.push([1,1,u[4*(p*r+v)]/255*t]),m.push([0,1,u[4*(p*r+l)]/255*t]),m.push([-1,1,u[4*(p*r+d)]/255*t]),h=[],d=m.length;for(p=0;p<d;p++){var v=m[p],y=m[(p+1)%d],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]],y=[y[0]-g[0],y[1]-g[1],y[2]-g[2]];h.push(n([v[1]*y[2]-v[2]*y[1],v[2]*y[0]-v[0]*y[2],v[0]*y[1]-v[1]*y[0]]))}m=[0,0,0];for(p=0;p<h.length;p++)m[0]+=h[p][0],m[1]+=h[p][1],m[2]+=h[p][2];m[0]/=h.length,m[1]/=h.length,m[2]/=h.length,g=4*(c*r+l),f[g]=255*((m[0]+1)/2)|0,f[g+1]=255*((m[1]+1)/2)|0,f[g+2]=255*m[2]|0,f[g+3]=255}return o.putImageData(a,0,0),s},generateDataTexture:function(e,t,n){for(var r=e*t,i=new Uint8Array(3*r),s=Math.floor(255*n.r),o=Math.floor(255*n.g),n=Math.floor(255*n.b),u=0;u<r;u++)i[3*u]=s,i[3*u+1]=o,i[3*u+2]=n;return e=new THREE.DataTexture(i,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new THREE.Object3D,r=0,i=t.length;r<i;r++)n.add(new THREE.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),n=this.size/t.resolution,r=0,i=String(e).split(""),s=i.length,o=[],e=0;e<s;e++){var u=new THREE.Path,u=this.extractGlyphPoints(i[e],t,n,r,u),r=r+u.offset;o.push(u.path)}return{paths:o,offset:r/2}},extractGlyphPoints:function(e,t,n,r,i){var s=[],o,u,a,f,l,c,h,p,d,v,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o){t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),f=t.length;for(e=0;e<f;)switch(a=t[e++],a){case"m":a=t[e++]*n+r,l=t[e++]*n,i.moveTo(a,l);break;case"l":a=t[e++]*n+r,l=t[e++]*n,i.lineTo(a,l);break;case"q":a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*n,i.quadraticCurveTo(p,d,a,l);if(o=s[s.length-1]){c=o.x,h=o.y,o=1;for(u=this.divisions;o<=u;o++){var y=o/u;THREE.Shape.Utils.b2(y,c,p,a),THREE.Shape.Utils.b2(y,h,d,l)}}break;case"b":if(a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*-n,v=t[e++]*n+r,m=t[e++]*-n,i.bezierCurveTo(a,l,p,d,v,m),o=s[s.length-1]){c=o.x,h=o.y,o=1;for(u=this.divisions;o<=u;o++)y=o/u,THREE.Shape.Utils.b3(y,c,p,v,a),THREE.Shape.Utils.b3(y,h,d,m,l)}}}return{offset:g.ha*n,path:i}}}},THREE.FontUtils.generateShapes=function(e,t){var t=t||{},n=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",i=void 0!==t.weight?t.weight:"normal",s=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=n,THREE.FontUtils.face=r,THREE.FontUtils.weight=i,THREE.FontUtils.style=s,n=THREE.FontUtils.drawText(e).paths,r=[],i=0;for(s=n.length;i<s;i++)Array.prototype.push.apply(r,n[i].toShapes());return r},function(e){var t=function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n};return e.Triangulate=function(e,n){var r=e.length;if(3>r)return null;var i=[],s=[],o=[],u,a,f;if(0<t(e))for(a=0;a<r;a++)s[a]=a;else for(a=0;a<r;a++)s[a]=r-1-a;var l=2*r;for(a=r-1;2<r;){if(0>=l--){console.log("Warning, unable to triangulate polygon!");break}u=a,r<=u&&(u=0),a=u+1,r<=a&&(a=0),f=a+1,r<=f&&(f=0);var c;e:{var h=c=void 0,p=void 0,d=void 0,v=void 0,m=void 0,g=void 0,y=void 0,w=void 0,h=e[s[u]].x,p=e[s[u]].y,d=e[s[a]].x,v=e[s[a]].y,m=e[s[f]].x,g=e[s[f]].y;if(1e-10>(d-h)*(g-p)-(v-p)*(m-h))c=!1;else{var E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,k=void 0,L=void 0,A=void 0,O=void 0,A=L=k=w=y=void 0,E=m-d,S=g-v,x=h-m,T=p-g,N=d-h,C=v-p;for(c=0;c<r;c++)if(c!==u&&c!==a&&c!==f)if(y=e[s[c]].x,w=e[s[c]].y,k=y-h,L=w-p,A=y-d,O=w-v,y-=m,w-=g,A=E*O-S*A,k=N*L-C*k,L=x*w-T*y,0<=A&&0<=L&&0<=k){c=!1;break e}c=!0}}if(c){i.push([e[s[u]],e[s[a]],e[s[f]]]),o.push([s[u],s[a],s[f]]),u=a;for(f=a+1;f<r;u++,f++)s[u]=s[f];r--,l=2*r}}return n?o:i},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPoint(t/e));return n},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,s=0;t.push(0);for(i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var n=this.getLengths(),r=0,i=n.length,s;s=t?t:e*n[i-1];for(var o=0,u=i-1,a;o<=u;)if(r=Math.floor(o+(u-o)/2),a=n[r]-s,0>a)o=r+1;else{if(!(0<a)){u=r;break}u=r-1}return r=u,n[r]==s?r/(i-1):(o=n[r],n=(r+(s-o)/(n[r+1]-o))/(i-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e=e+1e-4;return 0>t&&(t=0),1<e&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e,this.v1=t,this.v2=n},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,n=[],r=this.points,i;return i=(r.length-1)*e,e=Math.floor(i),i-=e,n[0]=0==e?e:e-1,n[1]=e,n[2]=e>r.length-2?r.length-1:e+1,n[3]=e>r.length-3?r.length-1:e+2,t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i),t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i),t},THREE.EllipseCurve=function(e,t,n,r,i,s,o){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=o},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,n,r,i){var e=.5*(n-e),r=.5*(r-t),s=i*i;return(2*t-2*n+e+r)*i*s+(-3*t+3*n-2*e-r)*s+e*i+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e,this.v1=t,this.v2=n},function(e){var t,n;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,n,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},function(e){var t,n;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,n,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i,e=(r.length-1)*e;i=Math.floor(e),e-=i,n[0]=0==i?i:i-1,n[1]=i,n[2]=i>r.length-2?r.length-1:i+1,n[3]=i>r.length-3?r.length-1:i+2,i=r[n[0]];var s=r[n[1]],o=r[n[2]],n=r[n[3]];return t.x=THREE.Curve.Utils.interpolate(i.x,s.x,o.x,n.x,e),t.y=THREE.Curve.Utils.interpolate(i.y,s.y,o.y,n.y,e),t.z=THREE.Curve.Utils.interpolate(i.z,s.z,o.z,n.z,e),t}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i;return i=(r.length-0)*e,e=Math.floor(i),i-=e,e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length,n[0]=(e-1)%r.length,n[1]=e%r.length,n[2]=(e+1)%r.length,n[3]=(e+2)%r.length,t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i),t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i),t.z=THREE.Curve.Utils.interpolate(r[n[0]].z,r[n[1]].z,r[n[2]].z,r[n[3]].z,i),t}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),e=0;e<n.length;){if(n[e]>=t)return t=n[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,n,r=this.curves.length;for(n=0;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,n,r,i,s,o;t=n=Number.NEGATIVE_INFINITY,i=s=Number.POSITIVE_INFINITY;var u,a,f,l,c=e[0]instanceof THREE.Vector3;l=c?new THREE.Vector3:new THREE.Vector2,a=0;for(f=e.length;a<f;a++)u=e[a],u.x>t?t=u.x:u.x<i&&(i=u.x),u.y>n?n=u.y:u.y<s&&(s=u.y),c&&(u.z>r?r=u.z:u.z<o&&(o=u.z)),l.add(u);return e={minX:i,minY:s,maxX:t,maxY:n,centroid:l.divideScalar(f)},c&&(e.maxZ=r,e.minZ=o),e},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,n=0;n<e.length;n++)t.vertices.push(new THREE.Vector3(e[n].x,e[n].y,e[n].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var n=this.getPoints(e),r,i;t||(t=this.bends),r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var n=this.getSpacedPoints(e),r,i;t||(t=this.bends),r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var n=this.getBoundingBox(),r,i,s,o,u,a;r=0;for(i=e.length;r<i;r++)s=e[r],o=s.x,u=s.y,a=o/n.maxX,a=t.getUtoTmapping(a,o),o=t.getPoint(a),u=t.getNormalVector(a).multiplyScalar(u),s.x=o.x+u.x,s.y=o.y+u.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})},THREE.Path.prototype.lineTo=function(e,t){var n=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:n})},THREE.Path.prototype.quadraticCurveTo=function(e,t,n,r){var i=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.QuadraticBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(s),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:i})},THREE.Path.prototype.bezierCurveTo=function(e,t,n,r,i,s){var o=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,u=new THREE.CubicBezierCurve(new THREE.Vector2(u[u.length-2],u[u.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(u),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,n=[new THREE.Vector2(n[n.length-2],n[n.length-1])];Array.prototype.push.apply(n,e),n=new THREE.SplineCurve(n),this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,n,r,i,s){var o=this.actions[this.actions.length-1].args;this.absarc(e+o[o.length-2],t+o[o.length-1],n,r,i,s)},THREE.Path.prototype.absarc=function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)},THREE.Path.prototype.ellipse=function(e,t,n,r,i,s,o){var u=this.actions[this.actions.length-1].args;this.absellipse(e+u[u.length-2],t+u[u.length-1],n,r,i,s,o)},THREE.Path.prototype.absellipse=function(e,t,n,r,i,s,o){var u=Array.prototype.slice.call(arguments),a=new THREE.EllipseCurve(e,t,n,r,i,s,o);this.curves.push(a),a=a.getPoint(o?1:0),u.push(a.x),u.push(a.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:u})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],n=0;n<e;n++)t.push(this.getPoint(n/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var e=e||12,n=[],r,i,s,o,u,a,f,l,c,h,p,d,v;r=0;for(i=this.actions.length;r<i;r++)switch(s=this.actions[r],o=s.action,s=s.args,o){case THREE.PathActions.MOVE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:u=s[2],a=s[3],c=s[0],h=s[1],0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b2(v,p,c,u),v=THREE.Shape.Utils.b2(v,d,h,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.BEZIER_CURVE_TO:u=s[4],a=s[5],c=s[0],h=s[1],f=s[2],l=s[3],0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b3(v,p,c,f,u),v=THREE.Shape.Utils.b3(v,d,h,l,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.CSPLINE_THRU:o=this.actions[r-1].args,v=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*s[0].length,v=v.concat(s[0]),v=new THREE.SplineCurve(v);for(s=1;s<=o;s++)n.push(v.getPointAt(s/o));break;case THREE.PathActions.ARC:u=s[0],a=s[1],h=s[2],f=s[3],o=s[4],c=!!s[5],p=o-f,d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+h*Math.sin(v),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.ELLIPSE:u=s[0],a=s[1],h=s[2],l=s[3],f=s[4],o=s[5],c=!!s[6],p=o-f,d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+l*Math.sin(v),n.push(new THREE.Vector2(o,v))}return r=n[n.length-1],1e-10>Math.abs(r.x-n[0].x)&&1e-10>Math.abs(r.y-n[0].y)&&n.splice(n.length-1,1),t&&n.push(n[0]),n},THREE.Path.prototype.toShapes=function(){var e,t,n,r,i=[],s=new THREE.Path;e=0;for(t=this.actions.length;e<t;e++)n=this.actions[e],r=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(i.push(s),s=new THREE.Path),s[n].apply(s,r);0!=s.actions.length&&i.push(s);if(0==i.length)return[];var o;r=[],e=!THREE.Shape.Utils.isClockWise(i[0].getPoints());if(1==i.length)return s=i[0],o=new THREE.Shape,o.actions=s.actions,o.curves=s.curves,r.push(o),r;if(e){o=new THREE.Shape,e=0;for(t=i.length;e<t;e++)s=i[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(o.actions=s.actions,o.curves=s.curves,r.push(o),o=new THREE.Shape):o.holes.push(s)}else{e=0;for(t=i.length;e<t;e++)s=i[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(o&&r.push(o),o=new THREE.Shape,o.actions=s.actions,o.curves=s.curves):o.holes.push(s);r.push(o)}return r},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var n=e.concat(),r=n.concat(),i,s,o,u,a,f,l,c,h,p,d=[];for(a=0;a<t.length;a++){f=t[a],Array.prototype.push.apply(r,f),s=Number.POSITIVE_INFINITY;for(i=0;i<f.length;i++){h=f[i],p=[];for(c=0;c<n.length;c++)l=n[c],l=h.distanceToSquared(l),p.push(l),l<s&&(s=l,o=i,u=c)}i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1;var v=[f[o],n[u],n[i]];c=THREE.FontUtils.Triangulate.area(v);var m=[f[o],f[s],n[u]];h=THREE.FontUtils.Triangulate.area(m),p=u,l=o,u+=1,o+=-1,0>u&&(u+=n.length),u%=n.length,0>o&&(o+=f.length),o%=f.length,i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1,v=[f[o],n[u],n[i]],v=THREE.FontUtils.Triangulate.area(v),m=[f[o],f[s],n[u]],m=THREE.FontUtils.Triangulate.area(m),c+h>v+m&&(u=p,o=l,0>u&&(u+=n.length),u%=n.length,0>o&&(o+=f.length),o%=f.length,i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1),c=n.slice(0,u),h=n.slice(u),p=f.slice(o),l=f.slice(0,o),s=[f[o],f[s],n[u]],d.push([f[o],n[u],n[i]]),d.push(s),n=c.concat(p).concat(l).concat(h)}return{shape:n,isolatedPts:d,allpoints:r}},triangulateShape:function(e,t){var n=THREE.Shape.Utils.removeHoles(e,t),r=n.allpoints,i=n.isolatedPts,n=THREE.FontUtils.Triangulate(n.shape,!1),s,o,u,a,f={};s=0;for(o=r.length;s<o;s++)a=r[s].x+":"+r[s].y,void 0!==f[a]&&console.log("Duplicate point",a),f[a]=s;s=0;for(o=n.length;s<o;s++){u=n[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}s=0;for(o=i.length;s<o;s++){u=i[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}return n.concat(i)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var n=1-e;return n*n*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,n,r){return this.b2p0(e,t)+this.b2p1(e,n)+this.b2p2(e,r)},b3p0:function(e,t){var n=1-e;return n*n*n*t},b3p1:function(e,t){var n=1-e;return 3*n*n*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,n,r,i){return this.b3p0(e,t)+this.b3p1(e,n)+this.b3p2(e,r)+this.b3p3(e,i)}},THREE.AnimationHandler=function(){var e=[],t={},n={update:function(t){for(var n=0;n<e.length;n++)e[n].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e;if(!0!==e.initialized){for(var n=0;n<e.hierarchy.length;n++){for(var r=0;r<e.hierarchy[n].keys.length;r++)if(0>e.hierarchy[n].keys[r].time&&(e.hierarchy[n].keys[r].time=0),void 0!==e.hierarchy[n].keys[r].rot&&!(e.hierarchy[n].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[n].keys[r].rot;e.hierarchy[n].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[n].keys.length&&void 0!==e.hierarchy[n].keys[0].morphTargets){i={};for(r=0;r<e.hierarchy[n].keys.length;r++)for(var s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++){var o=e.hierarchy[n].keys[r].morphTargets[s];i[o]=-1}e.hierarchy[n].usedMorphTargets=i;for(r=0;r<e.hierarchy[n].keys.length;r++){var u={};for(o in i){for(s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++)if(e.hierarchy[n].keys[r].morphTargets[s]===o){u[o]=e.hierarchy[n].keys[r].morphTargetsInfluences[s];break}s===e.hierarchy[n].keys[r].morphTargets.length&&(u[o]=0)}e.hierarchy[n].keys[r].morphTargetsInfluences=u}}for(r=1;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].time===e.hierarchy[n].keys[r-1].time&&(e.hierarchy[n].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].index=r}r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[];for(n=0;n<e.hierarchy.length;n++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var n=0;n<e.bones.length;n++)t.push(e.bones[n]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var n=0;n<e.children.length;n++)r(e.children[n],t)};return n.LINEAR=0,n.CATMULLROM=1,n.CATMULLROM_FORWARD=2,n}(),THREE.Animation=function(e,t,n){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==n?n:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var n,r=this.hierarchy.length,i;for(n=0;n<r;n++){i=this.hierarchy[n],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(i.useQuaternion=!0),i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var s=i.animationCache.prevKey;i=i.animationCache.nextKey,s.pos=this.data.hierarchy[n].keys[0],s.rot=this.data.hierarchy[n].keys[0],s.scl=this.data.hierarchy[n].keys[0],i.pos=this.getNextKeyWith("pos",n,1),i.rot=this.getNextKeyWith("rot",n,1),i.scl=this.getNextKeyWith("scl",n,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t=["pos","rot","scl"],n,r,i,s,o,u,a,f,l;l=this.currentTime+=e*this.timeScale,f=this.currentTime%=this.data.length,parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);for(var c=0,h=this.hierarchy.length;c<h;c++){e=this.hierarchy[c],a=e.animationCache;for(var p=0;3>p;p++){n=t[p],o=a.prevKey[n],u=a.nextKey[n];if(u.time<=l){if(f<l){if(!this.loop){this.stop();return}o=this.data.hierarchy[c].keys[0];for(u=this.getNextKeyWith(n,c,1);u.time<f;)o=u,u=this.getNextKeyWith(n,c,u.index+1)}else do o=u,u=this.getNextKeyWith(n,c,u.index+1);while(u.time<f);a.prevKey[n]=o,a.nextKey[n]=u}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,r=(f-o.time)/(u.time-o.time),i=o[n],s=u[n];if(0>r||1<r)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+c),r=0>r?0:1;if("pos"===n){if(n=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR)n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r;else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",c,o.index-1).pos,this.points[1]=i,this.points[2]=s,this.points[3]=this.getNextKeyWith("pos",c,u.index+1).pos,r=.33*r+.33,i=this.interpolateCatmullRom(this.points,r),n.x=i[0],n.y=i[1],n.z=i[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(r[0],r[1],r[2]),this.target.sub(n),this.target.y=0,this.target.normalize(),r=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,r,0))}else"rot"===n?THREE.Quaternion.slerp(i,s,e.quaternion,r):"scl"===n&&(n=e.scale,n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var n=[],r=[],i,s,o,u,a,f;return i=(e.length-1)*t,s=Math.floor(i),i-=s,n[0]=0===s?s:s-1,n[1]=s,n[2]=s>e.length-2?s:s+1,n[3]=s>e.length-3?s:s+2,s=e[n[0]],u=e[n[1]],a=e[n[2]],f=e[n[3]],n=i*i,o=i*n,r[0]=this.interpolate(s[0],u[0],a[0],f[0],i,n,o),r[1]=this.interpolate(s[1],u[1],a[1],f[1],i,n,o),r[2]=this.interpolate(s[2],u[2],a[2],f[2],i,n,o),r},THREE.Animation.prototype.interpolate=function(e,t,n,r,i,s,o){return e=.5*(n-e),r=.5*(r-t),(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?n<r.length-1?n:r.length-1:n%r.length;n<r.length;n++)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<n?n:0:0<=n?n:n+r.length;0<=n;n--)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,n){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0!==n?n:!0,e=0;for(t=this.hierarchy.length;e<t;e++){var n=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&n){for(var i=0;i<n.length;i++){var s=n[i],o=this.getNextKeyWith(s,e,0);o&&o.apply(s)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var n,r=this.hierarchy.length,i,s;for(n=0;n<r;n++)i=this.hierarchy[n],s=this.data.hierarchy[n],i.useQuaternion=!0,void 0===s.animationCache&&(s.animationCache={},s.animationCache.prevKey=null,s.animationCache.nextKey=null,s.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix),i=this.data.hierarchy[n].keys,i.length&&(s.animationCache.prevKey=i[0],s.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],n=this.data.hierarchy[e];if(void 0!==n.animationCache){var r=n.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete n.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,n,r,i,s=this.data.JIT.hierarchy,o,u,a;u=this.currentTime+=e*this.timeScale,o=this.currentTime%=this.data.length,o<this.startTimeMs&&(o=this.currentTime=this.startTimeMs+o),i=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);if((a=o<u)&&!this.loop){for(var e=0,f=this.hierarchy.length;e<f;e++){var l=this.data.hierarchy[e].keys,s=this.data.hierarchy[e].sids;r=l.length-1,i=this.hierarchy[e];if(l.length){for(l=0;l<s.length;l++)o=s[l],(u=this.getPrevKeyWith(o,e,r))&&u.apply(o);this.data.hierarchy[e].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(o<this.startTime)){e=0;for(f=this.hierarchy.length;e<f;e++){r=this.hierarchy[e],t=this.data.hierarchy[e];var l=t.keys,c=t.animationCache;if(this.JITCompile&&void 0!==s[e][i])r instanceof THREE.Bone?(r.skinMatrix=s[e][i],r.matrixWorldNeedsUpdate=!1):(r.matrix=s[e][i],r.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&c&&(r instanceof THREE.Bone?r.skinMatrix=c.originalMatrix:r.matrix=c.originalMatrix),t=c.prevKey,n=c.nextKey;if(t&&n){if(n.time<=u){if(a&&this.loop){t=l[0];for(n=l[1];n.time<o;)t=n,n=l[t.index+1]}else if(!a)for(var h=l.length-1;n.time<o&&n.index!==h;)t=n,n=l[t.index+1];c.prevKey=t,c.nextKey=n}n.time>=o?t.interpolate(n,o):t.interpolate(n,n.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===s[0][i]){this.hierarchy[0].updateMatrixWorld(!0);for(e=0;e<this.hierarchy.length;e++)s[e][i]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n%=t.length;n<t.length;n++)if(t[n].hasTarget(e))return t[n];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n=0<=n?n:n+t.length;0<=n;n--)if(t[n].hasTarget(e))return t[n];return t[t.length-1]},THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(-1,0,0)),this.add(i);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,-1),o.lookAt(new THREE.Vector3(0,-1,0)),this.add(o);var u=new THREE.PerspectiveCamera(90,1,e,t);u.up.set(0,-1,0),u.lookAt(new THREE.Vector3(0,0,1)),this.add(u);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(0,0,-1)),this.add(a),this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var n=this.renderTarget,l=n.generateMipmaps;n.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,r,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,s,n),n.activeCubeFace=3,e.render(t,o,n),n.activeCubeFace=4,e.render(t,u,n),n.generateMipmaps=l,n.activeCubeFace=5,e.render(t,a,n)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,n,r,i,s,o){THREE.Camera.call(this),this.fov=n,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,s,o),this.cameraP=new THREE.PerspectiveCamera(n,e/t,r,i),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var n=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(n),n},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var n=.707*e,r=.707*t,n=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[n,n,0],[r,r,0],[-n,-n,0],[-r,-r,0],[n,-n,0],[r,-r,0],[-n,n,0],[-r,r,0],[n,0,n],[r,0,r],[-n,0,-n],[-r,0,-r],[n,0,-n],[r,0,-r],[-n,0,n],[-r,0,r],[0,n,n],[0,r,r],[0,-n,-n],[0,-r,-r],[0,n,-n],[0,r,-r],[0,-n,n],[0,-r,r]],r=0,i=n.length;r<i;r++)this.vertices.push(new THREE.Vector3(n[r][0],n[r][1],n[r][2]))},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this);var e=e||50,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8,i,s=[];i=new THREE.Vector3;var o=new THREE.Vector2(.5,.5);this.vertices.push(i),s.push(o);for(i=0;i<=t;i++){var u=new THREE.Vector3;u.x=e*Math.cos(n+i/t*r),u.y=e*Math.sin(n+i/t*r),this.vertices.push(u),s.push(new THREE.Vector2((u.x/e+1)/2,-(u.y/e+1)/2+1))}n=new THREE.Vector3(0,0,-1);for(i=1;i<=t;i++)this.faces.push(new THREE.Face3(i,i+1,0,[n,n,n])),this.faceVertexUvs[0].push([s[i],s[i+1],o]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,n,r,i,s){function o(e,t,n,r,i,s,o,a){var f,l=u.widthSegments,c=u.heightSegments,h=i/2,p=s/2,d=u.vertices.length;if("x"===e&&"y"===t||"y"===e&&"x"===t)f="z";else if("x"===e&&"z"===t||"z"===e&&"x"===t)f="y",c=u.depthSegments;else if("z"===e&&"y"===t||"y"===e&&"z"===t)f="x",l=u.depthSegments;var v=l+1,m=c+1,g=i/l,y=s/c,b=new THREE.Vector3;b[f]=0<o?1:-1;for(i=0;i<m;i++)for(s=0;s<v;s++){var w=new THREE.Vector3;w[e]=(s*g-h)*n,w[t]=(i*y-p)*r,w[f]=o,u.vertices.push(w)}for(i=0;i<c;i++)for(s=0;s<l;s++)e=new THREE.Face4(s+v*i+d,s+v*(i+1)+d,s+1+v*(i+1)+d,s+1+v*i+d),e.normal.copy(b),e.vertexNormals.push(b.clone(),b.clone(),b.clone(),b.clone()),e.materialIndex=a,u.faces.push(e),u.faceVertexUvs[0].push([new THREE.Vector2(s/l,1-i/c),new THREE.Vector2(s/l,1-(i+1)/c),new THREE.Vector2((s+1)/l,1-(i+1)/c),new THREE.Vector2((s+1)/l,1-i/c)])}THREE.Geometry.call(this);var u=this;this.width=e,this.height=t,this.depth=n,this.widthSegments=r||1,this.heightSegments=i||1,this.depthSegments=s||1,e=this.width/2,t=this.height/2,n=this.depth/2,o("z","y",-1,-1,this.depth,this.height,e,0),o("z","y",1,-1,this.depth,this.height,-e,1),o("x","z",1,1,this.width,this.depth,t,2),o("x","z",1,-1,this.width,this.depth,-t,3),o("x","y",1,-1,this.width,this.height,n,4),o("x","y",-1,-1,this.width,this.height,-n,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);var e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,o=n/2,r=r||8,i=i||1,u,a,f=[],l=[];for(a=0;a<=i;a++){var c=[],h=[],p=a/i,d=p*(t-e)+e;for(u=0;u<=r;u++){var v=u/r,m=new THREE.Vector3;m.x=d*Math.sin(2*v*Math.PI),m.y=-p*n+o,m.z=d*Math.cos(2*v*Math.PI),this.vertices.push(m),c.push(this.vertices.length-1),h.push(new THREE.Vector2(v,1-p))}f.push(c),l.push(h)}n=(t-e)/n;for(u=0;u<r;u++){0!==e?(c=this.vertices[f[0][u]].clone(),h=this.vertices[f[0][u+1]].clone()):(c=this.vertices[f[1][u]].clone(),h=this.vertices[f[1][u+1]].clone()),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*n).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*n).normalize();for(a=0;a<i;a++){var p=f[a][u],d=f[a+1][u],v=f[a+1][u+1],m=f[a][u+1],g=c.clone(),y=c.clone(),b=h.clone(),w=h.clone(),E=l[a][u].clone(),S=l[a+1][u].clone(),x=l[a+1][u+1].clone(),T=l[a][u+1].clone();this.faces.push(new THREE.Face4(p,d,v,m,[g,y,b,w])),this.faceVertexUvs[0].push([E,S,x,T])}}if(!s&&0<e){this.vertices.push(new THREE.Vector3(0,o,0));for(u=0;u<r;u++)p=f[0][u],d=f[0][u+1],v=this.vertices.length-1,g=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),E=l[0][u].clone(),S=l[0][u+1].clone(),x=new THREE.Vector2(S.u,0),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}if(!s&&0<t){this.vertices.push(new THREE.Vector3(0,-o,0));for(u=0;u<r;u++)p=f[a][u+1],d=f[a][u],v=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),E=l[a][u+1].clone(),S=l[a][u].clone(),x=new THREE.Vector2(S.u,1),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;r<n;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function n(e,t,n){return t||console.log("die"),t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r=THREE.ExtrudeGeometry.__v1,i=THREE.ExtrudeGeometry.__v2,s=THREE.ExtrudeGeometry.__v3,o=THREE.ExtrudeGeometry.__v4,u=THREE.ExtrudeGeometry.__v5,a=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),i.set(e.x-n.x,e.y-n.y),r=r.normalize(),i=i.normalize(),s.set(-r.y,r.x),o.set(i.y,-i.x),u.copy(e).add(s),a.copy(e).add(o),u.equals(a)?o.clone():(u.copy(t).add(s),a.copy(n).add(o),s=r.dot(o),o=a.sub(u).dot(o),0===s&&(console.log("Either infinite or no solutions!"),0===o?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),o/=s,0>o?(t=Math.atan2(t.y-e.y,t.x-e.x),e=Math.atan2(n.y-e.y,n.x-e.x),t>e&&(e+=2*Math.PI),n=(t+e)/2,e=-Math.cos(n),n=-Math.sin(n),new THREE.Vector2(e,n)):r.multiplyScalar(o).add(u).sub(e).clone())}function i(n,r){var i,s;for(F=n.length;0<=--F;){i=F,s=F-1,0>s&&(s=n.length-1);for(var o=0,u=p+2*l,o=0;o<u;o++){var a=H*o,f=H*(o+1),c=r+i+a,a=r+s+a,h=r+s+f,f=r+i+f,d=n,v=o,m=u,g=i,w=s,c=c+L,a=a+L,h=h+L,f=f+L;k.faces.push(new THREE.Face4(c,a,h,f,null,null,y)),c=b.generateSideWallUV(k,e,d,t,c,a,h,f,v,m,g,w),k.faceVertexUvs[0].push(c)}}}function s(e,t,n){k.vertices.push(new THREE.Vector3(e,t,n))}function o(n,r,i,s){n+=L,r+=L,i+=L,k.faces.push(new THREE.Face3(n,r,i,null,null,g)),n=s?b.generateBottomUV(k,e,t,n,r,i):b.generateTopUV(k,e,t,n,r,i),k.faceVertexUvs[0].push(n)}var u=void 0!==t.amount?t.amount:100,a=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:a-2,l=void 0!==t.bevelSegments?t.bevelSegments:3,c=void 0!==t.bevelEnabled?t.bevelEnabled:!0,h=void 0!==t.curveSegments?t.curveSegments:12,p=void 0!==t.steps?t.steps:1,d=t.extrudePath,v,m=!1,g=t.material,y=t.extrudeMaterial,b=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,E,S,x;d&&(v=d.getSpacedPoints(p),m=!0,c=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(d,p,!1),E=new THREE.Vector3,S=new THREE.Vector3,x=new THREE.Vector3),c||(f=a=l=0);var T,N,C,k=this,L=this.vertices.length,h=e.extractPoints(h),A=h.shape,h=h.holes;if(d=!THREE.Shape.Utils.isClockWise(A)){A=A.reverse(),N=0;for(C=h.length;N<C;N++)T=h[N],THREE.Shape.Utils.isClockWise(T)&&(h[N]=T.reverse());d=!1}var O=THREE.Shape.Utils.triangulateShape(A,h),d=A;N=0;for(C=h.length;N<C;N++)T=h[N],A=A.concat(T);var M,_,D,P,H=A.length,B=O.length,j=[],F=0,I=d.length;M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),j[F]=r(d[F],d[M],d[_]);var q=[],R,U=j.concat();N=0;for(C=h.length;N<C;N++){T=h[N],R=[],F=0,I=T.length,M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),R[F]=r(T[F],T[M],T[_]);q.push(R),U=U.concat(R)}for(M=0;M<l;M++){T=M/l,D=a*(1-T),_=f*Math.sin(T*Math.PI/2),F=0;for(I=d.length;F<I;F++)P=n(d[F],j[F],_),s(P.x,P.y,-D);N=0;for(C=h.length;N<C;N++){T=h[N],R=q[N],F=0;for(I=T.length;F<I;F++)P=n(T[F],R[F],_),s(P.x,P.y,-D)}}_=f;for(F=0;F<H;F++)P=c?n(A[F],U[F],_):A[F],m?(S.copy(w.normals[0]).multiplyScalar(P.x),E.copy(w.binormals[0]).multiplyScalar(P.y),x.copy(v[0]).add(S).add(E),s(x.x,x.y,x.z)):s(P.x,P.y,0);for(T=1;T<=p;T++)for(F=0;F<H;F++)P=c?n(A[F],U[F],_):A[F],m?(S.copy(w.normals[T]).multiplyScalar(P.x),E.copy(w.binormals[T]).multiplyScalar(P.y),x.copy(v[T]).add(S).add(E),s(x.x,x.y,x.z)):s(P.x,P.y,u/p*T);for(M=l-1;0<=M;M--){T=M/l,D=a*(1-T),_=f*Math.sin(T*Math.PI/2),F=0;for(I=d.length;F<I;F++)P=n(d[F],j[F],_),s(P.x,P.y,u+D);N=0;for(C=h.length;N<C;N++){T=h[N],R=q[N],F=0;for(I=T.length;F<I;F++)P=n(T[F],R[F],_),m?s(P.x,P.y+v[p-1].y,v[p-1].x+D):s(P.x,P.y,u+D)}}if(c){a=0*H;for(F=0;F<B;F++)u=O[F],o(u[2]+a,u[1]+a,u[0]+a,!0);a=H*(p+2*l);for(F=0;F<B;F++)u=O[F],o(u[0]+a,u[1]+a,u[2]+a,!1)}else{for(F=0;F<B;F++)u=O[F],o(u[2],u[1],u[0],!0);for(F=0;F<B;F++)u=O[F],o(u[0]+H*p,u[1]+H*p,u[2]+H*p,!1)}u=0,i(d,u),u+=d.length,N=0;for(C=h.length;N<C;N++)T=h[N],i(T,u),u+=T.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r,i,s){return t=e.vertices[i].x,i=e.vertices[i].y,n=e.vertices[s].x,s=e.vertices[s].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,i),new THREE.Vector2(n,s)]},generateBottomUV:function(e,t,n,r,i,s){return this.generateTopUV(e,t,n,r,i,s)},generateSideWallUV:function(e,t,n,r,i,s,o,u){var t=e.vertices[i].x,n=e.vertices[i].y,i=e.vertices[i].z,r=e.vertices[s].x,a=e.vertices[s].y,s=e.vertices[s].z,f=e.vertices[o].x,l=e.vertices[o].y,o=e.vertices[o].z,c=e.vertices[u].x,h=e.vertices[u].y,e=e.vertices[u].z;return.01>Math.abs(n-a)?[new THREE.Vector2(t,1-i),new THREE.Vector2(r,1-s),new THREE.Vector2(f,1-o),new THREE.Vector2(c,1-e)]:[new THREE.Vector2(n,1-i),new THREE.Vector2(a,1-s),new THREE.Vector2(l,1-o),new THREE.Vector2(h,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),0==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n=t.material,r=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,i,s,o,u=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var a=i.shape,f=i.holes;if(!THREE.Shape.Utils.isClockWise(a)){a=a.reverse(),i=0;for(s=f.length;i<s;i++)o=f[i],THREE.Shape.Utils.isClockWise(o)&&(f[i]=o.reverse())}var l=THREE.Shape.Utils.triangulateShape(a,f);i=0;for(s=f.length;i<s;i++)o=f[i],a=a.concat(o);f=a.length,s=l.length;for(i=0;i<f;i++)o=a[i],this.vertices.push(new THREE.Vector3(o.x,o.y,0));for(i=0;i<s;i++)f=l[i],a=f[0]+u,o=f[1]+u,f=f[2]+u,this.faces.push(new THREE.Face3(a,o,f,null,null,n)),this.faceVertexUvs[0].push(r.generateBottomUV(this,e,t,a,o,f))},THREE.LatheGeometry=function(e,t,n,r){THREE.Geometry.call(this);for(var t=t||12,n=n||0,r=r||2*Math.PI,i=1/(e.length-1),s=1/t,o=0,u=t;o<=u;o++)for(var a=n+o*s*r,f=Math.cos(a),l=Math.sin(a),a=0,c=e.length;a<c;a++){var h=e[a],p=new THREE.Vector3;p.x=f*h.x-l*h.y,p.y=l*h.x+f*h.y,p.z=h.z,this.vertices.push(p)}n=e.length,o=0;for(u=t;o<u;o++){a=0;for(c=e.length-1;a<c;a++)r=t=a+n*o,l=t+n,f=t+1+n,this.faces.push(new THREE.Face4(r,l,f,t+1)),f=o*s,t=a*i,r=f+s,l=t+i,this.faceVertexUvs[0].push([new THREE.Vector2(f,t),new THREE.Vector2(r,t),new THREE.Vector2(r,l),new THREE.Vector2(f,l)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=n||1,this.heightSegments=r||1;for(var n=e/2,i=t/2,r=this.widthSegments,s=this.heightSegments,o=r+1,u=s+1,a=this.width/r,f=this.height/s,l=new THREE.Vector3(0,0,1),e=0;e<u;e++)for(t=0;t<o;t++)this.vertices.push(new THREE.Vector3(t*a-n,-(e*f-i),0));for(e=0;e<s;e++)for(t=0;t<r;t++)n=new THREE.Face4(t+o*e,t+o*(e+1),t+1+o*(e+1),t+1+o*e),n.normal.copy(l),n.vertexNormals.push(l.clone(),l.clone(),l.clone(),l.clone()),this.faces.push(n),this.faceVertexUvs[0].push([new THREE.Vector2(t/r,1-e/s),new THREE.Vector2(t/r,1-(e+1)/s),new THREE.Vector2((t+1)/r,1-(e+1)/s),new THREE.Vector2((t+1)/r,1-e/s)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(n)||6);for(var r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,s=void 0!==s?s:0,o=void 0!==o?o:Math.PI,u=[],a=[],n=0;n<=this.heightSegments;n++){for(var f=[],l=[],t=0;t<=this.widthSegments;t++){var c=t/this.widthSegments,h=n/this.heightSegments,p=new THREE.Vector3;p.x=-this.radius*Math.cos(r+c*i)*Math.sin(s+h*o),p.y=this.radius*Math.cos(s+h*o),p.z=this.radius*Math.sin(r+c*i)*Math.sin(s+h*o),this.vertices.push(p),f.push(this.vertices.length-1),l.push(new THREE.Vector2(c,1-h))}u.push(f),a.push(l)}for(n=0;n<this.heightSegments;n++)for(t=0;t<this.widthSegments;t++){var r=u[n][t+1],i=u[n][t],s=u[n+1][t],o=u[n+1][t+1],f=this.vertices[r].clone().normalize(),l=this.vertices[i].clone().normalize(),c=this.vertices[s].clone().normalize(),h=this.vertices[o].clone().normalize(),p=a[n][t+1].clone(),d=a[n][t].clone(),v=a[n+1][t].clone(),m=a[n+1][t+1].clone();Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(r,s,o,[f,c,h])),this.faceVertexUvs[0].push([p,v,m])):Math.abs(this.vertices[s].y)===this.radius?(this.faces.push(new THREE.Face3(r,i,s,[f,l,c])),this.faceVertexUvs[0].push([p,d,v])):(this.faces.push(new THREE.Face4(r,i,s,o,[f,l,c,h])),this.faceVertexUvs[0].push([p,d,v,m]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var n=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,n,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=n||8,this.tubularSegments=r||6,this.arc=i||2*Math.PI,i=new THREE.Vector3,e=[],t=[];for(n=0;n<=this.radialSegments;n++)for(r=0;r<=this.tubularSegments;r++){var s=r/this.tubularSegments*this.arc,o=2*n/this.radialSegments*Math.PI;i.x=this.radius*Math.cos(s),i.y=this.radius*Math.sin(s);var u=new THREE.Vector3;u.x=(this.radius+this.tube*Math.cos(o))*Math.cos(s),u.y=(this.radius+this.tube*Math.cos(o))*Math.sin(s),u.z=this.tube*Math.sin(o),this.vertices.push(u),e.push(new THREE.Vector2(r/this.tubularSegments,n/this.radialSegments)),t.push(u.clone().sub(i).normalize())}for(n=1;n<=this.radialSegments;n++)for(r=1;r<=this.tubularSegments;r++){var i=(this.tubularSegments+1)*n+r-1,s=(this.tubularSegments+1)*(n-1)+r-1,o=(this.tubularSegments+1)*(n-1)+r,u=(this.tubularSegments+1)*n+r,a=new THREE.Face4(i,s,o,u,[t[i],t[s],t[o],t[u]]);a.normal.add(t[i]),a.normal.add(t[s]),a.normal.add(t[o]),a.normal.add(t[u]),a.normal.normalize(),this.faces.push(a),this.faceVertexUvs[0].push([e[i].clone(),e[s].clone(),e[o].clone(),e[u].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){function u(e,t,n,r,i,s){var o=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=n/r,n=Math.cos(e),o*=.5*i*(2+n),t=.5*i*(2+n)*t,i=.5*s*i*Math.sin(e),new THREE.Vector3(o,t,i)}THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=n||64,this.tubularSegments=r||8,this.p=i||2,this.q=s||3,this.heightScale=o||1,this.grid=Array(this.radialSegments),n=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;for(e=0;e<this.radialSegments;++e){this.grid[e]=Array(this.tubularSegments);for(t=0;t<this.tubularSegments;++t){var a=2*(e/this.radialSegments)*this.p*Math.PI,o=2*(t/this.tubularSegments)*Math.PI,s=u(a,o,this.q,this.p,this.radius,this.heightScale),a=u(a+.01,o,this.q,this.p,this.radius,this.heightScale);n.subVectors(a,s),r.addVectors(a,s),i.crossVectors(n,r),r.crossVectors(i,n),i.normalize(),r.normalize(),a=-this.tube*Math.cos(o),o=this.tube*Math.sin(o),s.x+=a*r.x+o*i.x,s.y+=a*r.y+o*i.y,s.z+=a*r.z+o*i.z,this.grid[e][t]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1}}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var i=(e+1)%this.radialSegments,s=(t+1)%this.tubularSegments,n=this.grid[e][t],r=this.grid[i][t],i=this.grid[i][s],s=this.grid[e][s],o=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),a=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),f=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),l=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face4(n,r,i,s)),this.faceVertexUvs[0].push([o,a,f,l])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=n||1,this.radiusSegments=r||8,this.closed=i||!1,s&&(this.debug=new THREE.Object3D),this.grid=[];var o,u,i=this.segments+1,a,f,l,s=new THREE.Vector3,c,h,p,t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);c=t.tangents,h=t.normals,p=t.binormals,this.tangents=c,this.normals=h,this.binormals=p;for(t=0;t<i;t++){this.grid[t]=[],r=t/(i-1),l=e.getPointAt(r),r=c[t],o=h[t],u=p[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,l,n,255)),this.debug.add(new THREE.ArrowHelper(o,l,n,16711680)),this.debug.add(new THREE.ArrowHelper(u,l,n,65280)));for(r=0;r<this.radiusSegments;r++)a=2*(r/this.radiusSegments)*Math.PI,f=-this.radius*Math.cos(a),a=this.radius*Math.sin(a),s.copy(l),s.x+=f*o.x+a*u.x,s.y+=f*o.y+a*u.y,s.z+=f*o.z+a*u.z,this.grid[t][r]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1}for(t=0;t<this.segments;t++)for(r=0;r<this.radiusSegments;r++)i=this.closed?(t+1)%this.segments:t+1,s=(r+1)%this.radiusSegments,e=this.grid[t][r],n=this.grid[i][r],i=this.grid[i][s],s=this.grid[t][s],c=new THREE.Vector2(t/this.segments,r/this.radiusSegments),h=new THREE.Vector2((t+1)/this.segments,r/this.radiusSegments),p=new THREE.Vector2((t+1)/this.segments,(r+1)/this.radiusSegments),o=new THREE.Vector2(t/this.segments,(r+1)/this.radiusSegments),this.faces.push(new THREE.Face4(e,n,i,s)),this.faceVertexUvs[0].push([c,h,p,o]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,n){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var i=[],s=[],o=[],u=new THREE.Vector3,a=new THREE.Matrix4,t=t+1,f,l,c;this.tangents=i,this.normals=s,this.binormals=o;for(f=0;f<t;f++)l=f/(t-1),i[f]=e.getTangentAt(l),i[f].normalize();s[0]=new THREE.Vector3,o[0]=new THREE.Vector3,e=Number.MAX_VALUE,f=Math.abs(i[0].x),l=Math.abs(i[0].y),c=Math.abs(i[0].z),f<=e&&(e=f,r.set(1,0,0)),l<=e&&(e=l,r.set(0,1,0)),c<=e&&r.set(0,0,1),u.crossVectors(i[0],r).normalize(),s[0].crossVectors(i[0],u),o[0].crossVectors(i[0],s[0]);for(f=1;f<t;f++)s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),u.crossVectors(i[f-1],i[f]),1e-4<u.length()&&(u.normalize(),r=Math.acos(i[f-1].dot(i[f])),s[f].applyMatrix4(a.makeRotationAxis(u,r))),o[f].crossVectors(i[f],s[f]);if(n){r=Math.acos(s[0].dot(s[t-1])),r/=t-1,0<i[0].dot(u.crossVectors(s[0],s[t-1]))&&(r=-r);for(f=1;f<t;f++)s[f].applyMatrix4(a.makeRotationAxis(i[f],r*f)),o[f].crossVectors(i[f],s[f])}},THREE.PolyhedronGeometry=function(e,t,n,r){function i(e){var t=e.normalize().clone();t.index=a.vertices.push(t)-1;var n=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.Vector2(n,1-e),t}function s(e,t,n,r){1>r?(r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]),r.centroid.add(e).add(t).add(n).divideScalar(3),r.normal=r.centroid.clone().normalize(),a.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),a.faceVertexUvs[0].push([u(e.uv,e,r),u(t.uv,t,r),u(n.uv,n,r)])):(r-=1,s(e,o(e,t),o(e,n),r),s(o(e,t),t,o(t,n),r),s(o(e,n),o(t,n),n,r),s(o(e,t),o(t,n),o(e,n),r))}function o(e,t){c[e.index]||(c[e.index]=[]),c[t.index]||(c[t.index]=[]);var n=c[e.index][t.index];return void 0===n&&(c[e.index][t.index]=c[t.index][e.index]=n=i((new THREE.Vector3).addVectors(e,t).divideScalar(2))),n}function u(e,t,n){return 0>n&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(n/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this);for(var n=n||1,r=r||0,a=this,f=0,l=e.length;f<l;f++)i(new THREE.Vector3(e[f][0],e[f][1],e[f][2]));for(var c=[],e=this.vertices,f=0,l=t.length;f<l;f++)s(e[t[f][0]],e[t[f][1]],e[t[f][2]],r);this.mergeVertices(),f=0;for(l=this.vertices.length;f<l;f++)this.vertices[f].multiplyScalar(n);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,n,0],[1,n,0],[-1,-n,0],[1,-n,0],[0,-1,n],[0,1,n],[0,-1,-n],[0,1,-n],[n,0,-1],[n,0,1],[-n,0,-1],[-n,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,n,r){THREE.Geometry.call(this);var i=this.vertices,s=this.faces,o=this.faceVertexUvs[0],r=void 0===r?!1:r,u,a,f,l,c=t+1;for(u=0;u<=n;u++){l=u/n;for(a=0;a<=t;a++)f=a/t,f=e(f,l),i.push(f)}var h,p,d,v;for(u=0;u<n;u++)for(a=0;a<t;a++)e=u*c+a,i=u*c+a+1,l=(u+1)*c+a,f=(u+1)*c+a+1,h=new THREE.Vector2(a/t,u/n),p=new THREE.Vector2((a+1)/t,u/n),d=new THREE.Vector2(a/t,(u+1)/n),v=new THREE.Vector2((a+1)/t,(u+1)/n),r?(s.push(new THREE.Face3(e,i,l)),s.push(new THREE.Face3(i,f,l)),o.push([h,p,d]),o.push([p,v,d])):(s.push(new THREE.Face4(e,i,f,l)),o.push([h,p,v,d]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var n=[[0,1,2],[0,2,1]],r=3;r<e.length;r++){var i=r,s=e[i].clone(),o=s.length();s.x+=o*2e-6*(Math.random()-.5),s.y+=o*2e-6*(Math.random()-.5),s.z+=o*2e-6*(Math.random()-.5);for(var o=[],u=0;u<n.length;){var a=n[u],f=s,l=e[a[0]],c;c=l;var h=e[a[1]],p=e[a[2]],d=new THREE.Vector3,v=new THREE.Vector3;d.subVectors(p,h),v.subVectors(c,h),d.cross(v),d.normalize(),c=d,l=c.dot(l);if(c.dot(f)>=l){for(f=0;3>f;f++){l=[a[f],a[(f+1)%3]],c=!0;for(h=0;h<o.length;h++)if(o[h][0]===l[1]&&o[h][1]===l[0]){o[h]=o[o.length-1],o.pop(),c=!1;break}c&&o.push(l)}n[u]=n[n.length-1],n.pop()}else u++}for(h=0;h<o.length;h++)n.push([o[h][0],o[h][1],i])}i=0,s=Array(e.length);for(r=0;r<n.length;r++){o=n[r];for(u=0;3>u;u++)void 0===s[o[u]]&&(s[o[u]]=i++,this.vertices.push(e[o[u]])),o[u]=s[o[u]]}for(r=0;r<n.length;r++)this.faces.push(new THREE.Face3(n[r][0],n[r][1],n[r][2]));for(r=0;r<this.faces.length;r++)o=this.faces[r],this.faceVertexUvs[0].push([t(this.vertices[o.a]),t(this.vertices[o.b]),t(this.vertices[o.c])]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,n,r){THREE.Object3D.call(this),void 0===n&&(n=20),void 0===r&&(r=16776960);var i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(0,0,0)),i.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(i,new THREE.LineBasicMaterial({color:r})),this.add(this.line),i=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(n)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();.999<t.y?this.rotation.set(0,0,0):-0.999>t.y?this.rotation.set(Math.PI,0,0):(e=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),t=Math.acos(t.y),e=THREE.ArrowHelper.__q1.setFromAxisAngle(e,t),this.rotation.setEulerFromQuaternion(e,this.eulerOrder))},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,r){n(e,r),n(t,r)}function n(e,t){r.geometry.vertices.push(new THREE.Vector3),r.geometry.colors.push(new THREE.Color(t)),void 0===r.pointMap[e]&&(r.pointMap[e]=[]),r.pointMap[e].push(r.geometry.vertices.length-1)}THREE.Line.call(this);var r=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,n,r,i){THREE.CameraHelper.__v.set(n,r,i),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),e=t.pointMap[e];if(void 0!==e){n=0;for(r=e.length;n<r;n++)t.geometry.vertices[e[n]].copy(THREE.CameraHelper.__v)}}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-0.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var n=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(n);var n=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),i=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.MeshBasicMaterial({color:n,fog:!1}),o=new THREE.LineBasicMaterial({color:n,fog:!1});this.lightSphere=new THREE.Mesh(r,s),this.lightRays=new THREE.Line(i,o,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(r=new THREE.SphereGeometry(t,8,4),i=new THREE.MeshBasicMaterial({color:n,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(r,i),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,n=new THREE.LineDashedMaterial({color:n,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),r=new THREE.Geometry,r.vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,n),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,n){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(r);for(var r=this.groundColor.getHex(),s=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),u=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.MeshBasicMaterial({color:r,fog:!1}),f=0,l=s.faces.length;f<l;f++)s.faces[f].materialIndex=0;f=0;for(l=o.faces.length;f<l;f++)o.faces[f].materialIndex=1;THREE.GeometryUtils.merge(s,o),this.lightSphere=new THREE.Mesh(s,new THREE.MeshFaceMaterial([u,a])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+n),0),n,i),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+n),0),n,r),t=new THREE.Object3D,t.rotation.x=.5*-Math.PI,t.add(this.lightSphere),t.add(this.lightArrow),t.add(this.lightArrowGround),this.add(t),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var n=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(n);var r=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),i=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.IcosahedronGeometry(1,2),o=new THREE.MeshBasicMaterial({color:r,fog:!1}),u=new THREE.LineBasicMaterial({color:r,fog:!1}),r=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(n,o),this.lightRays=new THREE.Line(i,u,THREE.LinePieces),this.lightDistance=new THREE.Mesh(s,r),n=e.distance,0===n?this.lightDistance.visible=!1:this.lightDistance.scale.set(n,n,n),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color),e=this.light.distance,0===e?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(e,e,e))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var n=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(n);var n=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),i=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),o=new THREE.Matrix4;o.rotateX(-Math.PI/2),o.translate(new THREE.Vector3(0,-0.5,0)),s.applyMatrix(o);var u=new THREE.MeshBasicMaterial({color:n,fog:!1}),o=new THREE.LineBasicMaterial({color:n,fog:!1}),a=new THREE.MeshBasicMaterial({color:n,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(r,u),this.lightCone=new THREE.Mesh(s,a),r=e.distance?e.distance:1e4,s=2*r*Math.tan(.5*e.angle),this.lightCone.scale.set(s,s,r),this.lightRays=new THREE.Line(i,o,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(i=new THREE.SphereGeometry(t,8,4),o=new THREE.MeshBasicMaterial({color:n,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(i,o),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,n=new THREE.LineDashedMaterial({color:n,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),i=new THREE.Geometry,i.vertices.push(this.position.clone()),i.vertices.push(this.targetSphere.position.clone()),i.computeLineDistances(),this.targetLine=new THREE.Line(i,n),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e),e=THREE.Math.clamp(this.light.intensity,0,1),this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,i)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,n,r,i,s){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===s&&(s=1),void 0===i&&(i=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:1,opacity:s,color:i,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,n,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+i*n.distance,n.wantedRotation=.25*n.x*Math.PI,n.rotation+=.25*(n.wantedRotation-n.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length;this.createAnimation("__default",0,n-1,n/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){t={startFrame:t,endFrame:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,n,r={},i=this.geometry,s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s].name.match(t);if(u&&1<u.length){var a=u[1];r[a]||(r[a]={start:Infinity,end:-Infinity}),u=r[a],s<u.start&&(u.start=s),s>u.end&&(u.end=s),n||(n=a)}}for(a in r)u=r[a],this.createAnimation(a,u.start,u.end,e);this.firstAnimation=n},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){if(e=this.animationsMap[e])e.direction=1,e.directionBackwards=!1},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){if(e=this.animationsMap[e])e.direction=-1,e.directionBackwards=!0},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;if(e=this.animationsMap[e])t=e.time;return t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;if(e=this.animationsMap[e])t=e.duration;return t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){if(e=this.animationsMap[e])e.active=!1},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||0>r.time)r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)}else r.time%=r.duration,0>r.time&&(r.time+=r.duration);var s=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;s!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[s]=0,r.lastFrame=r.currentFrame,r.currentFrame=s),i=r.time%i/i,r.directionBackwards&&(i=1-i),this.morphTargetInfluences[r.currentFrame]=i*o,this.morphTargetInfluences[r.lastFrame]=(1-i)*o}}},THREE.LensFlarePlugin=function(){function e(e,n){var r=t.createProgram(),i=t.createShader(t.FRAGMENT_SHADER),s=t.createShader(t.VERTEX_SHADER),o="precision "+n+" float;\n";return t.shaderSource(i,o+e.fragmentShader),t.shaderSource(s,o+e.vertexShader),t.compileShader(i),t.compileShader(s),t.attachShader(r,i),t.attachShader(r,s),t.linkProgram(r),r}var t,n,r,i,s,o,u,a,f,l,c,h,p;this.init=function(v){t=v.context,n=v,r=v.getPrecision(),i=new Float32Array(16),s=new Uint16Array(6),v=0,i[v++]=-1,i[v++]=-1,i[v++]=0,i[v++]=0,i[v++]=1,i[v++]=-1,i[v++]=1,i[v++]=0,i[v++]=1,i[v++]=1,i[v++]=1,i[v++]=1,i[v++]=-1,i[v++]=1,i[v++]=0,i[v++]=1,v=0,s[v++]=0,s[v++]=1,s[v++]=2,s[v++]=0,s[v++]=2,s[v++]=3,o=t.createBuffer(),u=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u),t.bufferData(t.ELEMENT_ARRAY_BUFFER,s,t.STATIC_DRAW),a=t.createTexture(),f=t.createTexture(),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,f),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(l=!1,c=e(THREE.ShaderFlares.lensFlare,r)):(l=!0,c=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),h={},p={},h.vertex=t.getAttribLocation(c,"position"),h.uv=t.getAttribLocation(c,"uv"),p.renderType=t.getUniformLocation(c,"renderType"),p.map=t.getUniformLocation(c,"map"),p.occlusionMap=t.getUniformLocation(c,"occlusionMap"),p.opacity=t.getUniformLocation(c,"opacity"),p.color=t.getUniformLocation(c,"color"),p.scale=t.getUniformLocation(c,"scale"),p.rotation=t.getUniformLocation(c,"rotation"),p.screenPosition=t.getUniformLocation(c,"screenPosition")},this.render=function(e,r,i,s){var e=e.__webglFlares,d=e.length;if(d){var v=new THREE.Vector3,y=s/i,w=.5*i,E=.5*s,S=16/s,x=new THREE.Vector2(S*y,S),T=new THREE.Vector3(1,1,0),N=new THREE.Vector2(1,1),C=p,S=h;t.useProgram(c),t.enableVertexAttribArray(h.vertex),t.enableVertexAttribArray(h.uv),t.uniform1i(C.occlusionMap,0),t.uniform1i(C.map,1),t.bindBuffer(t.ARRAY_BUFFER,o),t.vertexAttribPointer(S.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(S.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u),t.disable(t.CULL_FACE),t.depthMask(!1);var L,A,O,M,_;for(L=0;L<d;L++)if(S=16/s,x.set(S*y,S),M=e[L],v.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),v.applyMatrix4(r.matrixWorldInverse),v.applyProjection(r.projectionMatrix),T.copy(v),N.x=T.x*w+w,N.y=T.y*E+E,l||0<N.x&&N.x<i&&0<N.y&&N.y<s){t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,a),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,N.x-8,N.y-8,16,16,0),t.uniform1i(C.renderType,0),t.uniform2f(C.scale,x.x,x.y),t.uniform3f(C.screenPosition,T.x,T.y,T.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,f),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,N.x-8,N.y-8,16,16,0),t.uniform1i(C.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,a),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),M.positionScreen.copy(T),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),t.uniform1i(C.renderType,2),t.enable(t.BLEND),A=0;for(O=M.lensFlares.length;A<O;A++)_=M.lensFlares[A],.001<_.opacity&&.001<_.scale&&(T.x=_.x,T.y=_.y,T.z=_.z,S=_.size*_.scale/s,x.x=S*y,x.y=S,t.uniform3f(C.screenPosition,T.x,T.y,T.z),t.uniform2f(C.scale,x.x,x.y),t.uniform1f(C.rotation,_.rotation),t.uniform1f(C.opacity,_.opacity),t.uniform3f(C.color,_.color.r,_.color.g,_.color.b),n.setBlending(_.blending,_.blendEquation,_.blendSrc,_.blendDst),n.setTexture(_.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=new THREE.Vector3,f=new THREE.Vector3;this.init=function(o){e=o.context,t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0}),n._shadowPass=!0,r._shadowPass=!0,i._shadowPass=!0,s._shadowPass=!0},this.render=function(e,n){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,n)},this.update=function(l,p){var v,m,y,w,E,S,x,T,N,C=[];w=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),v=0;for(m=l.__lights.length;v<m;v++)if(y=l.__lights[v],y.castShadow)if(y instanceof THREE.DirectionalLight&&y.shadowCascade)for(E=0;E<y.shadowCascadeCount;E++){var L;if(y.shadowCascadeArray[E])L=y.shadowCascadeArray[E];else{N=y,x=E,L=new THREE.DirectionalLight,L.isVirtual=!0,L.onlyShadow=!0,L.castShadow=!0,L.shadowCameraNear=N.shadowCameraNear,L.shadowCameraFar=N.shadowCameraFar,L.shadowCameraLeft=N.shadowCameraLeft,L.shadowCameraRight=N.shadowCameraRight,L.shadowCameraBottom=N.shadowCameraBottom,L.shadowCameraTop=N.shadowCameraTop,L.shadowCameraVisible=N.shadowCameraVisible,L.shadowDarkness=N.shadowDarkness,L.shadowBias=N.shadowCascadeBias[x],L.shadowMapWidth=N.shadowCascadeWidth[x],L.shadowMapHeight=N.shadowCascadeHeight[x],L.pointsWorld=[],L.pointsFrustum=[],T=L.pointsWorld,S=L.pointsFrustum;for(var A=0;8>A;A++)T[A]=new THREE.Vector3,S[A]=new THREE.Vector3;T=N.shadowCascadeNearZ[x],N=N.shadowCascadeFarZ[x],S[0].set(-1,-1,T),S[1].set(1,-1,T),S[2].set(-1,1,T),S[3].set(1,1,T),S[4].set(-1,-1,N),S[5].set(1,-1,N),S[6].set(-1,1,N),S[7].set(1,1,N),L.originalCamera=p,S=new THREE.Gyroscope,S.position=y.shadowCascadeOffset,S.add(L),S.add(L.target),p.add(S),y.shadowCascadeArray[E]=L,console.log("Created virtualLight",L)}x=y,T=E,N=x.shadowCascadeArray[T],N.position.copy(x.position),N.target.position.copy(x.target.position),N.lookAt(N.target),N.shadowCameraVisible=x.shadowCameraVisible,N.shadowDarkness=x.shadowDarkness,N.shadowBias=x.shadowCascadeBias[T],S=x.shadowCascadeNearZ[T],x=x.shadowCascadeFarZ[T],N=N.pointsFrustum,N[0].z=S,N[1].z=S,N[2].z=S,N[3].z=S,N[4].z=x,N[5].z=x,N[6].z=x,N[7].z=x,C[w]=L,w++}else C[w]=y,w++;v=0;for(m=C.length;v<m;v++){y=C[v],y.shadowMap||(E=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(E=THREE.NearestFilter),y.shadowMap=new THREE.WebGLRenderTarget(y.shadowMapWidth,y.shadowMapHeight,{minFilter:E,magFilter:E,format:THREE.RGBAFormat}),y.shadowMapSize=new THREE.Vector2(y.shadowMapWidth,y.shadowMapHeight),y.shadowMatrix=new THREE.Matrix4);if(!y.shadowCamera){if(y instanceof THREE.SpotLight)y.shadowCamera=new THREE.PerspectiveCamera(y.shadowCameraFov,y.shadowMapWidth/y.shadowMapHeight,y.shadowCameraNear,y.shadowCameraFar);else{if(!(y instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}y.shadowCamera=new THREE.OrthographicCamera(y.shadowCameraLeft,y.shadowCameraRight,y.shadowCameraTop,y.shadowCameraBottom,y.shadowCameraNear,y.shadowCameraFar)}l.add(y.shadowCamera),t.autoUpdateScene&&l.updateMatrixWorld()}y.shadowCameraVisible&&!y.cameraHelper&&(y.cameraHelper=new THREE.CameraHelper(y.shadowCamera),y.shadowCamera.add(y.cameraHelper));if(y.isVirtual&&L.originalCamera==p){E=p,w=y.shadowCamera,S=y.pointsFrustum,N=y.pointsWorld,a.set(Infinity,Infinity,Infinity),f.set(-Infinity,-Infinity,-Infinity);for(x=0;8>x;x++)T=N[x],T.copy(S[x]),THREE.ShadowMapPlugin.__projector.unprojectVector(T,E),T.applyMatrix4(w.matrixWorldInverse),T.x<a.x&&(a.x=T.x),T.x>f.x&&(f.x=T.x),T.y<a.y&&(a.y=T.y),T.y>f.y&&(f.y=T.y),T.z<a.z&&(a.z=T.z),T.z>f.z&&(f.z=T.z);w.left=a.x,w.right=f.x,w.top=f.y,w.bottom=a.y,w.updateProjectionMatrix()}w=y.shadowMap,S=y.shadowMatrix,E=y.shadowCamera,E.position.copy(y.matrixWorld.getPosition()),E.lookAt(y.target.matrixWorld.getPosition()),E.updateMatrixWorld(),E.matrixWorldInverse.getInverse(E.matrixWorld),y.cameraHelper&&(y.cameraHelper.visible=y.shadowCameraVisible),y.shadowCameraVisible&&y.cameraHelper.update(),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiply(E.projectionMatrix),S.multiply(E.matrixWorldInverse),u.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse),o.setFromMatrix(u),t.setRenderTarget(w),t.clear(),N=l.__webglObjects,y=0;for(w=N.length;y<w;y++)if(x=N[y],S=x.object,x.render=!1,S.visible&&S.castShadow&&(!(S instanceof THREE.Mesh||S instanceof THREE.ParticleSystem)||!S.frustumCulled||o.intersectsObject(S)))S._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,S.matrixWorld),x.render=!0;y=0;for(w=N.length;y<w;y++)x=N[y],x.render&&(S=x.object,x=x.buffer,A=S.material instanceof THREE.MeshFaceMaterial?S.material.materials[0]:S.material,T=0<S.geometry.morphTargets.length&&A.morphTargets,A=S instanceof THREE.SkinnedMesh&&A.skinning,T=S.customDepthMaterial?S.customDepthMaterial:A?T?s:i:T?r:n,x instanceof THREE.BufferGeometry?t.renderBufferDirect(E,l.__lights,null,T,x,S):t.renderBuffer(E,l.__lights,null,T,x,S));N=l.__webglObjectsImmediate,y=0;for(w=N.length;y<w;y++)x=N[y],S=x.object,S.visible&&S.castShadow&&(S._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,S.matrixWorld),t.renderImmediateObject(E,l.__lights,null,n,S))}v=t.getClearColor(),m=t.getClearAlpha(),e.clearColor(v.r,v.g,v.b,m),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,n,r,i,s,o,u,a,f,l;this.init=function(e){t=e.context,n=e,r=e.getPrecision(),i=new Float32Array(16),s=new Uint16Array(6),e=0,i[e++]=-1,i[e++]=-1,i[e++]=0,i[e++]=0,i[e++]=1,i[e++]=-1,i[e++]=1,i[e++]=0,i[e++]=1,i[e++]=1,i[e++]=1,i[e++]=1,i[e++]=-1,i[e++]=1,i[e++]=0,i[e++]=1,e=0,s[e++]=0,s[e++]=1,s[e++]=2,s[e++]=0,s[e++]=2,s[e++]=3,o=t.createBuffer(),u=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u),t.bufferData(t.ELEMENT_ARRAY_BUFFER,s,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,p=t.createProgram(),v=t.createShader(t.FRAGMENT_SHADER),m=t.createShader(t.VERTEX_SHADER),y="precision "+r+" float;\n";t.shaderSource(v,y+e.fragmentShader),t.shaderSource(m,y+e.vertexShader),t.compileShader(v),t.compileShader(m),t.attachShader(p,v),t.attachShader(p,m),t.linkProgram(p),a=p,f={},l={},f.position=t.getAttribLocation(a,"position"),f.uv=t.getAttribLocation(a,"uv"),l.uvOffset=t.getUniformLocation(a,"uvOffset"),l.uvScale=t.getUniformLocation(a,"uvScale"),l.rotation=t.getUniformLocation(a,"rotation"),l.scale=t.getUniformLocation(a,"scale"),l.alignment=t.getUniformLocation(a,"alignment"),l.color=t.getUniformLocation(a,"color"),l.map=t.getUniformLocation(a,"map"),l.opacity=t.getUniformLocation(a,"opacity"),l.useScreenCoordinates=t.getUniformLocation(a,"useScreenCoordinates"),l.sizeAttenuation=t.getUniformLocation(a,"sizeAttenuation"),l.screenPosition=t.getUniformLocation(a,"screenPosition"),l.modelViewMatrix=t.getUniformLocation(a,"modelViewMatrix"),l.projectionMatrix=t.getUniformLocation(a,"projectionMatrix"),l.fogType=t.getUniformLocation(a,"fogType"),l.fogDensity=t.getUniformLocation(a,"fogDensity"),l.fogNear=t.getUniformLocation(a,"fogNear"),l.fogFar=t.getUniformLocation(a,"fogFar"),l.fogColor=t.getUniformLocation(a,"fogColor"),l.alphaTest=t.getUniformLocation(a,"alphaTest")},this.render=function(r,i,s,p){var d=r.__webglSprites,v=d.length;if(v){var m=f,y=l,w=p/s,s=.5*s,E=.5*p;t.useProgram(a),t.enableVertexAttribArray(m.position),t.enableVertexAttribArray(m.uv),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,o),t.vertexAttribPointer(m.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(m.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u),t.uniformMatrix4fv(y.projectionMatrix,!1,i.projectionMatrix.elements),t.activeTexture(t.TEXTURE0),t.uniform1i(y.map,0);var S=m=0,x=r.fog;x?(t.uniform3f(y.fogColor,x.color.r,x.color.g,x.color.b),x instanceof THREE.Fog?(t.uniform1f(y.fogNear,x.near),t.uniform1f(y.fogFar,x.far),t.uniform1i(y.fogType,1),S=m=1):x instanceof THREE.FogExp2&&(t.uniform1f(y.fogDensity,x.density),t.uniform1i(y.fogType,2),S=m=2)):(t.uniform1i(y.fogType,0),S=m=0);for(var T,N,C=[],x=0;x<v;x++)T=d[x],N=T.material,T.visible&&0!==N.opacity&&(N.useScreenCoordinates?T.z=-T.position.z:(T._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]));d.sort(e);for(x=0;x<v;x++)T=d[x],N=T.material,T.visible&&0!==N.opacity&&N.map&&N.map.image&&N.map.image.width&&(t.uniform1f(y.alphaTest,N.alphaTest),!0===N.useScreenCoordinates?(t.uniform1i(y.useScreenCoordinates,1),t.uniform3f(y.screenPosition,(T.position.x*n.devicePixelRatio-s)/s,(E-T.position.y*n.devicePixelRatio)/E,Math.max(0,Math.min(1,T.position.z))),C[0]=n.devicePixelRatio,C[1]=n.devicePixelRatio):(t.uniform1i(y.useScreenCoordinates,0),t.uniform1i(y.sizeAttenuation,N.sizeAttenuation?1:0),t.uniformMatrix4fv(y.modelViewMatrix,!1,T._modelViewMatrix.elements),C[0]=1,C[1]=1),i=r.fog&&N.fog?S:0,m!==i&&(t.uniform1i(y.fogType,i),m=i),i=1/(N.scaleByViewport?p:1),C[0]*=i*w*T.scale.x,C[1]*=i*T.scale.y,t.uniform2f(y.uvScale,N.uvScale.x,N.uvScale.y),t.uniform2f(y.uvOffset,N.uvOffset.x,N.uvOffset.y),t.uniform2f(y.alignment,N.alignment.x,N.alignment.y),t.uniform1f(y.opacity,N.opacity),t.uniform3f(y.color,N.color.r,N.color.g,N.color.b),t.uniform1f(y.rotation,T.rotation),t.uniform2fv(y.scale,C),n.setBlending(N.blending,N.blendEquation,N.blendSrc,N.blendDst),n.setDepthTest(N.depthTest),n.setDepthWrite(N.depthWrite),n.setTexture(N.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4;this.init=function(o){e=o.context,t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0}),n._shadowPass=!0,r._shadowPass=!0,i._shadowPass=!0,s._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(l,h){var p,v,m,y,w,E;e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&l.updateMatrixWorld(),h.matrixWorldInverse.getInverse(h.matrixWorld),u.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse),o.setFromMatrix(u),t.setRenderTarget(this.renderTarget),t.clear(),E=l.__webglObjects,p=0;for(v=E.length;p<v;p++)if(m=E[p],w=m.object,m.render=!1,w.visible&&(!(w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)||!w.frustumCulled||o.intersectsObject(w)))w._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,w.matrixWorld),m.render=!0;var S;p=0;for(v=E.length;p<v;p++)if(m=E[p],m.render&&(w=m.object,m=m.buffer,!(w instanceof THREE.ParticleSystem)||w.customDepthMaterial))(S=w.material instanceof THREE.MeshFaceMaterial?w.material.materials[0]:w.material)&&t.setMaterialFaces(w.material),y=0<w.geometry.morphTargets.length&&S.morphTargets,S=w instanceof THREE.SkinnedMesh&&S.skinning,y=w.customDepthMaterial?w.customDepthMaterial:S?y?s:i:y?r:n,m instanceof THREE.BufferGeometry?t.renderBufferDirect(h,l.__lights,null,y,m,w):t.renderBuffer(h,l.__lights,null,y,m,w);E=l.__webglObjectsImmediate,p=0;for(v=E.length;p<v;p++)m=E[p],w=m.object,w.visible&&(w._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,w.matrixWorld),t.renderImmediateObject(h,l.__lights,null,n,w));p=t.getClearColor(),v=t.getClearAlpha(),e.clearColor(p.r,p.g,p.b,v),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}},define("three",function(e){return function(){var t,n;return t||e.THREE}}(this)),define("cpkAtoms",[],function(){return{H:16777215,He:14286847,Li:13402367,Be:12779264,B:16758197,C:9474192,N:3166456,O:16715021,F:9494608,Ne:11789301,Na:11230450,Mg:9109248,Al:12560038,Si:1578e4,P:16744448,S:16777008,Cl:2093087,Ar:8442339,K:9388244,Ca:4062976,Sc:15132390,Ti:12567239,V:10921643,Cr:9083335,Mn:10255047,Fe:14706227,Co:15765664,Ni:5296208,Cu:13140019,Zn:8224944,Ga:12750735,Ge:6721423,As:12419299,Se:16752896,Br:10889513,Kr:6076625,Rb:7351984,Sr:65280,Y:9764863,Zr:9756896,Nb:7586505,Mo:5551541,Tc:3907230,Ru:2396047,Rh:687500,Pd:27013,Ag:12632256,Cd:16767375,In:10909043,Sn:6717568,Sb:10380213,Te:13924864,I:9699476,Xe:4366e3,Cs:5707663,Ba:51456,La:7394559,Ce:16777159,Pr:14286791,Nd:13107143,Pm:10747847,Sm:9437127,Eu:6422471,Gd:4587463,Tb:3211207,Dy:2097095,Ho:65436,Er:58997,Tm:54354,Yb:48952,Lu:43812,Hf:5096191,Ta:5089023,W:2200790,Re:2522539,Os:2516630,Ir:1528967,Pt:13684960,Au:16765219,Hg:12105936,Tl:10900557,Pb:5724513,Bi:10375093,Po:11230208,At:7688005,Rn:4358806,Fr:4325478,Ra:32e3,Ac:7384058,Th:47871,Pa:41471,U:36863,Np:33023,Pu:27647,Am:5528818,Cm:7888099,Bk:9064419,Cf:10565332,Es:11739092,Fm:11739066,Md:11734438,No:12389767,Lr:13041766,Rf:13369433,Db:13697103,Sg:14221381,Bh:14680120,Hs:15073326,Mt:15400998}}),define("Atom",["three","cpkAtoms"],function(e,t){var n=function(e){this.sphereGeom=new THREE.SphereGeometry(4,32,16),this.sphereGeom.dynamic=!0,this.elementColor=t[e.element],this.material=new THREE.MeshLambertMaterial({color:this.elementColor}),THREE.Mesh.apply(this,[this.sphereGeom,this.material]),this.position.set(e.x,e.y,e.z),this.component_atom_id=e.component_atom_id};return n.prototype=Object.create(THREE.Mesh.prototype),n.prototype.constructor=n,n}),define("Bond",["three"],function(e){var t=function(e,t){this.atom1=t[e.atom1],this.atom2=t[e.atom2],this.bondType=e.bondType,this.path=new THREE.LineCurve3(new THREE.Vector3(this.atom2.x,this.atom2.y,this.atom2.z),new THREE.Vector3(this.atom1.x,this.atom1.y,this.atom1.z)),this.path.dynamic=!0,this.tubeGeom=new THREE.TubeGeometry(this.path),this.tubeGeom.dynamic=!0,this.bondColor=1052688,this.material=new THREE.MeshLambertMaterial({color:this.bondColor}),THREE.Mesh.apply(this,[this.tubeGeom,this.material])};return t.prototype=Object.create(THREE.Mesh.prototype),t.prototype.constructor=t,t}),Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.textAlign="center",e.style.background="#eee",e.style.color="#000",e.style.padding="1em",e.style.width="475px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,n,r;e=e||{},t=e.parent!==undefined?e.parent:document.body,n=e.id!==undefined?e.id:"oldie",r=Detector.getWebGLErrorMessage(),r.id=n,t.appendChild(r)}},define("detector",function(e){return function(){var t,n;return t||e.Detector}}(this));var Stats=function(){var e=Date.now(),t=e,n=0,r=Infinity,i=0,s=0,o=Infinity,u=0,a=0,f=0,l=document.createElement("div");l.id="stats",l.addEventListener("mousedown",function(e){e.preventDefault(),y(++f%2)},!1),l.style.cssText="width:80px;opacity:0.9;cursor:pointer";var c=document.createElement("div");c.id="fps",c.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002",l.appendChild(c);var h=document.createElement("div");h.id="fpsText",h.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",h.innerHTML="FPS",c.appendChild(h);var p=document.createElement("div");p.id="fpsGraph",p.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff",c.appendChild(p);while(p.children.length<74){var d=document.createElement("span");d.style.cssText="width:1px;height:30px;float:left;background-color:#113",p.appendChild(d)}var v=document.createElement("div");v.id="ms",v.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",l.appendChild(v);var m=document.createElement("div");m.id="msText",m.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",m.innerHTML="MS",v.appendChild(m);var g=document.createElement("div");g.id="msGraph",g.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0",v.appendChild(g);while(g.children.length<74){var d=document.createElement("span");d.style.cssText="width:1px;height:30px;float:left;background-color:#131",g.appendChild(d)}var y=function(e){f=e;switch(f){case 0:c.style.display="block",v.style.display="none";break;case 1:c.style.display="none",v.style.display="block"}},b=function(e,t){var n=e.appendChild(e.firstChild);n.style.height=t+"px"};return{REVISION:11,domElement:l,setMode:y,begin:function(){e=Date.now()},end:function(){var f=Date.now();return n=f-e,r=Math.min(r,n),i=Math.max(i,n),m.textContent=n+" MS ("+r+"-"+i+")",b(g,Math.min(30,30-n/200*30)),a++,f>t+1e3&&(s=Math.round(a*1e3/(f-t)),o=Math.min(o,s),u=Math.max(u,s),h.textContent=s+" FPS ("+o+"-"+u+")",b(p,Math.min(30,30-s/100*30)),t=f,a=0),f},update:function(){e=this.end()}}};define("stats",function(e){return function(){var t,n;return t||e.Stats}}(this)),THREE.TrackballControls=function(e,t){function g(e){if(n.enabled===!1)return;window.removeEventListener("keydown",g),o=s;if(s!==r.NONE)return;e.keyCode===n.keys[r.ROTATE]&&!n.noRotate?s=r.ROTATE:e.keyCode===n.keys[r.ZOOM]&&!n.noZoom?s=r.ZOOM:e.keyCode===n.keys[r.PAN]&&!n.noPan&&(s=r.PAN)}function y(e){if(n.enabled===!1)return;s=o,window.addEventListener("keydown",g,!1)}function b(e){if(n.enabled===!1)return;e.preventDefault(),e.stopPropagation(),s===r.NONE&&(s=e.button),s===r.ROTATE&&!n.noRotate?a=f=n.getMouseProjectionOnBall(e.clientX,e.clientY):s===r.ZOOM&&!n.noZoom?l=c=n.getMouseOnScreen(e.clientX,e.clientY):s===r.PAN&&!n.noPan&&(d=v=n.getMouseOnScreen(e.clientX,e.clientY)),document.addEventListener("mousemove",w,!1),document.addEventListener("mouseup",E,!1)}function w(e){if(n.enabled===!1)return;e.preventDefault(),e.stopPropagation(),s===r.ROTATE&&!n.noRotate?f=n.getMouseProjectionOnBall(e.clientX,e.clientY):s===r.ZOOM&&!n.noZoom?c=n.getMouseOnScreen(e.clientX,e.clientY):s===r.PAN&&!n.noPan&&(v=n.getMouseOnScreen(e.clientX,e.clientY))}function E(e){if(n.enabled===!1)return;e.preventDefault(),e.stopPropagation(),s=r.NONE,document.removeEventListener("mousemove",w),document.removeEventListener("mouseup",E)}function S(e){if(n.enabled===!1)return;e.preventDefault(),e.stopPropagation();var t=0;e.wheelDelta?t=e.wheelDelta/40:e.detail&&(t=-e.detail/3),l.y+=1/t*.05}function x(e){if(n.enabled===!1)return;switch(e.touches.length){case 1:s=r.TOUCH_ROTATE,a=f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:s=r.TOUCH_ZOOM;var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY;p=h=Math.sqrt(t*t+i*i);break;case 3:s=r.TOUCH_PAN,d=v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY);break;default:s=r.NONE}}function T(e){if(n.enabled===!1)return;e.preventDefault(),e.stopPropagation();switch(e.touches.length){case 1:f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY;p=Math.sqrt(t*t+i*i);break;case 3:v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY);break;default:s=r.NONE}}function N(e){if(n.enabled===!1)return;switch(e.touches.length){case 1:a=f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:h=p=0;break;case 3:d=v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY)}s=r.NONE}THREE.EventDispatcher.call(this);var n=this,r={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};this.object=e,this.domElement=t!==undefined?t:document,this.enabled=!0,this.screen={width:0,height:0,offsetLeft:0,offsetTop:0},this.radius=(this.screen.width+this.screen.height)/4,this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=Infinity,this.keys=[65,83,68],this.target=new THREE.Vector3;var i=new THREE.Vector3,s=r.NONE,o=r.NONE,u=new THREE.Vector3,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector2,c=new THREE.Vector2,h=0,p=0,d=new THREE.Vector2,v=new THREE.Vector2,m={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth,this.screen.height=window.innerHeight,this.screen.offsetLeft=0,this.screen.offsetTop=0,this.radius=(this.screen.width+this.screen.height)/4},this.handleEvent=function(e){typeof this[e.type]=="function"&&this[e.type](e)},this.getMouseOnScreen=function(e,t){return new THREE.Vector2((e-n.screen.offsetLeft)/n.radius*.5,(t-n.screen.offsetTop)/n.radius*.5)},this.getMouseProjectionOnBall=function(e,t){var r=new THREE.Vector3((e-n.screen.width*.5-n.screen.offsetLeft)/n.radius,(n.screen.height*.5+n.screen.offsetTop-t)/n.radius,0),i=r.length();i>1?r.normalize():r.z=Math.sqrt(1-i*i),u.copy(n.object.position).sub(n.target);var s=n.object.up.clone().setLength(r.y);return s.add(n.object.up.clone().cross(u).setLength(r.x)),s.add(u.setLength(r.z)),s},this.rotateCamera=function(){var e=Math.acos(a.dot(f)/a.length()/f.length());if(e){var t=(new THREE.Vector3).crossVectors(a,f).normalize(),r=new THREE.Quaternion;e*=n.rotateSpeed,r.setFromAxisAngle(t,-e),u.applyQuaternion(r),n.object.up.applyQuaternion(r),f.applyQuaternion(r),n.staticMoving?a.copy(f):(r.setFromAxisAngle(t,e*(n.dynamicDampingFactor-1)),a.applyQuaternion(r))}},this.zoomCamera=function(){if(s===r.TOUCH_ZOOM){var e=h/p;h=p,u.multiplyScalar(e)}else{var e=1+(c.y-l.y)*n.zoomSpeed;e!==1&&e>0&&(u.multiplyScalar(e),n.staticMoving?l.copy(c):l.y+=(c.y-l.y)*this.dynamicDampingFactor)}},this.panCamera=function(){var e=v.clone().sub(d);if(e.lengthSq()){e.multiplyScalar(u.length()*n.panSpeed);var t=u.clone().cross(n.object.up).setLength(e.x);t.add(n.object.up.clone().setLength(e.y)),n.object.position.add(t),n.target.add(t),n.staticMoving?d=v:d.add(e.subVectors(v,d).multiplyScalar(n.dynamicDampingFactor))}},this.checkDistances=function(){if(!n.noZoom||!n.noPan)n.object.position.lengthSq()>n.maxDistance*n.maxDistance&&n.object.position.setLength(n.maxDistance),u.lengthSq()<n.minDistance*n.minDistance&&n.object.position.addVectors(n.target,u.setLength(n.minDistance))},this.update=function(){u.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,u),n.checkDistances(),n.object.lookAt(n.target),i.distanceToSquared(n.object.position)>0&&(n.dispatchEvent(m),i.copy(n.object.position))},this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},!1),this.domElement.addEventListener("mousedown",b,!1),this.domElement.addEventListener("mousewheel",S,!1),this.domElement.addEventListener("DOMMouseScroll",S,!1),this.domElement.addEventListener("touchstart",x,!1),this.domElement.addEventListener("touchend",N,!1),this.domElement.addEventListener("touchmove",T,!1),window.addEventListener("keydown",g,!1),window.addEventListener("keyup",y,!1),this.handleResize()},define("trackballControls",["three"],function(e){return function(){var t,n;return t||e.TrackballControls}}(this));var THREEx=THREEx||{};THREEx.KeyboardState=function(){this.keyCodes={},this.modifiers={};var e=this;this._onKeyDown=function(t){e._onKeyChange(t,!0)},this._onKeyUp=function(t){e._onKeyChange(t,!1)},document.addEventListener("keydown",this._onKeyDown,!1),document.addEventListener("keyup",this._onKeyUp,!1)},THREEx.KeyboardState.prototype.destroy=function(){document.removeEventListener("keydown",this._onKeyDown,!1),document.removeEventListener("keyup",this._onKeyUp,!1)},THREEx.KeyboardState.MODIFIERS=["shift","ctrl","alt","meta"],THREEx.KeyboardState.ALIAS={left:37,up:38,right:39,down:40,space:32,pageup:33,pagedown:34,enter:13,tab:9,escape:27},THREEx.KeyboardState.prototype._onKeyChange=function(e,t){var n=e.keyCode;this.keyCodes[n]=t,this.modifiers.shift=e.shiftKey,this.modifiers.ctrl=e.ctrlKey,this.modifiers.alt=e.altKey,this.modifiers.meta=e.metaKey},THREEx.KeyboardState.prototype.pressed=function(e){var t=e.split("+");for(var n=0;n<t.length;n++){var r=t[n],i;THREEx.KeyboardState.MODIFIERS.indexOf(r)!==-1?i=this.modifiers[r]:Object.keys(THREEx.KeyboardState.ALIAS).indexOf(r)!=-1?i=this.keyCodes[THREEx.KeyboardState.ALIAS[r]]:i=this.keyCodes[r.toUpperCase().charCodeAt(0)];if(!i)return!1}return!0},define("keyboardState",function(e){return function(){var t,n;return t||e.KeyboardState}}(this));var THREEx=THREEx||{};THREEx.FullScreen=THREEx.FullScreen||{},THREEx.FullScreen.available=function(){return this._hasWebkitFullScreen||this._hasMozFullScreen},THREEx.FullScreen.activated=function(){if(this._hasWebkitFullScreen)return document.webkitIsFullScreen;if(this._hasMozFullScreen)return document.mozFullScreen;console.assert(!1)},THREEx.FullScreen.request=function(e){e=e||document.body,this._hasWebkitFullScreen?e.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT):this._hasMozFullScreen?e.mozRequestFullScreen():console.assert(!1)},THREEx.FullScreen.cancel=function(){this._hasWebkitFullScreen?document.webkitCancelFullScreen():this._hasMozFullScreen?document.mozCancelFullScreen():console.assert(!1)},THREEx.FullScreen._hasWebkitFullScreen="webkitCancelFullScreen"in document?!0:!1,THREEx.FullScreen._hasMozFullScreen="mozCancelFullScreen"in document?!0:!1,THREEx.FullScreen.bindKey=function(e){e=e||{};var t=e.charCode||"f".charCodeAt(0),n=e.dblclick!==undefined?e.dblclick:!1,r=e.element,i=function(){THREEx.FullScreen.activated()?THREEx.FullScreen.cancel():THREEx.FullScreen.request(r)},s=function(e){if(e.which!==t)return;i()}.bind(this);return document.addEventListener("keypress",s,!1),n&&document.addEventListener("dblclick",i,!1),{unbind:function(){document.removeEventListener("keypress",s,!1),n&&document.removeEventListener("dblclick",i,!1)}}},define("fullScreen",function(e){return function(){var t,n;return t||e.FullScreen}}(this));var THREEx=THREEx||{};THREEx.WindowResize=function(e,t){var n=function(){e.setSize(window.innerWidth,window.innerHeight),t.aspect=window.innerWidth/window.innerHeight,t.updateProjectionMatrix()};return window.addEventListener("resize",n,!1),{stop:function(){window.removeEventListener("resize",n)}}},define("windowResize",function(e){return function(){var t,n;return t||e.WindowResize}}(this)),define("scene",["underscore","getAtoms","getBonds","Atom","Bond","three","detector","stats","trackballControls","keyboardState","fullScreen","windowResize"],function(e,t,n,r,i){return function(s,o,u){var a=parseInt(o.width)||parseInt(o.height)||window.innerWidth,f=parseInt(o.height)||parseInt(o.width)||window.innerHeight,l=o.stats||!1;Detector.webgl||Detector.addGetWebGLMessage();var c,h,p,d,v,m,g=new THREEx.KeyboardState,y=new THREE.Clock,b=function(){h=new THREE.Scene;var o=a,g=f,y=35,b=o/g,w=1,E=1e4;p=new THREE.PerspectiveCamera(y,b,w,E),h.add(p),p.position.set(0,150,400),p.lookAt(h.position),d=new THREE.WebGLRenderer({antialias:!0}),d.setSize(o,g),c=document.getElementById(s),c.appendChild(d.domElement),THREEx.WindowResize(d,p),THREEx.FullScreen.bindKey({charCode:"m".charCodeAt(0)}),v=new THREE.TrackballControls(p,d.domElement),v.zoomSpeed=.05,l&&(m=new Stats,m.domElement.style.zIndex=100,c.appendChild(m.domElement));var S=new THREE.PointLight(16316664);S.position.set(0,500,0),h.add(S);var x=new THREE.PointLight(16316664);x.position.set(0,-500,0),h.add(x);var T=new THREE.PointLight(13027014);T.position.set(0,0,-500),h.add(T);var N=new THREE.PointLight(13027014);N.position.set(0,0,500),h.add(N);var C=t(u),k=n(u);e.each(C,function(e){var t=new r(e);h.add(t)}),e.each(k,function(e){var t=new i(e,C);h.add(t)})},w=function(){requestAnimationFrame(w),S(),E()},E=function(){v.update(),l&&m.update()},S=function(){d.render(h,p)};b(),w()}}),require.config({baseUrl:"js/",shim:{three:{exports:"THREE"},detector:{exports:"Detector"},stats:{exports:"Stats"},trackballControls:{deps:["three"],exports:"TrackballControls"},keyboardState:{exports:"KeyboardState"},fullScreen:{exports:"FullScreen"},windowResize:{exports:"WindowResize"}},paths:{three:"vendor/threejs/three.min",detector:"vendor/threejs/Detector",stats:"vendor/threejs/Stats",trackballControls:"vendor/threejs/TrackballControls",keyboardState:"vendor/threex/THREEx.KeyboardState",fullScreen:"vendor/threex/THREEx.FullScreen",windowResize:"vendor/threex/THREEx.WindowResize",underscore:"vendor/underscore_amd/underscore-min",getAtoms:"app/get_atoms",getBonds:"app/get_bonds",cpkAtoms:"app/cpk_atoms",Atom:"app/Atom",Bond:"app/Bond",scene:"app/scene"}}),require(["underscore","scene"],function(e,t){var n=function(n,r){$.getJSON("http://mollyjs.com/api/pdb_compounds/"+n.join("&"),function(n){n?e.each(r,function(e){var r=$(e).data("mmcif"),i=r.id;n[i]?t(i,r,n[i]):$("#"+i).append("Compound not found.")}):$("body").append("Error getting data.")})},r=$(".mmCIF-compound"),i=e.reduce(r,function(e,t){return e.push($(t).attr("id")),e},[]);n(i,r)}),define("molly",function(){});